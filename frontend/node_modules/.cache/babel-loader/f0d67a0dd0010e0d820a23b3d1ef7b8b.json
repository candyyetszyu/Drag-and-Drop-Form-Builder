{"ast":null,"code":"import axios from'axios';// Define the API base URL\nconst BASE_API_URL=process.env.REACT_APP_API_URL||'http://localhost:3001/api';// Create an axios instance with default config\nconst api=axios.create({baseURL:BASE_API_URL,headers:{'Content-Type':'application/json'},timeout:10000});// Request interceptor for logging and authentication\napi.interceptors.request.use(config=>{// Log all API requests in development\nif(process.env.NODE_ENV==='development'){var _config$method;console.log(`API Request: ${(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase()} ${config.url}`);}// Add authentication token if available\nconst token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{console.error('API Request Error:',error);return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>{// Log API responses in development\nif(process.env.NODE_ENV==='development'){console.log(`API Response: ${response.status}`,response.data);}return response;},error=>{if(error.response){// Server returned an error response\nconsole.error(`API Error ${error.response.status}:`,error.response.data);// Handle authentication errors\nif(error.response.status===401){localStorage.removeItem('token');// Redirect to login page\nwindow.location.href='/login';}}else if(error.request){// Request made but no response received\nconsole.error('API No Response Error:',error.request);}else{// Error setting up request\nconsole.error('API Setup Error:',error.message);}return Promise.reject(error);});// API utility functions for common operations\nconst apiUtils={// Forms\ngetForms:()=>api.get('/forms'),getForm:id=>api.get(`/forms/${id}`),createForm:formData=>api.post('/forms',formData),updateForm:(id,formData)=>api.put(`/forms/${id}`,formData),deleteForm:id=>api.delete(`/forms/${id}`),// Form submissions\nsubmitForm:(formId,responseData)=>api.post(`/forms/${formId}/submit`,responseData),getSubmissions:formId=>api.get(`/forms/${formId}/submissions`),// Health check\ncheckHealth:()=>api.get('/health')};export{api,apiUtils,BASE_API_URL};","map":{"version":3,"names":["axios","BASE_API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","NODE_ENV","_config$method","console","log","method","toUpperCase","url","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","data","removeItem","window","location","href","message","apiUtils","getForms","get","getForm","id","createForm","formData","post","updateForm","put","deleteForm","delete","submitForm","formId","responseData","getSubmissions","checkHealth"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/api/apiConfig.js"],"sourcesContent":["import axios from 'axios';\n\n// Define the API base URL\nconst BASE_API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n// Create an axios instance with default config\nconst api = axios.create({\n  baseURL: BASE_API_URL,\n  headers: { 'Content-Type': 'application/json' },\n  timeout: 10000\n});\n\n// Request interceptor for logging and authentication\napi.interceptors.request.use(\n  config => {\n    // Log all API requests in development\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    }\n    \n    // Add authentication token if available\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    \n    return config;\n  },\n  error => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  response => {\n    // Log API responses in development\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`API Response: ${response.status}`, response.data);\n    }\n    return response;\n  },\n  error => {\n    if (error.response) {\n      // Server returned an error response\n      console.error(`API Error ${error.response.status}:`, error.response.data);\n      \n      // Handle authentication errors\n      if (error.response.status === 401) {\n        localStorage.removeItem('token');\n        // Redirect to login page\n        window.location.href = '/login';\n      }\n    } else if (error.request) {\n      // Request made but no response received\n      console.error('API No Response Error:', error.request);\n    } else {\n      // Error setting up request\n      console.error('API Setup Error:', error.message);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API utility functions for common operations\nconst apiUtils = {\n  // Forms\n  getForms: () => api.get('/forms'),\n  getForm: (id) => api.get(`/forms/${id}`),\n  createForm: (formData) => api.post('/forms', formData),\n  updateForm: (id, formData) => api.put(`/forms/${id}`, formData),\n  deleteForm: (id) => api.delete(`/forms/${id}`),\n  \n  // Form submissions\n  submitForm: (formId, responseData) => api.post(`/forms/${formId}/submit`, responseData),\n  getSubmissions: (formId) => api.get(`/forms/${formId}/submissions`),\n  \n  // Health check\n  checkHealth: () => api.get('/health')\n};\n\nexport { api, apiUtils, BASE_API_URL };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}