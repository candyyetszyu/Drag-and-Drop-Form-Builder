{"ast":null,"code":"var _jsxFileName = \"/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/builder/FormBuilderPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useApi } from '../../hooks/useApi';\nimport { useFormState } from '../../hooks/useFormState';\nimport FieldPalette from './FieldPalette';\nimport FormCanvas from './FormCanvas';\nimport FieldConfigPanel from './FieldConfigPanel';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport FormValidationModal from './FormValidationModal';\nimport { validateFormConfig } from '../../utils/formValidation';\nimport ThemeSelector from './ThemeSelector';\nimport { useTheme } from '../../context/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormBuilderPage = () => {\n  _s();\n  const configSectionRef = useRef(null);\n  const [fields, setFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n  const [isPreview, setIsPreview] = useState(false);\n  const {\n    loading,\n    error,\n    post\n  } = useApi();\n  const {\n    formValues,\n    handleInputChange\n  } = useFormState({\n    title: 'Untitled Form',\n    description: ''\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const [showValidationModal, setShowValidationModal] = useState(false);\n  const {\n    currentTheme,\n    setTheme,\n    themeColors\n  } = useTheme();\n  const handleAddField = fieldType => {\n    console.log(\"Adding field of type:\", fieldType);\n    const newField = {\n      id: Date.now().toString(),\n      type: fieldType,\n      question: `New ${fieldType} question`,\n      isRequired: false\n    };\n    if (fieldType === 'dropdown') {\n      newField.options = [{\n        value: 'Option 1',\n        label: 'Option 1'\n      }, {\n        value: 'Option 2',\n        label: 'Option 2'\n      }];\n    } else if (fieldType === 'table') {\n      newField.columns = [{\n        name: 'Column 1',\n        type: 'text'\n      }, {\n        name: 'Column 2',\n        type: 'text'\n      }];\n    } else if (fieldType === 'text') {\n      newField.minLength = 0;\n      newField.maxLength = 100;\n    }\n    setFields(prevFields => [...prevFields, newField]);\n    setSelectedField(newField);\n    console.log(\"Field added:\", newField);\n  };\n  const handleFieldSelection = field => {\n    console.log(\"Selected field:\", field);\n    setSelectedField(field);\n    if (configSectionRef.current) {\n      configSectionRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  const handleFieldUpdate = updatedField => {\n    console.log(\"Updating field:\", updatedField);\n    if (Array.isArray(updatedField)) {\n      setFields(updatedField);\n    } else {\n      setFields(prevFields => prevFields.map(field => field.id === updatedField.id ? updatedField : field));\n      if (selectedField && selectedField.id === updatedField.id) {\n        setSelectedField(updatedField);\n      }\n    }\n  };\n  const handleFieldDelete = fieldId => {\n    console.log(\"Deleting field:\", fieldId);\n    setFields(prevFields => prevFields.filter(field => field.id !== fieldId));\n    if (selectedField && selectedField.id === fieldId) {\n      setSelectedField(null);\n    }\n  };\n  const handleSaveForm = () => {\n    if (!formValues.title) {\n      alert(\"Please enter a form title before saving\");\n      return;\n    }\n    if (fields.length === 0) {\n      alert(\"Please add at least one field to your form\");\n      return;\n    }\n    setShowValidationModal(true);\n  };\n  const handleFinalSave = async formDataWithValidation => {\n    try {\n      console.log(\"Saving form:\", formDataWithValidation);\n      const result = await post('/forms', formDataWithValidation);\n      setShowValidationModal(false);\n      alert('Form saved successfully!');\n      return result;\n    } catch (err) {\n      console.error('Error saving form:', err);\n    }\n  };\n  const togglePreview = () => {\n    console.log(\"Toggling preview mode. Current state:\", isPreview);\n    setIsPreview(!isPreview);\n  };\n  const handleFieldDrop = (fieldType, index) => {\n    console.log(`Dropped ${fieldType} at index ${index}`);\n    const newField = {\n      id: Date.now().toString(),\n      type: fieldType,\n      question: `New ${fieldType} question`,\n      isRequired: false\n    };\n    if (fieldType === 'dropdown') {\n      newField.options = [{\n        value: 'Option 1',\n        label: 'Option 1'\n      }, {\n        value: 'Option 2',\n        label: 'Option 2'\n      }];\n    } else if (fieldType === 'table') {\n      newField.columns = [{\n        name: 'Column 1',\n        type: 'text'\n      }, {\n        name: 'Column 2',\n        type: 'text'\n      }];\n    } else if (fieldType === 'text') {\n      newField.minLength = 0;\n      newField.maxLength = 100;\n    }\n    const newFields = [...fields];\n    if (index !== undefined && index >= 0) {\n      newFields.splice(index, 0, newField);\n    } else {\n      newFields.push(newField);\n    }\n    setFields(newFields);\n    setSelectedField(newField);\n  };\n  const handleReorderField = (dragIndex, hoverIndex) => {\n    const draggedField = fields[dragIndex];\n    const newFields = [...fields];\n    newFields.splice(dragIndex, 1);\n    newFields.splice(hoverIndex, 0, draggedField);\n    setFields(newFields);\n  };\n  const scrollToConfig = () => {\n    if (configSectionRef.current) {\n      configSectionRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundColor: themeColors.backgroundColor,\n        color: themeColors.textColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormValidationModal, {\n        isOpen: showValidationModal,\n        onClose: () => setShowValidationModal(false),\n        formData: {\n          ...formValues,\n          fields\n        },\n        onSave: handleFinalSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"padding-responsive\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: isPreview ? 'Form Preview' : 'Form Builder'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), !isPreview && selectedField && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: scrollToConfig,\n          style: {\n            cursor: 'pointer',\n            textDecoration: 'underline',\n            color: '#2563eb',\n            marginTop: '0.5rem',\n            display: 'inline-block'\n          },\n          children: \"Jump to Field Configuration \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '1rem',\n            margin: '1rem 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: formValues.title,\n            onChange: handleInputChange,\n            className: \"input\",\n            placeholder: \"Form Title\",\n            style: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: togglePreview,\n            style: {\n              backgroundColor: themeColors.secondaryColor\n            },\n            children: isPreview ? 'Edit Form' : 'Preview Form'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleSaveForm,\n            disabled: loading,\n            style: {\n              backgroundColor: themeColors.primaryColor\n            },\n            children: loading ? 'Saving...' : 'Save Form'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), formErrors.title && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 text-sm\",\n          children: formErrors.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 32\n        }, this), formErrors.fields && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 text-sm\",\n          children: formErrors.fields\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 33\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        style: {\n          display: 'flex',\n          gap: '1rem',\n          minHeight: '500px'\n        },\n        children: [!isPreview && /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"padding-responsive\",\n          style: {\n            width: '250px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FieldPalette, {\n            onFieldSelect: handleAddField,\n            onDragDrop: handleFieldDrop,\n            themeColors: themeColors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6\",\n            children: /*#__PURE__*/_jsxDEV(ThemeSelector, {\n              onThemeSelect: setTheme,\n              currentTheme: currentTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"padding-responsive\",\n          style: {\n            flex: 1,\n            backgroundColor: themeColors.backgroundColor\n          },\n          children: /*#__PURE__*/_jsxDEV(FormCanvas, {\n            fields: fields,\n            isPreview: isPreview,\n            onFieldSelect: handleFieldSelection,\n            onFieldUpdate: handleFieldUpdate,\n            onFieldDelete: handleFieldDelete,\n            onDrop: handleFieldDrop,\n            onReorder: handleReorderField,\n            formId: \"preview\",\n            themeColors: themeColors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), !isPreview && selectedField && /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"padding-responsive\",\n          style: {\n            width: '300px',\n            backgroundColor: '#ffffff',\n            border: '1px solid #e5e7eb',\n            borderRadius: '0.5rem',\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)'\n          },\n          ref: configSectionRef,\n          id: \"field-configuration\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              paddingBottom: '0.5rem',\n              marginBottom: '0.5rem',\n              borderBottom: '1px solid #e5e7eb',\n              fontWeight: '600',\n              fontSize: '1.125rem',\n              color: '#111827'\n            },\n            children: \"Field Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FieldConfigPanel, {\n            field: selectedField,\n            onFieldUpdate: handleFieldUpdate,\n            availableFields: fields.filter(f => f.id !== selectedField.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(FormBuilderPage, \"f+YKdp/i32Mf1nZuLAZpiaN4+ik=\", false, function () {\n  return [useApi, useFormState, useTheme];\n});\n_c = FormBuilderPage;\nexport default FormBuilderPage;\nvar _c;\n$RefreshReg$(_c, \"FormBuilderPage\");","map":{"version":3,"names":["React","useState","useRef","useApi","useFormState","FieldPalette","FormCanvas","FieldConfigPanel","DndProvider","HTML5Backend","FormValidationModal","validateFormConfig","ThemeSelector","useTheme","jsxDEV","_jsxDEV","FormBuilderPage","_s","configSectionRef","fields","setFields","selectedField","setSelectedField","isPreview","setIsPreview","loading","error","post","formValues","handleInputChange","title","description","formErrors","setFormErrors","showValidationModal","setShowValidationModal","currentTheme","setTheme","themeColors","handleAddField","fieldType","console","log","newField","id","Date","now","toString","type","question","isRequired","options","value","label","columns","name","minLength","maxLength","prevFields","handleFieldSelection","field","current","scrollIntoView","behavior","handleFieldUpdate","updatedField","Array","isArray","map","handleFieldDelete","fieldId","filter","handleSaveForm","alert","length","handleFinalSave","formDataWithValidation","result","err","togglePreview","handleFieldDrop","index","newFields","undefined","splice","push","handleReorderField","dragIndex","hoverIndex","draggedField","scrollToConfig","backend","children","className","style","backgroundColor","color","textColor","isOpen","onClose","formData","onSave","fileName","_jsxFileName","lineNumber","columnNumber","onClick","cursor","textDecoration","marginTop","display","gap","margin","onChange","placeholder","flex","secondaryColor","disabled","primaryColor","minHeight","width","onFieldSelect","onDragDrop","onThemeSelect","onFieldUpdate","onFieldDelete","onDrop","onReorder","formId","border","borderRadius","boxShadow","ref","paddingBottom","marginBottom","borderBottom","fontWeight","fontSize","availableFields","f","_c","$RefreshReg$"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/builder/FormBuilderPage.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useApi } from '../../hooks/useApi';\nimport { useFormState } from '../../hooks/useFormState';\nimport FieldPalette from './FieldPalette';\nimport FormCanvas from './FormCanvas';\nimport FieldConfigPanel from './FieldConfigPanel';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport FormValidationModal from './FormValidationModal';\nimport { validateFormConfig } from '../../utils/formValidation';\nimport ThemeSelector from './ThemeSelector';\nimport { useTheme } from '../../context/ThemeContext';\n\nconst FormBuilderPage = () => {\n  const configSectionRef = useRef(null);\n  \n  const [fields, setFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n  const [isPreview, setIsPreview] = useState(false);\n  const { loading, error, post } = useApi();\n  const { formValues, handleInputChange } = useFormState({\n    title: 'Untitled Form',\n    description: '',\n  });\n\n  const [formErrors, setFormErrors] = useState({});\n  const [showValidationModal, setShowValidationModal] = useState(false);\n\n  const { currentTheme, setTheme, themeColors } = useTheme();\n\n  const handleAddField = (fieldType) => {\n    console.log(\"Adding field of type:\", fieldType);\n    \n    const newField = {\n      id: Date.now().toString(),\n      type: fieldType,\n      question: `New ${fieldType} question`,\n      isRequired: false,\n    };\n    \n    if (fieldType === 'dropdown') {\n      newField.options = [\n        { value: 'Option 1', label: 'Option 1' },\n        { value: 'Option 2', label: 'Option 2' }\n      ];\n    } else if (fieldType === 'table') {\n      newField.columns = [\n        { name: 'Column 1', type: 'text' },\n        { name: 'Column 2', type: 'text' }\n      ];\n    } else if (fieldType === 'text') {\n      newField.minLength = 0;\n      newField.maxLength = 100;\n    }\n    \n    setFields(prevFields => [...prevFields, newField]);\n    setSelectedField(newField);\n    \n    console.log(\"Field added:\", newField);\n  };\n\n  const handleFieldSelection = (field) => {\n    console.log(\"Selected field:\", field);\n    setSelectedField(field);\n    \n    if (configSectionRef.current) {\n      configSectionRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  const handleFieldUpdate = (updatedField) => {\n    console.log(\"Updating field:\", updatedField);\n    \n    if (Array.isArray(updatedField)) {\n      setFields(updatedField);\n    } else {\n      setFields(prevFields => \n        prevFields.map(field => \n          field.id === updatedField.id ? updatedField : field\n        )\n      );\n      \n      if (selectedField && selectedField.id === updatedField.id) {\n        setSelectedField(updatedField);\n      }\n    }\n  };\n\n  const handleFieldDelete = (fieldId) => {\n    console.log(\"Deleting field:\", fieldId);\n    \n    setFields(prevFields => prevFields.filter(field => field.id !== fieldId));\n    \n    if (selectedField && selectedField.id === fieldId) {\n      setSelectedField(null);\n    }\n  };\n\n  const handleSaveForm = () => {\n    if (!formValues.title) {\n      alert(\"Please enter a form title before saving\");\n      return;\n    }\n    \n    if (fields.length === 0) {\n      alert(\"Please add at least one field to your form\");\n      return;\n    }\n    \n    setShowValidationModal(true);\n  };\n\n  const handleFinalSave = async (formDataWithValidation) => {\n    try {\n      console.log(\"Saving form:\", formDataWithValidation);\n      \n      const result = await post('/forms', formDataWithValidation);\n      setShowValidationModal(false);\n      alert('Form saved successfully!');\n      return result;\n    } catch (err) {\n      console.error('Error saving form:', err);\n    }\n  };\n\n  const togglePreview = () => {\n    console.log(\"Toggling preview mode. Current state:\", isPreview);\n    setIsPreview(!isPreview);\n  };\n\n  const handleFieldDrop = (fieldType, index) => {\n    console.log(`Dropped ${fieldType} at index ${index}`);\n    \n    const newField = {\n      id: Date.now().toString(),\n      type: fieldType,\n      question: `New ${fieldType} question`,\n      isRequired: false,\n    };\n    \n    if (fieldType === 'dropdown') {\n      newField.options = [\n        { value: 'Option 1', label: 'Option 1' },\n        { value: 'Option 2', label: 'Option 2' }\n      ];\n    } else if (fieldType === 'table') {\n      newField.columns = [\n        { name: 'Column 1', type: 'text' },\n        { name: 'Column 2', type: 'text' }\n      ];\n    } else if (fieldType === 'text') {\n      newField.minLength = 0;\n      newField.maxLength = 100;\n    }\n    \n    const newFields = [...fields];\n    if (index !== undefined && index >= 0) {\n      newFields.splice(index, 0, newField);\n    } else {\n      newFields.push(newField);\n    }\n    \n    setFields(newFields);\n    setSelectedField(newField);\n  };\n\n  const handleReorderField = (dragIndex, hoverIndex) => {\n    const draggedField = fields[dragIndex];\n    \n    const newFields = [...fields];\n    newFields.splice(dragIndex, 1);\n    newFields.splice(hoverIndex, 0, draggedField);\n    \n    setFields(newFields);\n  };\n\n  const scrollToConfig = () => {\n    if (configSectionRef.current) {\n      configSectionRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"container\" style={{\n        backgroundColor: themeColors.backgroundColor,\n        color: themeColors.textColor\n      }}>\n        <FormValidationModal\n          isOpen={showValidationModal}\n          onClose={() => setShowValidationModal(false)}\n          formData={{\n            ...formValues,\n            fields,\n          }}\n          onSave={handleFinalSave}\n        />\n        \n        <header className=\"padding-responsive\">\n          <h1>{isPreview ? 'Form Preview' : 'Form Builder'}</h1>\n          \n          {!isPreview && selectedField && (\n            <div \n              onClick={scrollToConfig} \n              style={{\n                cursor: 'pointer',\n                textDecoration: 'underline',\n                color: '#2563eb',\n                marginTop: '0.5rem',\n                display: 'inline-block'\n              }}\n            >\n              Jump to Field Configuration →\n            </div>\n          )}\n          \n          <div style={{ display: 'flex', gap: '1rem', margin: '1rem 0' }}>\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={formValues.title}\n              onChange={handleInputChange}\n              className=\"input\"\n              placeholder=\"Form Title\"\n              style={{ flex: 1 }}\n            />\n            <button \n              className=\"btn btn-secondary\"\n              onClick={togglePreview}\n              style={{ backgroundColor: themeColors.secondaryColor }}\n            >\n              {isPreview ? 'Edit Form' : 'Preview Form'}\n            </button>\n            <button \n              className=\"btn btn-primary\"\n              onClick={handleSaveForm}\n              disabled={loading}\n              style={{ backgroundColor: themeColors.primaryColor }}\n            >\n              {loading ? 'Saving...' : 'Save Form'}\n            </button>\n          </div>\n          {formErrors.title && <div className=\"text-red-500 text-sm\">{formErrors.title}</div>}\n          {formErrors.fields && <div className=\"text-red-500 text-sm\">{formErrors.fields}</div>}\n          {error && <div className=\"form-error\">{error}</div>}\n        </header>\n        \n        <main style={{ display: 'flex', gap: '1rem', minHeight: '500px' }}>\n          {!isPreview && (\n            <aside className=\"padding-responsive\" style={{ width: '250px' }}>\n              <FieldPalette \n                onFieldSelect={handleAddField} \n                onDragDrop={handleFieldDrop}\n                themeColors={themeColors}\n              />\n              \n              <div className=\"mt-6\">\n                <ThemeSelector \n                  onThemeSelect={setTheme} \n                  currentTheme={currentTheme} \n                />\n              </div>\n            </aside>\n          )}\n          \n          <section className=\"padding-responsive\" style={{ \n            flex: 1,\n            backgroundColor: themeColors.backgroundColor\n          }}>\n            <FormCanvas\n              fields={fields}\n              isPreview={isPreview}\n              onFieldSelect={handleFieldSelection}\n              onFieldUpdate={handleFieldUpdate}\n              onFieldDelete={handleFieldDelete}\n              onDrop={handleFieldDrop}\n              onReorder={handleReorderField}\n              formId=\"preview\"\n              themeColors={themeColors}\n            />\n          </section>\n          \n          {!isPreview && selectedField && (\n            <aside \n              className=\"padding-responsive\" \n              style={{ \n                width: '300px',\n                backgroundColor: '#ffffff',\n                border: '1px solid #e5e7eb',\n                borderRadius: '0.5rem',\n                boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)'\n              }}\n              ref={configSectionRef}\n              id=\"field-configuration\"\n            >\n              <h2 style={{ \n                paddingBottom: '0.5rem',\n                marginBottom: '0.5rem',\n                borderBottom: '1px solid #e5e7eb',\n                fontWeight: '600',\n                fontSize: '1.125rem',\n                color: '#111827'\n              }}>\n                Field Configuration\n              </h2>\n              <FieldConfigPanel \n                field={selectedField} \n                onFieldUpdate={handleFieldUpdate}\n                availableFields={fields.filter(f => f.id !== selectedField.id)}\n              />\n            </aside>\n          )}\n        </main>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default FormBuilderPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}