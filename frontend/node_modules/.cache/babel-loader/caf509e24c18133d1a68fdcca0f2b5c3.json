{"ast":null,"code":"import React,{useRef}from'react';import{useDrag,useDrop}from'react-dnd';const DraggableField=_ref=>{let{field,index,onSelect,onDelete,onMove,children}=_ref;const ref=useRef(null);// Set up drag source\nconst[{isDragging},drag]=useDrag({type:'FORM_FIELD',item:{id:field.id,index},collect:monitor=>({isDragging:!!monitor.isDragging()})});// Set up drop target for reordering\nconst[{handlerId},drop]=useDrop({accept:'FORM_FIELD',collect:monitor=>({handlerId:monitor.getHandlerId()}),hover:(item,monitor)=>{if(!ref.current){return;}const dragIndex=item.index;const hoverIndex=index;// Don't replace items with themselves\nif(dragIndex===hoverIndex){return;}// Determine rectangle on screen\nconst hoverBoundingRect=ref.current.getBoundingClientRect();// Get vertical middle\nconst hoverMiddleY=(hoverBoundingRect.bottom-hoverBoundingRect.top)/2;// Determine mouse position\nconst clientOffset=monitor.getClientOffset();// Get pixels to the top\nconst hoverClientY=clientOffset.y-hoverBoundingRect.top;// Only perform the move when the mouse has crossed half of the items height\n// When dragging downwards, only move when the cursor is below 50%\n// When dragging upwards, only move when the cursor is above 50%\n// Dragging downwards\nif(dragIndex<hoverIndex&&hoverClientY<hoverMiddleY){return;}// Dragging upwards\nif(dragIndex>hoverIndex&&hoverClientY>hoverMiddleY){return;}// Time to actually perform the action\nonMove(dragIndex,hoverIndex);// Note: we're mutating the monitor item here!\n// Generally it's better to avoid mutations,\n// but it's good here for the sake of performance\n// to avoid expensive index searches.\nitem.index=hoverIndex;}});// Initialize drag and drop refs\ndrag(drop(ref));return/*#__PURE__*/React.createElement(\"div\",{ref:ref,className:`\n        padding-responsive \n        margin-responsive \n        field-container \n        border \n        border-dashed \n        cursor-pointer\n      `,style:{opacity:isDragging?0.5:1,backgroundColor:isDragging?'#f3f4f6':'transparent'},onClick:()=>onSelect(field),\"data-handler-id\":handlerId},/*#__PURE__*/React.createElement(\"div\",{className:\"drag-handle\",style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'0.5rem',borderBottom:'1px solid #e5e7eb',paddingBottom:'0.5rem'}},/*#__PURE__*/React.createElement(\"div\",{style:{fontWeight:'bold',color:'#6b7280'}},/*#__PURE__*/React.createElement(\"span\",{style:{marginRight:'0.5rem',cursor:'move'}},\"\\u27F0\"),field.type.charAt(0).toUpperCase()+field.type.slice(1),\" Field\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",style:{backgroundColor:'#f87171',color:'white',padding:'0.25rem 0.5rem'},onClick:e=>{e.stopPropagation();onDelete(field.id);}},\"\\u2715\")),children);};export default DraggableField;","map":{"version":3,"names":["React","useRef","useDrag","useDrop","DraggableField","_ref","field","index","onSelect","onDelete","onMove","children","ref","isDragging","drag","type","item","id","collect","monitor","handlerId","drop","accept","getHandlerId","hover","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","createElement","className","style","opacity","backgroundColor","onClick","display","justifyContent","alignItems","marginBottom","borderBottom","paddingBottom","fontWeight","color","marginRight","cursor","charAt","toUpperCase","slice","padding","e","stopPropagation"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/builder/DraggableField.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\n\nconst DraggableField = ({ field, index, onSelect, onDelete, onMove, children }) => {\n  const ref = useRef(null);\n  \n  // Set up drag source\n  const [{ isDragging }, drag] = useDrag({\n    type: 'FORM_FIELD',\n    item: { id: field.id, index },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n  \n  // Set up drop target for reordering\n  const [{ handlerId }, drop] = useDrop({\n    accept: 'FORM_FIELD',\n    collect: (monitor) => ({\n      handlerId: monitor.getHandlerId(),\n    }),\n    hover: (item, monitor) => {\n      if (!ref.current) {\n        return;\n      }\n      \n      const dragIndex = item.index;\n      const hoverIndex = index;\n      \n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      \n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\n      \n      // Get vertical middle\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      \n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      \n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      \n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      \n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      \n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      \n      // Time to actually perform the action\n      onMove(dragIndex, hoverIndex);\n      \n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    },\n  });\n  \n  // Initialize drag and drop refs\n  drag(drop(ref));\n  \n  return (\n    <div \n      ref={ref}\n      className={`\n        padding-responsive \n        margin-responsive \n        field-container \n        border \n        border-dashed \n        cursor-pointer\n      `}\n      style={{\n        opacity: isDragging ? 0.5 : 1,\n        backgroundColor: isDragging ? '#f3f4f6' : 'transparent',\n      }}\n      onClick={() => onSelect(field)}\n      data-handler-id={handlerId}\n    >\n      <div className=\"drag-handle\" style={{ \n        display: 'flex', \n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '0.5rem',\n        borderBottom: '1px solid #e5e7eb',\n        paddingBottom: '0.5rem'\n      }}>\n        <div style={{ fontWeight: 'bold', color: '#6b7280' }}>\n          <span style={{ marginRight: '0.5rem', cursor: 'move' }}>⟰</span>\n          {field.type.charAt(0).toUpperCase() + field.type.slice(1)} Field\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary\"\n          style={{ backgroundColor: '#f87171', color: 'white', padding: '0.25rem 0.5rem' }}\n          onClick={(e) => {\n            e.stopPropagation();\n            onDelete(field.id);\n          }}\n        >\n          ✕\n        </button>\n      </div>\n      \n      {children}\n    </div>\n  );\n};\n\nexport default DraggableField;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}