{"ast":null,"code":"var _jsxFileName = \"/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/builder/FieldPalette.js\";\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\n\n// Define the field types\nconst fieldTypes = [{\n  type: 'text',\n  label: 'Text Input',\n  icon: '📝'\n}, {\n  type: 'dropdown',\n  label: 'Dropdown',\n  icon: '▼'\n}, {\n  type: 'table',\n  label: 'Table',\n  icon: '📊'\n}, {\n  type: 'file',\n  label: 'File Upload',\n  icon: '📎'\n}];\n\n// Combined draggable and clickable field type component\nconst DraggableFieldType = ({\n  fieldType,\n  label,\n  icon,\n  onClick\n}) => {\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: 'FIELD_TYPE',\n    item: {\n      type: fieldType\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: drag,\n    className: \"btn btn-primary margin-responsive\",\n    onClick: () => onClick(fieldType),\n    style: {\n      opacity: isDragging ? 0.5 : 1,\n      cursor: 'grab',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      padding: '0.75rem 1rem',\n      transition: 'all 0.2s ease',\n      marginBottom: '0.75rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, icon), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, label)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '0.7rem',\n      color: 'rgba(255,255,255,0.8)',\n      border: '1px solid rgba(255,255,255,0.4)',\n      borderRadius: '4px',\n      padding: '2px 4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Drag or Click\"));\n};\nconst FieldPalette = ({\n  onFieldSelect\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"card\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }\n}, fieldTypes.map(field => /*#__PURE__*/React.createElement(DraggableFieldType, {\n  key: field.type,\n  fieldType: field.type,\n  label: field.label,\n  icon: field.icon,\n  onClick: onFieldSelect,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"margin-responsive\",\n  style: {\n    marginTop: '1rem'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"text-sm text-gray-600\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }\n}, \"Drag and drop\"), \" or \", /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 43\n  }\n}, \"click\"), \" to add fields to your form.\")));\nexport default FieldPalette;","map":{"version":3,"names":["React","useDrag","fieldTypes","type","label","icon","DraggableFieldType","fieldType","onClick","isDragging","drag","item","collect","monitor","createElement","ref","className","style","opacity","cursor","display","alignItems","justifyContent","padding","transition","marginBottom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","gap","fontSize","color","border","borderRadius","FieldPalette","onFieldSelect","flexDirection","map","field","key","marginTop"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/builder/FieldPalette.js"],"sourcesContent":["import React from 'react';\nimport { useDrag } from 'react-dnd';\n\n// Define the field types\nconst fieldTypes = [\n  { type: 'text', label: 'Text Input', icon: '📝' },\n  { type: 'dropdown', label: 'Dropdown', icon: '▼' },\n  { type: 'table', label: 'Table', icon: '📊' },\n  { type: 'file', label: 'File Upload', icon: '📎' },\n];\n\n// Combined draggable and clickable field type component\nconst DraggableFieldType = ({ fieldType, label, icon, onClick }) => {\n  const [{ isDragging }, drag] = useDrag({\n    type: 'FIELD_TYPE',\n    item: { type: fieldType },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div\n      ref={drag}\n      className=\"btn btn-primary margin-responsive\"\n      onClick={() => onClick(fieldType)}\n      style={{\n        opacity: isDragging ? 0.5 : 1,\n        cursor: 'grab',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '0.75rem 1rem',\n        transition: 'all 0.2s ease',\n        marginBottom: '0.75rem',\n      }}\n    >\n      <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\n        <span>{icon}</span>\n        <span>{label}</span>\n      </div>\n      <div style={{ \n        fontSize: '0.7rem', \n        color: 'rgba(255,255,255,0.8)',\n        border: '1px solid rgba(255,255,255,0.4)',\n        borderRadius: '4px',\n        padding: '2px 4px'\n      }}>\n        Drag or Click\n      </div>\n    </div>\n  );\n};\n\nconst FieldPalette = ({ onFieldSelect }) => (\n  <div className=\"card\">\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      {fieldTypes.map(field => (\n        <DraggableFieldType \n          key={field.type}\n          fieldType={field.type} \n          label={field.label} \n          icon={field.icon}\n          onClick={onFieldSelect}\n        />\n      ))}\n    </div>\n    <div className=\"margin-responsive\" style={{ marginTop: '1rem' }}>\n      <p className=\"text-sm text-gray-600\">\n        <strong>Drag and drop</strong> or <strong>click</strong> to add fields to your form.\n      </p>\n    </div>\n  </div>\n);\n\nexport default FieldPalette;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}