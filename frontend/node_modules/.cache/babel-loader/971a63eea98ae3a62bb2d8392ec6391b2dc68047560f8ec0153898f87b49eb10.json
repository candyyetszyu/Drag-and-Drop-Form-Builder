{"ast":null,"code":"var _jsxFileName = \"/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themes = {\n  default: {\n    primaryColor: '#3b82f6',\n    secondaryColor: '#6b7280',\n    backgroundColor: '#ffffff',\n    cardBackground: '#f9fafb',\n    textColor: '#111827'\n  },\n  corporate: {\n    primaryColor: '#0ea5e9',\n    secondaryColor: '#64748b',\n    backgroundColor: '#ffffff',\n    cardBackground: '#e0f2fe',\n    textColor: '#0f172a'\n  },\n  pastel: {\n    primaryColor: '#a78bfa',\n    secondaryColor: '#a8a29e',\n    backgroundColor: '#ffffff',\n    cardBackground: '#f5f3ff',\n    textColor: '#1f2937'\n  },\n  nature: {\n    primaryColor: '#059669',\n    secondaryColor: '#4b5563',\n    backgroundColor: '#ffffff',\n    cardBackground: '#ecfdf5',\n    textColor: '#064e3b'\n  },\n  // New themes\n  sunset: {\n    primaryColor: '#f97316',\n    secondaryColor: '#78350f',\n    backgroundColor: '#ffffff',\n    cardBackground: '#fff7ed',\n    textColor: '#431407'\n  },\n  ruby: {\n    primaryColor: '#dc2626',\n    secondaryColor: '#7f1d1d',\n    backgroundColor: '#ffffff',\n    cardBackground: '#fef2f2',\n    textColor: '#450a0a'\n  },\n  ocean: {\n    primaryColor: '#0284c7',\n    secondaryColor: '#0c4a6e',\n    backgroundColor: '#ffffff',\n    cardBackground: '#f0f9ff',\n    textColor: '#0c4a6e'\n  },\n  // Dark theme moved to the end\n  dark: {\n    primaryColor: '#1f2937',\n    secondaryColor: '#4b5563',\n    backgroundColor: '#111827',\n    cardBackground: '#1f2937',\n    textColor: '#f9fafb',\n    borderColor: '#374151',\n    inputBackground: '#374151',\n    inputBorderColor: '#4b5563',\n    inputTextColor: '#f9fafb',\n    buttonTextColor: '#f9fafb'\n  }\n};\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [currentTheme, setCurrentTheme] = useState('default');\n  const setTheme = themeId => {\n    if (themes[themeId]) {\n      setCurrentTheme(themeId);\n\n      // Apply theme colors to CSS variables\n      document.documentElement.style.setProperty('--primary-color', themes[themeId].primaryColor);\n      document.documentElement.style.setProperty('--secondary-color', themes[themeId].secondaryColor);\n      document.documentElement.style.setProperty('--background-color', themes[themeId].backgroundColor);\n      document.documentElement.style.setProperty('--card-background', themes[themeId].cardBackground);\n      document.documentElement.style.setProperty('--text-color', themes[themeId].textColor);\n      document.documentElement.style.setProperty('--border-color', themes[themeId].borderColor || '#e5e7eb');\n      document.documentElement.style.setProperty('--input-background', themes[themeId].inputBackground || '#ffffff');\n      document.documentElement.style.setProperty('--input-border-color', themes[themeId].inputBorderColor || '#d1d5db');\n      document.documentElement.style.setProperty('--input-text-color', themes[themeId].inputTextColor || '#111827');\n      document.documentElement.style.setProperty('--button-text-color', themes[themeId].buttonTextColor || '#ffffff');\n\n      // Apply dark mode to the body element if dark theme is selected\n      if (themeId === 'dark') {\n        document.body.classList.add('dark-mode');\n      } else {\n        document.body.classList.remove('dark-mode');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      currentTheme,\n      setTheme,\n      themeColors: themes[currentTheme]\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"vgCsleMijpLn2nGqsdp6wS7WC5U=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","themes","default","primaryColor","secondaryColor","backgroundColor","cardBackground","textColor","corporate","pastel","nature","sunset","ruby","ocean","dark","borderColor","inputBackground","inputBorderColor","inputTextColor","buttonTextColor","ThemeContext","ThemeProvider","children","_s","currentTheme","setCurrentTheme","setTheme","themeId","document","documentElement","style","setProperty","body","classList","add","remove","Provider","value","themeColors","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst themes = {\n  default: {\n    primaryColor: '#3b82f6',\n    secondaryColor: '#6b7280',\n    backgroundColor: '#ffffff',\n    cardBackground: '#f9fafb',\n    textColor: '#111827'\n  },\n  corporate: {\n    primaryColor: '#0ea5e9',\n    secondaryColor: '#64748b',\n    backgroundColor: '#ffffff',\n    cardBackground: '#e0f2fe',\n    textColor: '#0f172a'\n  },\n  pastel: {\n    primaryColor: '#a78bfa',\n    secondaryColor: '#a8a29e',\n    backgroundColor: '#ffffff',\n    cardBackground: '#f5f3ff',\n    textColor: '#1f2937'\n  },\n  nature: {\n    primaryColor: '#059669',\n    secondaryColor: '#4b5563',\n    backgroundColor: '#ffffff',\n    cardBackground: '#ecfdf5',\n    textColor: '#064e3b'\n  },\n  // New themes\n  sunset: {\n    primaryColor: '#f97316',\n    secondaryColor: '#78350f',\n    backgroundColor: '#ffffff',\n    cardBackground: '#fff7ed',\n    textColor: '#431407'\n  },\n  ruby: {\n    primaryColor: '#dc2626',\n    secondaryColor: '#7f1d1d',\n    backgroundColor: '#ffffff',\n    cardBackground: '#fef2f2',\n    textColor: '#450a0a'\n  },\n  ocean: {\n    primaryColor: '#0284c7',\n    secondaryColor: '#0c4a6e',\n    backgroundColor: '#ffffff',\n    cardBackground: '#f0f9ff',\n    textColor: '#0c4a6e'\n  },\n  // Dark theme moved to the end\n  dark: {\n    primaryColor: '#1f2937',\n    secondaryColor: '#4b5563',\n    backgroundColor: '#111827',\n    cardBackground: '#1f2937',\n    textColor: '#f9fafb',\n    borderColor: '#374151',\n    inputBackground: '#374151',\n    inputBorderColor: '#4b5563',\n    inputTextColor: '#f9fafb',\n    buttonTextColor: '#f9fafb'\n  }\n};\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [currentTheme, setCurrentTheme] = useState('default');\n  \n  const setTheme = (themeId) => {\n    if (themes[themeId]) {\n      setCurrentTheme(themeId);\n      \n      // Apply theme colors to CSS variables\n      document.documentElement.style.setProperty('--primary-color', themes[themeId].primaryColor);\n      document.documentElement.style.setProperty('--secondary-color', themes[themeId].secondaryColor);\n      document.documentElement.style.setProperty('--background-color', themes[themeId].backgroundColor);\n      document.documentElement.style.setProperty('--card-background', themes[themeId].cardBackground);\n      document.documentElement.style.setProperty('--text-color', themes[themeId].textColor);\n      document.documentElement.style.setProperty('--border-color', themes[themeId].borderColor || '#e5e7eb');\n      document.documentElement.style.setProperty('--input-background', themes[themeId].inputBackground || '#ffffff');\n      document.documentElement.style.setProperty('--input-border-color', themes[themeId].inputBorderColor || '#d1d5db');\n      document.documentElement.style.setProperty('--input-text-color', themes[themeId].inputTextColor || '#111827');\n      document.documentElement.style.setProperty('--button-text-color', themes[themeId].buttonTextColor || '#ffffff');\n      \n      // Apply dark mode to the body element if dark theme is selected\n      if (themeId === 'dark') {\n        document.body.classList.add('dark-mode');\n      } else {\n        document.body.classList.remove('dark-mode');\n      }\n    }\n  };\n  \n  return (\n    <ThemeContext.Provider value={{ currentTheme, setTheme, themeColors: themes[currentTheme] }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}