{"ast":null,"code":"// Custom hook for managing form state, validation, and interactions\nimport { useState, useCallback } from 'react';\nexport const useFormState = (initialFormValues = {}, validateForm) => {\n  const [formValues, setFormValues] = useState(initialFormValues); // Form values\n  const [formErrors, setFormErrors] = useState({}); // Validation errors\n  const [touchedFields, setTouchedFields] = useState({}); // Touched fields\n\n  // Handle input value changes\n  const handleInputChange = useCallback(e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormValues(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n    setTouchedFields(prev => ({\n      ...prev,\n      [name]: true\n    }));\n    if (validateForm) {\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: validateForm(name, value, formValues)\n      })); // Pass formValues\n    }\n  }, [validateForm]);\n\n  // Handle input blur events\n  const handleInputBlur = useCallback(e => {\n    const {\n      name\n    } = e.target;\n    setTouchedFields(prev => ({\n      ...prev,\n      [name]: true\n    }));\n    if (validateForm) {\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: validateForm(name, formValues[name], formValues)\n      })); // Pass formValues\n    }\n  }, [validateForm, formValues]);\n\n  // Reset form to initial values\n  const resetFormState = useCallback(() => {\n    setFormValues(initialFormValues);\n    setFormErrors({});\n    setTouchedFields({});\n  }, [initialFormValues]);\n\n  // Set a specific field value\n  const setFieldValue = useCallback((name, value) => {\n    setFormValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (validateForm) {\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: validateForm(name, value, formValues)\n      })); // Pass formValues\n    }\n  }, [validateForm]);\n  return {\n    formValues,\n    formErrors,\n    touchedFields,\n    handleInputChange,\n    handleInputBlur,\n    resetFormState,\n    setFieldValue,\n    setFormValues\n  };\n};","map":{"version":3,"names":["useState","useCallback","useFormState","initialFormValues","validateForm","formValues","setFormValues","formErrors","setFormErrors","touchedFields","setTouchedFields","handleInputChange","e","name","value","type","checked","target","prev","handleInputBlur","resetFormState","setFieldValue"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/hooks/useFormState.js"],"sourcesContent":["// Custom hook for managing form state, validation, and interactions\nimport { useState, useCallback } from 'react';\n\nexport const useFormState = (initialFormValues = {}, validateForm) => {\n  const [formValues, setFormValues] = useState(initialFormValues); // Form values\n  const [formErrors, setFormErrors] = useState({}); // Validation errors\n  const [touchedFields, setTouchedFields] = useState({}); // Touched fields\n\n  // Handle input value changes\n  const handleInputChange = useCallback(\n    (e) => {\n      const { name, value, type, checked } = e.target;\n      setFormValues((prev) => ({ ...prev, [name]: type === 'checkbox' ? checked : value }));\n      setTouchedFields((prev) => ({ ...prev, [name]: true }));\n      if (validateForm) {\n        setFormErrors((prev) => ({ ...prev, [name]: validateForm(name, value, formValues) })); // Pass formValues\n      }\n    },\n    [validateForm]\n  );\n\n  // Handle input blur events\n  const handleInputBlur = useCallback(\n    (e) => {\n      const { name } = e.target;\n      setTouchedFields((prev) => ({ ...prev, [name]: true }));\n      if (validateForm) {\n        setFormErrors((prev) => ({ ...prev, [name]: validateForm(name, formValues[name], formValues) })); // Pass formValues\n      }\n    },\n    [validateForm, formValues]\n  );\n\n  // Reset form to initial values\n  const resetFormState = useCallback(() => {\n    setFormValues(initialFormValues);\n    setFormErrors({});\n    setTouchedFields({});\n  }, [initialFormValues]);\n\n  // Set a specific field value\n  const setFieldValue = useCallback(\n    (name, value) => {\n      setFormValues((prev) => ({ ...prev, [name]: value }));\n      if (validateForm) {\n        setFormErrors((prev) => ({ ...prev, [name]: validateForm(name, value, formValues) })); // Pass formValues\n      }\n    },\n    [validateForm]\n  );\n\n  return {\n    formValues,\n    formErrors,\n    touchedFields,\n    handleInputChange,\n    handleInputBlur,\n    resetFormState,\n    setFieldValue,\n    setFormValues,\n  };\n};\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,OAAO,MAAMC,YAAY,GAAGA,CAACC,iBAAiB,GAAG,CAAC,CAAC,EAAEC,YAAY,KAAK;EACpE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAACG,iBAAiB,CAAC,CAAC,CAAC;EACjE,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAExD;EACA,MAAMW,iBAAiB,GAAGV,WAAW,CAClCW,CAAC,IAAK;IACL,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGJ,CAAC,CAACK,MAAM;IAC/CX,aAAa,CAAEY,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACL,IAAI,GAAGE,IAAI,KAAK,UAAU,GAAGC,OAAO,GAAGF;IAAM,CAAC,CAAC,CAAC;IACrFJ,gBAAgB,CAAEQ,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACL,IAAI,GAAG;IAAK,CAAC,CAAC,CAAC;IACvD,IAAIT,YAAY,EAAE;MAChBI,aAAa,CAAEU,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACL,IAAI,GAAGT,YAAY,CAACS,IAAI,EAAEC,KAAK,EAAET,UAAU;MAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF;EACF,CAAC,EACD,CAACD,YAAY,CACf,CAAC;;EAED;EACA,MAAMe,eAAe,GAAGlB,WAAW,CAChCW,CAAC,IAAK;IACL,MAAM;MAAEC;IAAK,CAAC,GAAGD,CAAC,CAACK,MAAM;IACzBP,gBAAgB,CAAEQ,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACL,IAAI,GAAG;IAAK,CAAC,CAAC,CAAC;IACvD,IAAIT,YAAY,EAAE;MAChBI,aAAa,CAAEU,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACL,IAAI,GAAGT,YAAY,CAACS,IAAI,EAAER,UAAU,CAACQ,IAAI,CAAC,EAAER,UAAU;MAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpG;EACF,CAAC,EACD,CAACD,YAAY,EAAEC,UAAU,CAC3B,CAAC;;EAED;EACA,MAAMe,cAAc,GAAGnB,WAAW,CAAC,MAAM;IACvCK,aAAa,CAACH,iBAAiB,CAAC;IAChCK,aAAa,CAAC,CAAC,CAAC,CAAC;IACjBE,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,CAACP,iBAAiB,CAAC,CAAC;;EAEvB;EACA,MAAMkB,aAAa,GAAGpB,WAAW,CAC/B,CAACY,IAAI,EAAEC,KAAK,KAAK;IACfR,aAAa,CAAEY,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACL,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;IACrD,IAAIV,YAAY,EAAE;MAChBI,aAAa,CAAEU,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACL,IAAI,GAAGT,YAAY,CAACS,IAAI,EAAEC,KAAK,EAAET,UAAU;MAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF;EACF,CAAC,EACD,CAACD,YAAY,CACf,CAAC;EAED,OAAO;IACLC,UAAU;IACVE,UAAU;IACVE,aAAa;IACbE,iBAAiB;IACjBQ,eAAe;IACfC,cAAc;IACdC,aAAa;IACbf;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}