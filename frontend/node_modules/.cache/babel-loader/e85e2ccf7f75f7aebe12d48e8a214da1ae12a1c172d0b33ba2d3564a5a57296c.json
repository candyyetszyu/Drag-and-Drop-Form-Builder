{"ast":null,"code":"var _jsxFileName = \"/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/fields/DropdownField.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropdownField = ({\n  question,\n  required,\n  options = [],\n  value = '',\n  onChange,\n  isPreview = true,\n  conditions = [],\n  onConditionChange\n}) => {\n  const handleChange = e => {\n    const selectedValue = e.target.value;\n    if (onChange) {\n      onChange(selectedValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"margin-responsive\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      children: [question, required && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: \" *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: value,\n      onChange: handleChange,\n      disabled: !isPreview,\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), options && options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.value || option,\n        children: option.label || option.value || option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), !isPreview && onConditionChange && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conditional-logic mt-4 p-3 border border-gray-200 rounded-md bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-sm font-medium mb-2\",\n        children: \"Conditional Logic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500 mb-3\",\n        children: \"Define what happens when an option is selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), options && options.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: options.map((option, index) => {\n          var _conditions$find, _conditions$find2, _conditions$find3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2 p-2 border border-gray-200 bg-white rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium\",\n              children: [\"When \\\"\", option.label || option.value || option, \"\\\" is selected:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"input text-sm\",\n              value: ((_conditions$find = conditions.find(c => c.optionValue === (option.value || option))) === null || _conditions$find === void 0 ? void 0 : _conditions$find.action) || \"\",\n              onChange: e => {\n                const newConditions = [...conditions];\n                const existing = newConditions.findIndex(c => c.optionValue === (option.value || option));\n                if (existing >= 0) {\n                  newConditions[existing] = {\n                    ...newConditions[existing],\n                    action: e.target.value\n                  };\n                } else {\n                  newConditions.push({\n                    optionValue: option.value || option,\n                    action: e.target.value,\n                    targetId: \"\"\n                  });\n                }\n                onConditionChange(newConditions);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"No action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"skip_to\",\n                children: \"Skip to question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"show\",\n                children: \"Show question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"hide\",\n                children: \"Hide question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this), ((_conditions$find2 = conditions.find(c => c.optionValue === (option.value || option))) === null || _conditions$find2 === void 0 ? void 0 : _conditions$find2.action) && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input text-sm\",\n              placeholder: \"Enter question ID\",\n              value: ((_conditions$find3 = conditions.find(c => c.optionValue === (option.value || option))) === null || _conditions$find3 === void 0 ? void 0 : _conditions$find3.targetId) || \"\",\n              onChange: e => {\n                const newConditions = [...conditions];\n                const existing = newConditions.findIndex(c => c.optionValue === (option.value || option));\n                if (existing >= 0) {\n                  newConditions[existing] = {\n                    ...newConditions[existing],\n                    targetId: e.target.value\n                  };\n                }\n                onConditionChange(newConditions);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = DropdownField;\nexport default DropdownField;\nvar _c;\n$RefreshReg$(_c, \"DropdownField\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DropdownField","question","required","options","value","onChange","isPreview","conditions","onConditionChange","handleChange","e","selectedValue","target","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","disabled","map","option","index","label","length","_conditions$find","_conditions$find2","_conditions$find3","find","c","optionValue","action","newConditions","existing","findIndex","push","targetId","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/fields/DropdownField.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst DropdownField = ({ \n  question, \n  required, \n  options = [], \n  value = '', \n  onChange,\n  isPreview = true,\n  conditions = [],\n  onConditionChange\n}) => {\n  const handleChange = (e) => {\n    const selectedValue = e.target.value;\n    if (onChange) {\n      onChange(selectedValue);\n    }\n  };\n\n  return (\n    <div className=\"margin-responsive\">\n      <label className=\"form-label\">\n        {question}\n        {required && <span style={{ color: 'red' }}> *</span>}\n      </label>\n      <select\n        value={value}\n        onChange={handleChange}\n        disabled={!isPreview}\n        className=\"input\"\n      >\n        <option value=\"\">Select an option</option>\n        {options && options.map((option, index) => (\n          <option key={index} value={option.value || option}>\n            {option.label || option.value || option}\n          </option>\n        ))}\n      </select>\n      \n      {!isPreview && onConditionChange && (\n        <div className=\"conditional-logic mt-4 p-3 border border-gray-200 rounded-md bg-gray-50\">\n          <h4 className=\"text-sm font-medium mb-2\">Conditional Logic</h4>\n          <p className=\"text-xs text-gray-500 mb-3\">Define what happens when an option is selected</p>\n          \n          {options && options.length > 0 && (\n            <div className=\"space-y-3\">\n              {options.map((option, index) => (\n                <div key={index} className=\"flex flex-col gap-2 p-2 border border-gray-200 bg-white rounded-md\">\n                  <div className=\"text-sm font-medium\">\n                    When \"{option.label || option.value || option}\" is selected:\n                  </div>\n                  <select \n                    className=\"input text-sm\"\n                    value={conditions.find(c => c.optionValue === (option.value || option))?.action || \"\"}\n                    onChange={(e) => {\n                      const newConditions = [...conditions];\n                      const existing = newConditions.findIndex(c => \n                        c.optionValue === (option.value || option)\n                      );\n                      \n                      if (existing >= 0) {\n                        newConditions[existing] = {\n                          ...newConditions[existing],\n                          action: e.target.value\n                        };\n                      } else {\n                        newConditions.push({\n                          optionValue: option.value || option,\n                          action: e.target.value,\n                          targetId: \"\"\n                        });\n                      }\n                      \n                      onConditionChange(newConditions);\n                    }}\n                  >\n                    <option value=\"\">No action</option>\n                    <option value=\"skip_to\">Skip to question</option>\n                    <option value=\"show\">Show question</option>\n                    <option value=\"hide\">Hide question</option>\n                  </select>\n                  \n                  {conditions.find(c => c.optionValue === (option.value || option))?.action && (\n                    <input \n                      type=\"text\"\n                      className=\"input text-sm\"\n                      placeholder=\"Enter question ID\"\n                      value={conditions.find(c => c.optionValue === (option.value || option))?.targetId || \"\"}\n                      onChange={(e) => {\n                        const newConditions = [...conditions];\n                        const existing = newConditions.findIndex(c => \n                          c.optionValue === (option.value || option)\n                        );\n                        \n                        if (existing >= 0) {\n                          newConditions[existing] = {\n                            ...newConditions[existing],\n                            targetId: e.target.value\n                          };\n                        }\n                        \n                        onConditionChange(newConditions);\n                      }}\n                    />\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DropdownField;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}