{"ast":null,"code":"var _jsxFileName = \"/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/builder/FieldConfigPanel.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FieldConfigPanel = ({\n  field,\n  onFieldUpdate\n}) => {\n  var _field$options, _field$columns, _field$columns2;\n  if (!field) return null;\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    onFieldUpdate({\n      ...field,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n\n  // Functions to handle column operations\n  const handleAddColumn = () => {\n    const newColumns = [...(field.columns || [])];\n    newColumns.push({\n      name: `Column ${newColumns.length + 1}`,\n      type: 'text'\n    });\n    onFieldUpdate({\n      ...field,\n      columns: newColumns\n    });\n  };\n  const handleUpdateColumn = (index, updates) => {\n    const updatedColumns = [...field.columns];\n    updatedColumns[index] = {\n      ...updatedColumns[index],\n      ...updates\n    };\n    onFieldUpdate({\n      ...field,\n      columns: updatedColumns\n    });\n  };\n  const handleRemoveColumn = index => {\n    onFieldUpdate({\n      ...field,\n      columns: field.columns.filter((_, i) => i !== index)\n    });\n  };\n\n  // Handle adding test row for the table\n  const handleAddTestRow = () => {\n    if (!field.columns || field.columns.length === 0) return;\n\n    // Create an empty row based on current columns\n    const newRow = field.columns.reduce((acc, col) => {\n      acc[col.name] = '';\n      return acc;\n    }, {});\n\n    // Add the row to the value array directly (instead of testData)\n    const updatedValue = [...(field.value || []), newRow];\n    onFieldUpdate({\n      ...field,\n      value: updatedValue\n    });\n  };\n\n  // Handle removing a test row\n  const handleRemoveTestRow = index => {\n    onFieldUpdate({\n      ...field,\n      value: (field.value || []).filter((_, i) => i !== index)\n    });\n  };\n\n  // Update test row cell value\n  const handleTestCellChange = (rowIndex, colName, value) => {\n    const updatedValue = [...(field.value || [])];\n    updatedValue[rowIndex] = {\n      ...updatedValue[rowIndex],\n      [colName]: value\n    };\n    onFieldUpdate({\n      ...field,\n      value: updatedValue\n    });\n  };\n\n  // Handle dropdown options for a column\n  const handleAddOption = () => {\n    const newOptions = [...(field.options || [])];\n    newOptions.push({\n      value: `Option ${newOptions.length + 1}`,\n      label: `Option ${newOptions.length + 1}`\n    });\n    onFieldUpdate({\n      ...field,\n      options: newOptions\n    });\n  };\n  const handleUpdateOption = (index, value) => {\n    const updatedOptions = [...field.options];\n    updatedOptions[index] = {\n      ...updatedOptions[index],\n      value: value,\n      label: value\n    };\n    onFieldUpdate({\n      ...field,\n      options: updatedOptions\n    });\n  };\n  const handleRemoveOption = index => {\n    onFieldUpdate({\n      ...field,\n      options: field.options.filter((_, i) => i !== index)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field-config-panel\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '1.25rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f0f9ff',\n          border: '1px solid #bae6fd',\n          borderRadius: '0.375rem',\n          padding: '0.75rem',\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '0.875rem',\n            color: '#0369a1',\n            fontWeight: 'bold',\n            marginBottom: '0.25rem'\n          },\n          children: [field.type.charAt(0).toUpperCase() + field.type.slice(1), \" Field\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '0.9375rem',\n            fontWeight: '500'\n          },\n          children: field.question || 'Untitled Question'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"config-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Question Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question\",\n          value: field.question || '',\n          onChange: handleChange,\n          className: \"input\",\n          placeholder: \"Enter question text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"config-field\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '0.75rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"isRequired\",\n            name: \"isRequired\",\n            checked: field.isRequired || false,\n            onChange: handleChange,\n            style: {\n              width: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"isRequired\",\n            className: \"form-label\",\n            style: {\n              margin: 0,\n              cursor: 'pointer'\n            },\n            children: \"Required Field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), field.type === 'text' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Minimum Length\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"minLength\",\n            value: field.minLength || '',\n            onChange: handleChange,\n            className: \"input\",\n            placeholder: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Maximum Length\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"maxLength\",\n            value: field.maxLength || '',\n            onChange: handleChange,\n            className: \"input\",\n            placeholder: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), field.type === 'dropdown' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"config-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.5rem',\n            marginTop: '0.5rem'\n          },\n          children: [(_field$options = field.options) === null || _field$options === void 0 ? void 0 : _field$options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '0.5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: option.value || '',\n              onChange: e => handleUpdateOption(index, e.target.value),\n              className: \"input\",\n              placeholder: `Option ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              style: {\n                backgroundColor: '#f87171',\n                color: 'white',\n                padding: '0.25rem 0.5rem',\n                minWidth: '40px'\n              },\n              onClick: () => handleRemoveOption(index),\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            style: {\n              marginTop: '0.5rem'\n            },\n            onClick: handleAddOption,\n            children: \"Add Option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), field.type === 'table' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"config-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Table Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '1.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Columns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), (_field$columns = field.columns) === null || _field$columns === void 0 ? void 0 : _field$columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            style: {\n              padding: '0.75rem',\n              marginBottom: '0.75rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginBottom: '0.5rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: '500'\n                },\n                children: [\"Column \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                style: {\n                  backgroundColor: '#f87171',\n                  color: 'white',\n                  padding: '0.125rem 0.375rem',\n                  fontSize: '0.75rem'\n                },\n                onClick: () => handleRemoveColumn(index),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '0.5rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Column Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: column.name || '',\n                onChange: e => handleUpdateColumn(index, {\n                  name: e.target.value\n                }),\n                className: \"input\",\n                style: {\n                  height: '2rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Column Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: column.type || 'text',\n                onChange: e => handleUpdateColumn(index, {\n                  type: e.target.value\n                }),\n                className: \"input\",\n                style: {\n                  height: '2rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"text\",\n                  children: \"Text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"dropdown\",\n                  children: \"Dropdown\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: handleAddColumn,\n            children: \"Add Column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), ((_field$columns2 = field.columns) === null || _field$columns2 === void 0 ? void 0 : _field$columns2.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            style: {\n              marginBottom: '0.5rem'\n            },\n            children: [\"Sample Rows\", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'normal',\n                fontStyle: 'italic',\n                marginLeft: '0.5rem',\n                fontSize: '0.75rem',\n                color: '#6b7280'\n              },\n              children: \"(Will appear in the form)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this), field.value && field.value.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '1rem',\n              overflowX: 'auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              style: {\n                width: '100%',\n                borderCollapse: 'collapse'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [field.columns.map((col, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding: '0.375rem',\n                      backgroundColor: '#f9fafb',\n                      border: '1px solid #e5e7eb',\n                      textAlign: 'left',\n                      fontSize: '0.75rem'\n                    },\n                    children: col.name\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 29\n                  }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: '40px',\n                      backgroundColor: '#f9fafb',\n                      border: '1px solid #e5e7eb'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: field.value.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [field.columns.map((col, colIdx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      padding: '0.25rem',\n                      border: '1px solid #e5e7eb'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: row[col.name] || '',\n                      onChange: e => handleTestCellChange(rowIdx, col.name, e.target.value),\n                      className: \"input\",\n                      style: {\n                        height: '1.75rem',\n                        padding: '0.25rem',\n                        fontSize: '0.75rem',\n                        border: 'none',\n                        boxShadow: 'none'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 33\n                    }, this)\n                  }, colIdx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 31\n                  }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      padding: '0.25rem',\n                      border: '1px solid #e5e7eb',\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => handleRemoveTestRow(rowIdx),\n                      style: {\n                        backgroundColor: '#f87171',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '0.25rem',\n                        width: '18px',\n                        height: '18px',\n                        display: 'inline-flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        fontSize: '0.625rem',\n                        padding: 0,\n                        cursor: 'pointer'\n                      },\n                      children: \"\\u2715\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 29\n                  }, this)]\n                }, rowIdx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '0.5rem',\n              backgroundColor: '#f9fafb',\n              borderRadius: '0.25rem',\n              marginBottom: '0.5rem',\n              fontSize: '0.75rem',\n              color: '#6b7280',\n              textAlign: 'center'\n            },\n            children: \"No sample rows added yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: handleAddTestRow,\n            style: {\n              marginTop: '0.5rem',\n              fontSize: '0.75rem'\n            },\n            children: \"Add Sample Row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_c = FieldConfigPanel;\nexport default FieldConfigPanel;\nvar _c;\n$RefreshReg$(_c, \"FieldConfigPanel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FieldConfigPanel","field","onFieldUpdate","_field$options","_field$columns","_field$columns2","handleChange","e","name","value","type","checked","target","handleAddColumn","newColumns","columns","push","length","handleUpdateColumn","index","updates","updatedColumns","handleRemoveColumn","filter","_","i","handleAddTestRow","newRow","reduce","acc","col","updatedValue","handleRemoveTestRow","handleTestCellChange","rowIndex","colName","handleAddOption","newOptions","options","label","handleUpdateOption","updatedOptions","handleRemoveOption","className","children","style","display","flexDirection","gap","backgroundColor","border","borderRadius","padding","marginBottom","fontSize","color","fontWeight","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","question","onChange","placeholder","alignItems","id","isRequired","width","htmlFor","margin","cursor","minLength","maxLength","marginTop","map","option","minWidth","onClick","column","justifyContent","height","fontStyle","marginLeft","overflowX","borderCollapse","idx","textAlign","row","rowIdx","colIdx","boxShadow","_c","$RefreshReg$"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/builder/FieldConfigPanel.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FieldConfigPanel = ({ field, onFieldUpdate }) => {\n  if (!field) return null;\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    \n    onFieldUpdate({\n      ...field,\n      [name]: type === 'checkbox' ? checked : value,\n    });\n  };\n\n  // Functions to handle column operations\n  const handleAddColumn = () => {\n    const newColumns = [...(field.columns || [])];\n    newColumns.push({ name: `Column ${newColumns.length + 1}`, type: 'text' });\n    \n    onFieldUpdate({\n      ...field,\n      columns: newColumns,\n    });\n  };\n\n  const handleUpdateColumn = (index, updates) => {\n    const updatedColumns = [...field.columns];\n    updatedColumns[index] = { ...updatedColumns[index], ...updates };\n    \n    onFieldUpdate({\n      ...field,\n      columns: updatedColumns,\n    });\n  };\n\n  const handleRemoveColumn = (index) => {\n    onFieldUpdate({\n      ...field,\n      columns: field.columns.filter((_, i) => i !== index),\n    });\n  };\n\n  // Handle adding test row for the table\n  const handleAddTestRow = () => {\n    if (!field.columns || field.columns.length === 0) return;\n    \n    // Create an empty row based on current columns\n    const newRow = field.columns.reduce((acc, col) => {\n      acc[col.name] = '';\n      return acc;\n    }, {});\n    \n    // Add the row to the value array directly (instead of testData)\n    const updatedValue = [...(field.value || []), newRow];\n    \n    onFieldUpdate({\n      ...field,\n      value: updatedValue,\n    });\n  };\n\n  // Handle removing a test row\n  const handleRemoveTestRow = (index) => {\n    onFieldUpdate({\n      ...field,\n      value: (field.value || []).filter((_, i) => i !== index),\n    });\n  };\n\n  // Update test row cell value\n  const handleTestCellChange = (rowIndex, colName, value) => {\n    const updatedValue = [...(field.value || [])];\n    updatedValue[rowIndex] = { \n      ...updatedValue[rowIndex],\n      [colName]: value \n    };\n    \n    onFieldUpdate({\n      ...field,\n      value: updatedValue,\n    });\n  };\n\n  // Handle dropdown options for a column\n  const handleAddOption = () => {\n    const newOptions = [...(field.options || [])];\n    newOptions.push({ value: `Option ${newOptions.length + 1}`, label: `Option ${newOptions.length + 1}` });\n    \n    onFieldUpdate({\n      ...field,\n      options: newOptions,\n    });\n  };\n\n  const handleUpdateOption = (index, value) => {\n    const updatedOptions = [...field.options];\n    updatedOptions[index] = { \n      ...updatedOptions[index], \n      value: value,\n      label: value \n    };\n    \n    onFieldUpdate({\n      ...field,\n      options: updatedOptions,\n    });\n  };\n\n  const handleRemoveOption = (index) => {\n    onFieldUpdate({\n      ...field,\n      options: field.options.filter((_, i) => i !== index),\n    });\n  };\n\n  return (\n    <div className=\"field-config-panel\">\n      <div style={{ \n        display: 'flex', \n        flexDirection: 'column', \n        gap: '1.25rem' \n      }}>\n        {/* Highlight the field type and question */}\n        <div style={{\n          backgroundColor: '#f0f9ff',\n          border: '1px solid #bae6fd',\n          borderRadius: '0.375rem',\n          padding: '0.75rem',\n          marginBottom: '1rem'\n        }}>\n          <div style={{ \n            fontSize: '0.875rem', \n            color: '#0369a1', \n            fontWeight: 'bold', \n            marginBottom: '0.25rem' \n          }}>\n            {field.type.charAt(0).toUpperCase() + field.type.slice(1)} Field\n          </div>\n          <div style={{ fontSize: '0.9375rem', fontWeight: '500' }}>\n            {field.question || 'Untitled Question'}\n          </div>\n        </div>\n        \n        {/* Question text input */}\n        <div className=\"config-field\">\n          <label className=\"form-label\">Question Text</label>\n          <input\n            type=\"text\"\n            name=\"question\"\n            value={field.question || ''}\n            onChange={handleChange}\n            className=\"input\"\n            placeholder=\"Enter question text\"\n          />\n        </div>\n        \n        {/* Required checkbox */}\n        <div className=\"config-field\">\n          <div style={{ \n            display: 'flex', \n            alignItems: 'center', \n            gap: '0.75rem' \n          }}>\n            <input\n              type=\"checkbox\"\n              id=\"isRequired\"\n              name=\"isRequired\"\n              checked={field.isRequired || false}\n              onChange={handleChange}\n              style={{ width: 'auto' }}\n            />\n            <label \n              htmlFor=\"isRequired\" \n              className=\"form-label\" \n              style={{ margin: 0, cursor: 'pointer' }}\n            >\n              Required Field\n            </label>\n          </div>\n        </div>\n        \n        {/* Text field specific settings */}\n        {field.type === 'text' && (\n          <>\n            <div className=\"config-field\">\n              <label className=\"form-label\">Minimum Length</label>\n              <input\n                type=\"number\"\n                name=\"minLength\"\n                value={field.minLength || ''}\n                onChange={handleChange}\n                className=\"input\"\n                placeholder=\"0\"\n              />\n            </div>\n            <div className=\"config-field\">\n              <label className=\"form-label\">Maximum Length</label>\n              <input\n                type=\"number\"\n                name=\"maxLength\"\n                value={field.maxLength || ''}\n                onChange={handleChange}\n                className=\"input\"\n                placeholder=\"100\"\n              />\n            </div>\n          </>\n        )}\n        \n        {/* Dropdown field specific settings */}\n        {field.type === 'dropdown' && (\n          <div className=\"config-field\">\n            <label className=\"form-label\">Options</label>\n            <div style={{ \n              display: 'flex', \n              flexDirection: 'column', \n              gap: '0.5rem', \n              marginTop: '0.5rem' \n            }}>\n              {field.options?.map((option, index) => (\n                <div key={index} style={{ \n                  display: 'flex', \n                  gap: '0.5rem' \n                }}>\n                  <input\n                    type=\"text\"\n                    value={option.value || ''}\n                    onChange={(e) => handleUpdateOption(index, e.target.value)}\n                    className=\"input\"\n                    placeholder={`Option ${index + 1}`}\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    style={{ \n                      backgroundColor: '#f87171', \n                      color: 'white',\n                      padding: '0.25rem 0.5rem',\n                      minWidth: '40px'\n                    }}\n                    onClick={() => handleRemoveOption(index)}\n                  >\n                    ✕\n                  </button>\n                </div>\n              ))}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                style={{ marginTop: '0.5rem' }}\n                onClick={handleAddOption}\n              >\n                Add Option\n              </button>\n            </div>\n          </div>\n        )}\n        \n        {/* Table field specific settings */}\n        {field.type === 'table' && (\n          <div className=\"config-field\">\n            <label className=\"form-label\">Table Configuration</label>\n            \n            {/* Column configuration */}\n            <div style={{ marginBottom: '1.5rem' }}>\n              <label className=\"form-label\">Columns</label>\n              {field.columns?.map((column, index) => (\n                <div key={index} className=\"card\" style={{ padding: '0.75rem', marginBottom: '0.75rem' }}>\n                  <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '0.5rem' }}>\n                    <div style={{ fontWeight: '500' }}>Column {index + 1}</div>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-secondary\"\n                      style={{ \n                        backgroundColor: '#f87171', \n                        color: 'white',\n                        padding: '0.125rem 0.375rem',\n                        fontSize: '0.75rem'\n                      }}\n                      onClick={() => handleRemoveColumn(index)}\n                    >\n                      Remove\n                    </button>\n                  </div>\n                  \n                  <div style={{ marginBottom: '0.5rem' }}>\n                    <label className=\"form-label\">Column Name</label>\n                    <input\n                      type=\"text\"\n                      value={column.name || ''}\n                      onChange={(e) => handleUpdateColumn(index, { name: e.target.value })}\n                      className=\"input\"\n                      style={{ height: '2rem' }}\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"form-label\">Column Type</label>\n                    <select\n                      value={column.type || 'text'}\n                      onChange={(e) => handleUpdateColumn(index, { type: e.target.value })}\n                      className=\"input\"\n                      style={{ height: '2rem' }}\n                    >\n                      <option value=\"text\">Text</option>\n                      <option value=\"dropdown\">Dropdown</option>\n                    </select>\n                  </div>\n                </div>\n              ))}\n              \n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={handleAddColumn}\n              >\n                Add Column\n              </button>\n            </div>\n            \n            {/* Sample data section (now updates actual value) */}\n            {field.columns?.length > 0 && (\n              <div style={{ marginTop: '1.5rem' }}>\n                <label className=\"form-label\" style={{ marginBottom: '0.5rem' }}>\n                  Sample Rows\n                  <span style={{ fontWeight: 'normal', fontStyle: 'italic', marginLeft: '0.5rem', fontSize: '0.75rem', color: '#6b7280' }}>\n                    (Will appear in the form)\n                  </span>\n                </label>\n                \n                {/* Display sample rows */}\n                {field.value && field.value.length > 0 ? (\n                  <div style={{ marginBottom: '1rem', overflowX: 'auto' }}>\n                    <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n                      <thead>\n                        <tr>\n                          {field.columns.map((col, idx) => (\n                            <th key={idx} style={{ \n                              padding: '0.375rem', \n                              backgroundColor: '#f9fafb',\n                              border: '1px solid #e5e7eb',\n                              textAlign: 'left',\n                              fontSize: '0.75rem'\n                            }}>\n                              {col.name}\n                            </th>\n                          ))}\n                          <th style={{ width: '40px', backgroundColor: '#f9fafb', border: '1px solid #e5e7eb' }}></th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {field.value.map((row, rowIdx) => (\n                          <tr key={rowIdx}>\n                            {field.columns.map((col, colIdx) => (\n                              <td key={colIdx} style={{ padding: '0.25rem', border: '1px solid #e5e7eb' }}>\n                                <input\n                                  type=\"text\"\n                                  value={row[col.name] || ''}\n                                  onChange={(e) => handleTestCellChange(rowIdx, col.name, e.target.value)}\n                                  className=\"input\"\n                                  style={{ \n                                    height: '1.75rem', \n                                    padding: '0.25rem',\n                                    fontSize: '0.75rem',\n                                    border: 'none',\n                                    boxShadow: 'none'\n                                  }}\n                                />\n                              </td>\n                            ))}\n                            <td style={{ padding: '0.25rem', border: '1px solid #e5e7eb', textAlign: 'center' }}>\n                              <button\n                                type=\"button\"\n                                onClick={() => handleRemoveTestRow(rowIdx)}\n                                style={{ \n                                  backgroundColor: '#f87171',\n                                  color: 'white',\n                                  border: 'none',\n                                  borderRadius: '0.25rem',\n                                  width: '18px',\n                                  height: '18px',\n                                  display: 'inline-flex',\n                                  alignItems: 'center',\n                                  justifyContent: 'center',\n                                  fontSize: '0.625rem',\n                                  padding: 0,\n                                  cursor: 'pointer'\n                                }}\n                              >\n                                ✕\n                              </button>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                ) : (\n                  <div style={{ \n                    padding: '0.5rem', \n                    backgroundColor: '#f9fafb', \n                    borderRadius: '0.25rem',\n                    marginBottom: '0.5rem',\n                    fontSize: '0.75rem',\n                    color: '#6b7280',\n                    textAlign: 'center'\n                  }}>\n                    No sample rows added yet\n                  </div>\n                )}\n                \n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  onClick={handleAddTestRow}\n                  style={{ marginTop: '0.5rem', fontSize: '0.75rem' }}\n                >\n                  Add Sample Row\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FieldConfigPanel;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAc,CAAC,KAAK;EAAA,IAAAC,cAAA,EAAAC,cAAA,EAAAC,eAAA;EACrD,IAAI,CAACJ,KAAK,EAAE,OAAO,IAAI;EAEvB,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGJ,CAAC,CAACK,MAAM;IAE/CV,aAAa,CAAC;MACZ,GAAGD,KAAK;MACR,CAACO,IAAI,GAAGE,IAAI,KAAK,UAAU,GAAGC,OAAO,GAAGF;IAC1C,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,UAAU,GAAG,CAAC,IAAIb,KAAK,CAACc,OAAO,IAAI,EAAE,CAAC,CAAC;IAC7CD,UAAU,CAACE,IAAI,CAAC;MAAER,IAAI,EAAE,UAAUM,UAAU,CAACG,MAAM,GAAG,CAAC,EAAE;MAAEP,IAAI,EAAE;IAAO,CAAC,CAAC;IAE1ER,aAAa,CAAC;MACZ,GAAGD,KAAK;MACRc,OAAO,EAAED;IACX,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC7C,MAAMC,cAAc,GAAG,CAAC,GAAGpB,KAAK,CAACc,OAAO,CAAC;IACzCM,cAAc,CAACF,KAAK,CAAC,GAAG;MAAE,GAAGE,cAAc,CAACF,KAAK,CAAC;MAAE,GAAGC;IAAQ,CAAC;IAEhElB,aAAa,CAAC;MACZ,GAAGD,KAAK;MACRc,OAAO,EAAEM;IACX,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,kBAAkB,GAAIH,KAAK,IAAK;IACpCjB,aAAa,CAAC;MACZ,GAAGD,KAAK;MACRc,OAAO,EAAEd,KAAK,CAACc,OAAO,CAACQ,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKN,KAAK;IACrD,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACzB,KAAK,CAACc,OAAO,IAAId,KAAK,CAACc,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;;IAElD;IACA,MAAMU,MAAM,GAAG1B,KAAK,CAACc,OAAO,CAACa,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MAChDD,GAAG,CAACC,GAAG,CAACtB,IAAI,CAAC,GAAG,EAAE;MAClB,OAAOqB,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEN;IACA,MAAME,YAAY,GAAG,CAAC,IAAI9B,KAAK,CAACQ,KAAK,IAAI,EAAE,CAAC,EAAEkB,MAAM,CAAC;IAErDzB,aAAa,CAAC;MACZ,GAAGD,KAAK;MACRQ,KAAK,EAAEsB;IACT,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAIb,KAAK,IAAK;IACrCjB,aAAa,CAAC;MACZ,GAAGD,KAAK;MACRQ,KAAK,EAAE,CAACR,KAAK,CAACQ,KAAK,IAAI,EAAE,EAAEc,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKN,KAAK;IACzD,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMc,oBAAoB,GAAGA,CAACC,QAAQ,EAAEC,OAAO,EAAE1B,KAAK,KAAK;IACzD,MAAMsB,YAAY,GAAG,CAAC,IAAI9B,KAAK,CAACQ,KAAK,IAAI,EAAE,CAAC,CAAC;IAC7CsB,YAAY,CAACG,QAAQ,CAAC,GAAG;MACvB,GAAGH,YAAY,CAACG,QAAQ,CAAC;MACzB,CAACC,OAAO,GAAG1B;IACb,CAAC;IAEDP,aAAa,CAAC;MACZ,GAAGD,KAAK;MACRQ,KAAK,EAAEsB;IACT,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,UAAU,GAAG,CAAC,IAAIpC,KAAK,CAACqC,OAAO,IAAI,EAAE,CAAC,CAAC;IAC7CD,UAAU,CAACrB,IAAI,CAAC;MAAEP,KAAK,EAAE,UAAU4B,UAAU,CAACpB,MAAM,GAAG,CAAC,EAAE;MAAEsB,KAAK,EAAE,UAAUF,UAAU,CAACpB,MAAM,GAAG,CAAC;IAAG,CAAC,CAAC;IAEvGf,aAAa,CAAC;MACZ,GAAGD,KAAK;MACRqC,OAAO,EAAED;IACX,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,kBAAkB,GAAGA,CAACrB,KAAK,EAAEV,KAAK,KAAK;IAC3C,MAAMgC,cAAc,GAAG,CAAC,GAAGxC,KAAK,CAACqC,OAAO,CAAC;IACzCG,cAAc,CAACtB,KAAK,CAAC,GAAG;MACtB,GAAGsB,cAAc,CAACtB,KAAK,CAAC;MACxBV,KAAK,EAAEA,KAAK;MACZ8B,KAAK,EAAE9B;IACT,CAAC;IAEDP,aAAa,CAAC;MACZ,GAAGD,KAAK;MACRqC,OAAO,EAAEG;IACX,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,kBAAkB,GAAIvB,KAAK,IAAK;IACpCjB,aAAa,CAAC;MACZ,GAAGD,KAAK;MACRqC,OAAO,EAAErC,KAAK,CAACqC,OAAO,CAACf,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKN,KAAK;IACrD,CAAC,CAAC;EACJ,CAAC;EAED,oBACEtB,OAAA;IAAK8C,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjC/C,OAAA;MAAKgD,KAAK,EAAE;QACVC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,GAAG,EAAE;MACP,CAAE;MAAAJ,QAAA,gBAEA/C,OAAA;QAAKgD,KAAK,EAAE;UACVI,eAAe,EAAE,SAAS;UAC1BC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,UAAU;UACxBC,OAAO,EAAE,SAAS;UAClBC,YAAY,EAAE;QAChB,CAAE;QAAAT,QAAA,gBACA/C,OAAA;UAAKgD,KAAK,EAAE;YACVS,QAAQ,EAAE,UAAU;YACpBC,KAAK,EAAE,SAAS;YAChBC,UAAU,EAAE,MAAM;YAClBH,YAAY,EAAE;UAChB,CAAE;UAAAT,QAAA,GACC3C,KAAK,CAACS,IAAI,CAAC+C,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGzD,KAAK,CAACS,IAAI,CAACiD,KAAK,CAAC,CAAC,CAAC,EAAC,QAC5D;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNlE,OAAA;UAAKgD,KAAK,EAAE;YAAES,QAAQ,EAAE,WAAW;YAAEE,UAAU,EAAE;UAAM,CAAE;UAAAZ,QAAA,EACtD3C,KAAK,CAAC+D,QAAQ,IAAI;QAAmB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNlE,OAAA;QAAK8C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B/C,OAAA;UAAO8C,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAa;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnDlE,OAAA;UACEa,IAAI,EAAC,MAAM;UACXF,IAAI,EAAC,UAAU;UACfC,KAAK,EAAER,KAAK,CAAC+D,QAAQ,IAAI,EAAG;UAC5BC,QAAQ,EAAE3D,YAAa;UACvBqC,SAAS,EAAC,OAAO;UACjBuB,WAAW,EAAC;QAAqB;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNlE,OAAA;QAAK8C,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3B/C,OAAA;UAAKgD,KAAK,EAAE;YACVC,OAAO,EAAE,MAAM;YACfqB,UAAU,EAAE,QAAQ;YACpBnB,GAAG,EAAE;UACP,CAAE;UAAAJ,QAAA,gBACA/C,OAAA;YACEa,IAAI,EAAC,UAAU;YACf0D,EAAE,EAAC,YAAY;YACf5D,IAAI,EAAC,YAAY;YACjBG,OAAO,EAAEV,KAAK,CAACoE,UAAU,IAAI,KAAM;YACnCJ,QAAQ,EAAE3D,YAAa;YACvBuC,KAAK,EAAE;cAAEyB,KAAK,EAAE;YAAO;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,eACFlE,OAAA;YACE0E,OAAO,EAAC,YAAY;YACpB5B,SAAS,EAAC,YAAY;YACtBE,KAAK,EAAE;cAAE2B,MAAM,EAAE,CAAC;cAAEC,MAAM,EAAE;YAAU,CAAE;YAAA7B,QAAA,EACzC;UAED;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGL9D,KAAK,CAACS,IAAI,KAAK,MAAM,iBACpBb,OAAA,CAAAE,SAAA;QAAA6C,QAAA,gBACE/C,OAAA;UAAK8C,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B/C,OAAA;YAAO8C,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAc;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpDlE,OAAA;YACEa,IAAI,EAAC,QAAQ;YACbF,IAAI,EAAC,WAAW;YAChBC,KAAK,EAAER,KAAK,CAACyE,SAAS,IAAI,EAAG;YAC7BT,QAAQ,EAAE3D,YAAa;YACvBqC,SAAS,EAAC,OAAO;YACjBuB,WAAW,EAAC;UAAG;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNlE,OAAA;UAAK8C,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B/C,OAAA;YAAO8C,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAc;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpDlE,OAAA;YACEa,IAAI,EAAC,QAAQ;YACbF,IAAI,EAAC,WAAW;YAChBC,KAAK,EAAER,KAAK,CAAC0E,SAAS,IAAI,EAAG;YAC7BV,QAAQ,EAAE3D,YAAa;YACvBqC,SAAS,EAAC,OAAO;YACjBuB,WAAW,EAAC;UAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,eACN,CACH,EAGA9D,KAAK,CAACS,IAAI,KAAK,UAAU,iBACxBb,OAAA;QAAK8C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B/C,OAAA;UAAO8C,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAO;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7ClE,OAAA;UAAKgD,KAAK,EAAE;YACVC,OAAO,EAAE,MAAM;YACfC,aAAa,EAAE,QAAQ;YACvBC,GAAG,EAAE,QAAQ;YACb4B,SAAS,EAAE;UACb,CAAE;UAAAhC,QAAA,IAAAzC,cAAA,GACCF,KAAK,CAACqC,OAAO,cAAAnC,cAAA,uBAAbA,cAAA,CAAe0E,GAAG,CAAC,CAACC,MAAM,EAAE3D,KAAK,kBAChCtB,OAAA;YAAiBgD,KAAK,EAAE;cACtBC,OAAO,EAAE,MAAM;cACfE,GAAG,EAAE;YACP,CAAE;YAAAJ,QAAA,gBACA/C,OAAA;cACEa,IAAI,EAAC,MAAM;cACXD,KAAK,EAAEqE,MAAM,CAACrE,KAAK,IAAI,EAAG;cAC1BwD,QAAQ,EAAG1D,CAAC,IAAKiC,kBAAkB,CAACrB,KAAK,EAAEZ,CAAC,CAACK,MAAM,CAACH,KAAK,CAAE;cAC3DkC,SAAS,EAAC,OAAO;cACjBuB,WAAW,EAAE,UAAU/C,KAAK,GAAG,CAAC;YAAG;cAAAyC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC,eACFlE,OAAA;cACEa,IAAI,EAAC,QAAQ;cACbiC,SAAS,EAAC,mBAAmB;cAC7BE,KAAK,EAAE;gBACLI,eAAe,EAAE,SAAS;gBAC1BM,KAAK,EAAE,OAAO;gBACdH,OAAO,EAAE,gBAAgB;gBACzB2B,QAAQ,EAAE;cACZ,CAAE;cACFC,OAAO,EAAEA,CAAA,KAAMtC,kBAAkB,CAACvB,KAAK,CAAE;cAAAyB,QAAA,EAC1C;YAED;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GAvBD5C,KAAK;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAwBV,CACN,CAAC,eACFlE,OAAA;YACEa,IAAI,EAAC,QAAQ;YACbiC,SAAS,EAAC,mBAAmB;YAC7BE,KAAK,EAAE;cAAE+B,SAAS,EAAE;YAAS,CAAE;YAC/BI,OAAO,EAAE5C,eAAgB;YAAAQ,QAAA,EAC1B;UAED;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAGA9D,KAAK,CAACS,IAAI,KAAK,OAAO,iBACrBb,OAAA;QAAK8C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B/C,OAAA;UAAO8C,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAmB;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAGzDlE,OAAA;UAAKgD,KAAK,EAAE;YAAEQ,YAAY,EAAE;UAAS,CAAE;UAAAT,QAAA,gBACrC/C,OAAA;YAAO8C,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAO;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,GAAA3D,cAAA,GAC5CH,KAAK,CAACc,OAAO,cAAAX,cAAA,uBAAbA,cAAA,CAAeyE,GAAG,CAAC,CAACI,MAAM,EAAE9D,KAAK,kBAChCtB,OAAA;YAAiB8C,SAAS,EAAC,MAAM;YAACE,KAAK,EAAE;cAAEO,OAAO,EAAE,SAAS;cAAEC,YAAY,EAAE;YAAU,CAAE;YAAAT,QAAA,gBACvF/C,OAAA;cAAKgD,KAAK,EAAE;gBAAEC,OAAO,EAAE,MAAM;gBAAEoC,cAAc,EAAE,eAAe;gBAAE7B,YAAY,EAAE;cAAS,CAAE;cAAAT,QAAA,gBACvF/C,OAAA;gBAAKgD,KAAK,EAAE;kBAAEW,UAAU,EAAE;gBAAM,CAAE;gBAAAZ,QAAA,GAAC,SAAO,EAACzB,KAAK,GAAG,CAAC;cAAA;gBAAAyC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC3DlE,OAAA;gBACEa,IAAI,EAAC,QAAQ;gBACbiC,SAAS,EAAC,mBAAmB;gBAC7BE,KAAK,EAAE;kBACLI,eAAe,EAAE,SAAS;kBAC1BM,KAAK,EAAE,OAAO;kBACdH,OAAO,EAAE,mBAAmB;kBAC5BE,QAAQ,EAAE;gBACZ,CAAE;gBACF0B,OAAO,EAAEA,CAAA,KAAM1D,kBAAkB,CAACH,KAAK,CAAE;gBAAAyB,QAAA,EAC1C;cAED;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eAENlE,OAAA;cAAKgD,KAAK,EAAE;gBAAEQ,YAAY,EAAE;cAAS,CAAE;cAAAT,QAAA,gBACrC/C,OAAA;gBAAO8C,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAW;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACjDlE,OAAA;gBACEa,IAAI,EAAC,MAAM;gBACXD,KAAK,EAAEwE,MAAM,CAACzE,IAAI,IAAI,EAAG;gBACzByD,QAAQ,EAAG1D,CAAC,IAAKW,kBAAkB,CAACC,KAAK,EAAE;kBAAEX,IAAI,EAAED,CAAC,CAACK,MAAM,CAACH;gBAAM,CAAC,CAAE;gBACrEkC,SAAS,EAAC,OAAO;gBACjBE,KAAK,EAAE;kBAAEsC,MAAM,EAAE;gBAAO;cAAE;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENlE,OAAA;cAAA+C,QAAA,gBACE/C,OAAA;gBAAO8C,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAW;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACjDlE,OAAA;gBACEY,KAAK,EAAEwE,MAAM,CAACvE,IAAI,IAAI,MAAO;gBAC7BuD,QAAQ,EAAG1D,CAAC,IAAKW,kBAAkB,CAACC,KAAK,EAAE;kBAAET,IAAI,EAAEH,CAAC,CAACK,MAAM,CAACH;gBAAM,CAAC,CAAE;gBACrEkC,SAAS,EAAC,OAAO;gBACjBE,KAAK,EAAE;kBAAEsC,MAAM,EAAE;gBAAO,CAAE;gBAAAvC,QAAA,gBAE1B/C,OAAA;kBAAQY,KAAK,EAAC,MAAM;kBAAAmC,QAAA,EAAC;gBAAI;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAClClE,OAAA;kBAAQY,KAAK,EAAC,UAAU;kBAAAmC,QAAA,EAAC;gBAAQ;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA,GAxCE5C,KAAK;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAyCV,CACN,CAAC,eAEFlE,OAAA;YACEa,IAAI,EAAC,QAAQ;YACbiC,SAAS,EAAC,iBAAiB;YAC3BqC,OAAO,EAAEnE,eAAgB;YAAA+B,QAAA,EAC1B;UAED;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAGL,EAAA1D,eAAA,GAAAJ,KAAK,CAACc,OAAO,cAAAV,eAAA,uBAAbA,eAAA,CAAeY,MAAM,IAAG,CAAC,iBACxBpB,OAAA;UAAKgD,KAAK,EAAE;YAAE+B,SAAS,EAAE;UAAS,CAAE;UAAAhC,QAAA,gBAClC/C,OAAA;YAAO8C,SAAS,EAAC,YAAY;YAACE,KAAK,EAAE;cAAEQ,YAAY,EAAE;YAAS,CAAE;YAAAT,QAAA,GAAC,aAE/D,eAAA/C,OAAA;cAAMgD,KAAK,EAAE;gBAAEW,UAAU,EAAE,QAAQ;gBAAE4B,SAAS,EAAE,QAAQ;gBAAEC,UAAU,EAAE,QAAQ;gBAAE/B,QAAQ,EAAE,SAAS;gBAAEC,KAAK,EAAE;cAAU,CAAE;cAAAX,QAAA,EAAC;YAEzH;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,EAGP9D,KAAK,CAACQ,KAAK,IAAIR,KAAK,CAACQ,KAAK,CAACQ,MAAM,GAAG,CAAC,gBACpCpB,OAAA;YAAKgD,KAAK,EAAE;cAAEQ,YAAY,EAAE,MAAM;cAAEiC,SAAS,EAAE;YAAO,CAAE;YAAA1C,QAAA,eACtD/C,OAAA;cAAOgD,KAAK,EAAE;gBAAEyB,KAAK,EAAE,MAAM;gBAAEiB,cAAc,EAAE;cAAW,CAAE;cAAA3C,QAAA,gBAC1D/C,OAAA;gBAAA+C,QAAA,eACE/C,OAAA;kBAAA+C,QAAA,GACG3C,KAAK,CAACc,OAAO,CAAC8D,GAAG,CAAC,CAAC/C,GAAG,EAAE0D,GAAG,kBAC1B3F,OAAA;oBAAcgD,KAAK,EAAE;sBACnBO,OAAO,EAAE,UAAU;sBACnBH,eAAe,EAAE,SAAS;sBAC1BC,MAAM,EAAE,mBAAmB;sBAC3BuC,SAAS,EAAE,MAAM;sBACjBnC,QAAQ,EAAE;oBACZ,CAAE;oBAAAV,QAAA,EACCd,GAAG,CAACtB;kBAAI,GAPFgF,GAAG;oBAAA5B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAQR,CACL,CAAC,eACFlE,OAAA;oBAAIgD,KAAK,EAAE;sBAAEyB,KAAK,EAAE,MAAM;sBAAErB,eAAe,EAAE,SAAS;sBAAEC,MAAM,EAAE;oBAAoB;kBAAE;oBAAAU,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1F;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACRlE,OAAA;gBAAA+C,QAAA,EACG3C,KAAK,CAACQ,KAAK,CAACoE,GAAG,CAAC,CAACa,GAAG,EAAEC,MAAM,kBAC3B9F,OAAA;kBAAA+C,QAAA,GACG3C,KAAK,CAACc,OAAO,CAAC8D,GAAG,CAAC,CAAC/C,GAAG,EAAE8D,MAAM,kBAC7B/F,OAAA;oBAAiBgD,KAAK,EAAE;sBAAEO,OAAO,EAAE,SAAS;sBAAEF,MAAM,EAAE;oBAAoB,CAAE;oBAAAN,QAAA,eAC1E/C,OAAA;sBACEa,IAAI,EAAC,MAAM;sBACXD,KAAK,EAAEiF,GAAG,CAAC5D,GAAG,CAACtB,IAAI,CAAC,IAAI,EAAG;sBAC3ByD,QAAQ,EAAG1D,CAAC,IAAK0B,oBAAoB,CAAC0D,MAAM,EAAE7D,GAAG,CAACtB,IAAI,EAAED,CAAC,CAACK,MAAM,CAACH,KAAK,CAAE;sBACxEkC,SAAS,EAAC,OAAO;sBACjBE,KAAK,EAAE;wBACLsC,MAAM,EAAE,SAAS;wBACjB/B,OAAO,EAAE,SAAS;wBAClBE,QAAQ,EAAE,SAAS;wBACnBJ,MAAM,EAAE,MAAM;wBACd2C,SAAS,EAAE;sBACb;oBAAE;sBAAAjC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH;kBAAC,GAbK6B,MAAM;oBAAAhC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAcX,CACL,CAAC,eACFlE,OAAA;oBAAIgD,KAAK,EAAE;sBAAEO,OAAO,EAAE,SAAS;sBAAEF,MAAM,EAAE,mBAAmB;sBAAEuC,SAAS,EAAE;oBAAS,CAAE;oBAAA7C,QAAA,eAClF/C,OAAA;sBACEa,IAAI,EAAC,QAAQ;sBACbsE,OAAO,EAAEA,CAAA,KAAMhD,mBAAmB,CAAC2D,MAAM,CAAE;sBAC3C9C,KAAK,EAAE;wBACLI,eAAe,EAAE,SAAS;wBAC1BM,KAAK,EAAE,OAAO;wBACdL,MAAM,EAAE,MAAM;wBACdC,YAAY,EAAE,SAAS;wBACvBmB,KAAK,EAAE,MAAM;wBACba,MAAM,EAAE,MAAM;wBACdrC,OAAO,EAAE,aAAa;wBACtBqB,UAAU,EAAE,QAAQ;wBACpBe,cAAc,EAAE,QAAQ;wBACxB5B,QAAQ,EAAE,UAAU;wBACpBF,OAAO,EAAE,CAAC;wBACVqB,MAAM,EAAE;sBACV,CAAE;sBAAA7B,QAAA,EACH;oBAED;sBAAAgB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACP,CAAC;gBAAA,GAvCE4B,MAAM;kBAAA/B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAwCX,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,gBAENlE,OAAA;YAAKgD,KAAK,EAAE;cACVO,OAAO,EAAE,QAAQ;cACjBH,eAAe,EAAE,SAAS;cAC1BE,YAAY,EAAE,SAAS;cACvBE,YAAY,EAAE,QAAQ;cACtBC,QAAQ,EAAE,SAAS;cACnBC,KAAK,EAAE,SAAS;cAChBkC,SAAS,EAAE;YACb,CAAE;YAAA7C,QAAA,EAAC;UAEH;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACN,eAEDlE,OAAA;YACEa,IAAI,EAAC,QAAQ;YACbiC,SAAS,EAAC,mBAAmB;YAC7BqC,OAAO,EAAEtD,gBAAiB;YAC1BmB,KAAK,EAAE;cAAE+B,SAAS,EAAE,QAAQ;cAAEtB,QAAQ,EAAE;YAAU,CAAE;YAAAV,QAAA,EACrD;UAED;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC+B,EAAA,GAxaI9F,gBAAgB;AA0atB,eAAeA,gBAAgB;AAAC,IAAA8F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}