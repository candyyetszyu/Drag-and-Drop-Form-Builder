{"ast":null,"code":"// Custom hook for making API requests with loading and error states\nimport { useState, useCallback } from 'react';\nimport { api } from '../api/apiConfig';\n\n// Remove the unused BASE_URL constant\n// const BASE_URL = 'http://localhost:3001';\n\nexport const useApi = () => {\n  const [loading, setLoading] = useState(false); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  // Generic request handler\n  const request = useCallback(async (method, url, data = null) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api[method](url, data);\n      return response.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  return {\n    loading,\n    error,\n    get: url => request('get', url),\n    post: (url, data) => request('post', url, data),\n    put: (url, data) => request('put', url, data),\n    delete: url => request('delete', url)\n  };\n};","map":{"version":3,"names":["useState","useCallback","api","useApi","loading","setLoading","error","setError","request","method","url","data","response","err","_err$response","_err$response$data","message","get","post","put","delete"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/hooks/useApi.js"],"sourcesContent":["// Custom hook for making API requests with loading and error states\nimport { useState, useCallback } from 'react';\nimport { api } from '../api/apiConfig';\n\n// Remove the unused BASE_URL constant\n// const BASE_URL = 'http://localhost:3001';\n\nexport const useApi = () => {\n  const [loading, setLoading] = useState(false); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  // Generic request handler\n  const request = useCallback(async (method, url, data = null) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api[method](url, data);\n      return response.data;\n    } catch (err) {\n      setError(err.response?.data?.message || err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return {\n    loading,\n    error,\n    get: (url) => request('get', url),\n    post: (url, data) => request('post', url, data),\n    put: (url, data) => request('put', url, data),\n    delete: (url) => request('delete', url),\n  };\n};"],"mappings":"AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,GAAG,QAAQ,kBAAkB;;AAEtC;AACA;;AAEA,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMQ,OAAO,GAAGP,WAAW,CAAC,OAAOQ,MAAM,EAAEC,GAAG,EAAEC,IAAI,GAAG,IAAI,KAAK;IAC9D,IAAI;MACFN,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMK,QAAQ,GAAG,MAAMV,GAAG,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,CAAC;MAC7C,OAAOC,QAAQ,CAACD,IAAI;IACtB,CAAC,CAAC,OAAOE,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZR,QAAQ,CAAC,EAAAO,aAAA,GAAAD,GAAG,CAACD,QAAQ,cAAAE,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAIH,GAAG,CAACG,OAAO,CAAC;MACpD,MAAMH,GAAG;IACX,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLD,OAAO;IACPE,KAAK;IACLW,GAAG,EAAGP,GAAG,IAAKF,OAAO,CAAC,KAAK,EAAEE,GAAG,CAAC;IACjCQ,IAAI,EAAEA,CAACR,GAAG,EAAEC,IAAI,KAAKH,OAAO,CAAC,MAAM,EAAEE,GAAG,EAAEC,IAAI,CAAC;IAC/CQ,GAAG,EAAEA,CAACT,GAAG,EAAEC,IAAI,KAAKH,OAAO,CAAC,KAAK,EAAEE,GAAG,EAAEC,IAAI,CAAC;IAC7CS,MAAM,EAAGV,GAAG,IAAKF,OAAO,CAAC,QAAQ,EAAEE,GAAG;EACxC,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}