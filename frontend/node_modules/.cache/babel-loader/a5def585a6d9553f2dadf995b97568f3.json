{"ast":null,"code":"import React,{useState,useEffect}from'react';import styled from'styled-components';const FieldContainer=styled.div`\n  margin-bottom: 1rem;\n  padding: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background: white;\n`;const Question=styled.div`\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n`;const Table=styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 1rem;\n  font-size: 0.75rem; // Smaller font for the whole table\n`;const Th=styled.th`\n  padding: 0.25rem; // Smaller padding\n  border: 1px solid #ddd;\n  background: #f5f5f5;\n  text-align: left;\n  font-size: 0.75rem;\n`;const Td=styled.td`\n  padding: 0.125rem; // Extra small padding\n  border: 1px solid #ddd;\n`;const AddRowButton=styled.button`\n  margin-top: 1rem;\n  padding: 0.5rem 1rem;\n  background: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background: #0056b3;\n  }\n`;const TableField=_ref=>{let{question,required,columns=[],value=[],onChange,isPreview=false}=_ref;const[rows,setRows]=useState(value&&value.length?value:[]);// Sync with parent component when value changes\nuseEffect(()=>{if(value&&JSON.stringify(value)!==JSON.stringify(rows)){setRows(value.length?value:[]);}},[value]);// Create an empty row based on current columns\nconst createEmptyRow=()=>{return columns.reduce((acc,col)=>{const key=col.id||col.name;acc[key]='';return acc;},{});};// Handle adding a new row\nconst handleAddRow=()=>{console.log(\"Adding row, current rows:\",rows);console.log(\"Columns:\",columns);if(!columns.length){console.log(\"No columns defined, cannot add row\");return;}const newRow=createEmptyRow();console.log(\"Created new empty row:\",newRow);const newRows=[...rows,newRow];console.log(\"New rows array:\",newRows);setRows(newRows);if(onChange){console.log(\"Calling onChange with new rows\");onChange(newRows);}};// Handle cell value changes\nconst handleCellChange=(rowIndex,columnKey,newValue)=>{console.log(`Changing cell at row ${rowIndex}, column ${columnKey} to:`,newValue);const newRows=rows.map((row,index)=>{if(index===rowIndex){return{...row,[columnKey]:newValue};}return row;});setRows(newRows);if(onChange){onChange(newRows);}};// Handle removing a row\nconst handleRemoveRow=rowIndex=>{console.log(`Removing row at index ${rowIndex}`);const newRows=rows.filter((_,index)=>index!==rowIndex);setRows(newRows);if(onChange){onChange(newRows);}};// Initialize with at least one row if we have columns but no rows\nuseEffect(()=>{if(columns.length>0&&rows.length===0&&isPreview){console.log(\"Initializing with one empty row\");handleAddRow();}},[columns,isPreview]);return/*#__PURE__*/React.createElement(FieldContainer,null,/*#__PURE__*/React.createElement(Question,null,question,required&&/*#__PURE__*/React.createElement(\"span\",{style:{color:'red'}},\" *\")),/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,columns.map((column,index)=>/*#__PURE__*/React.createElement(Th,{key:index},column.name)),isPreview&&/*#__PURE__*/React.createElement(Th,null,\"Actions\"))),/*#__PURE__*/React.createElement(\"tbody\",null,rows.map((row,rowIndex)=>/*#__PURE__*/React.createElement(\"tr\",{key:rowIndex},columns.map((column,colIndex)=>{var _column$options;const columnKey=column.id||column.name;return/*#__PURE__*/React.createElement(Td,{key:colIndex},column.type==='dropdown'?/*#__PURE__*/React.createElement(\"select\",{value:row[columnKey]||'',onChange:e=>handleCellChange(rowIndex,columnKey,e.target.value),disabled:!isPreview,style:{padding:'0.125rem 0.25rem',// Even smaller padding\nheight:'1.5rem',// Reduced height\nfontSize:'0.7rem',// Smaller font\nlineHeight:'1',// Tighter line height\nminWidth:'100%',border:'1px solid #e5e7eb',boxShadow:'none'}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select\"),(_column$options=column.options)===null||_column$options===void 0?void 0:_column$options.map((option,optIndex)=>/*#__PURE__*/React.createElement(\"option\",{key:optIndex,value:option.value||option},option.label||option.value||option))):/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:row[columnKey]||'',onChange:e=>handleCellChange(rowIndex,columnKey,e.target.value),disabled:!isPreview,style:{padding:'0.125rem 0.25rem',// Even smaller padding\nheight:'1.5rem',// Reduced height\nfontSize:'0.7rem',// Smaller font\nlineHeight:'1',// Tighter line height\nminWidth:'100%',border:'1px solid #e5e7eb',boxShadow:'none'}}));}),isPreview&&/*#__PURE__*/React.createElement(Td,null,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",onClick:()=>handleRemoveRow(rowIndex),style:{padding:'0.25rem',backgroundColor:'#f87171',color:'white',borderRadius:'0.25rem',width:'24px',height:'24px',display:'inline-flex',alignItems:'center',justifyContent:'center'}},\"\\u2715\")))))),isPreview&&/*#__PURE__*/React.createElement(AddRowButton,{onClick:handleAddRow,disabled:columns.length===0},\"Add Row\"));};export default TableField;","map":{"version":3,"names":["React","useState","useEffect","styled","FieldContainer","div","Question","Table","table","Th","th","Td","td","AddRowButton","button","TableField","_ref","question","required","columns","value","onChange","isPreview","rows","setRows","length","JSON","stringify","createEmptyRow","reduce","acc","col","key","id","name","handleAddRow","console","log","newRow","newRows","handleCellChange","rowIndex","columnKey","newValue","map","row","index","handleRemoveRow","filter","_","createElement","style","color","column","colIndex","_column$options","type","e","target","disabled","padding","height","fontSize","lineHeight","minWidth","border","boxShadow","options","option","optIndex","label","onClick","backgroundColor","borderRadius","width","display","alignItems","justifyContent"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/shared/TableField.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst FieldContainer = styled.div`\n  margin-bottom: 1rem;\n  padding: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background: white;\n`;\n\nconst Question = styled.div`\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 1rem;\n  font-size: 0.75rem; // Smaller font for the whole table\n`;\n\nconst Th = styled.th`\n  padding: 0.25rem; // Smaller padding\n  border: 1px solid #ddd;\n  background: #f5f5f5;\n  text-align: left;\n  font-size: 0.75rem;\n`;\n\nconst Td = styled.td`\n  padding: 0.125rem; // Extra small padding\n  border: 1px solid #ddd;\n`;\n\nconst AddRowButton = styled.button`\n  margin-top: 1rem;\n  padding: 0.5rem 1rem;\n  background: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background: #0056b3;\n  }\n`;\n\nconst TableField = ({\n  question,\n  required,\n  columns = [],\n  value = [],\n  onChange,\n  isPreview = false\n}) => {\n  const [rows, setRows] = useState(value && value.length ? value : []);\n\n  // Sync with parent component when value changes\n  useEffect(() => {\n    if (value && JSON.stringify(value) !== JSON.stringify(rows)) {\n      setRows(value.length ? value : []);\n    }\n  }, [value]);\n\n  // Create an empty row based on current columns\n  const createEmptyRow = () => {\n    return columns.reduce((acc, col) => {\n      const key = col.id || col.name;\n      acc[key] = '';\n      return acc;\n    }, {});\n  };\n\n  // Handle adding a new row\n  const handleAddRow = () => {\n    console.log(\"Adding row, current rows:\", rows);\n    console.log(\"Columns:\", columns);\n    \n    if (!columns.length) {\n      console.log(\"No columns defined, cannot add row\");\n      return;\n    }\n    \n    const newRow = createEmptyRow();\n    console.log(\"Created new empty row:\", newRow);\n    \n    const newRows = [...rows, newRow];\n    console.log(\"New rows array:\", newRows);\n    \n    setRows(newRows);\n    \n    if (onChange) {\n      console.log(\"Calling onChange with new rows\");\n      onChange(newRows);\n    }\n  };\n\n  // Handle cell value changes\n  const handleCellChange = (rowIndex, columnKey, newValue) => {\n    console.log(`Changing cell at row ${rowIndex}, column ${columnKey} to:`, newValue);\n    \n    const newRows = rows.map((row, index) => {\n      if (index === rowIndex) {\n        return { ...row, [columnKey]: newValue };\n      }\n      return row;\n    });\n    \n    setRows(newRows);\n    \n    if (onChange) {\n      onChange(newRows);\n    }\n  };\n\n  // Handle removing a row\n  const handleRemoveRow = (rowIndex) => {\n    console.log(`Removing row at index ${rowIndex}`);\n    \n    const newRows = rows.filter((_, index) => index !== rowIndex);\n    setRows(newRows);\n    \n    if (onChange) {\n      onChange(newRows);\n    }\n  };\n\n  // Initialize with at least one row if we have columns but no rows\n  useEffect(() => {\n    if (columns.length > 0 && rows.length === 0 && isPreview) {\n      console.log(\"Initializing with one empty row\");\n      handleAddRow();\n    }\n  }, [columns, isPreview]);\n\n  return (\n    <FieldContainer>\n      <Question>\n        {question}\n        {required && <span style={{ color: 'red' }}> *</span>}\n      </Question>\n      <Table>\n        <thead>\n          <tr>\n            {columns.map((column, index) => (\n              <Th key={index}>\n                {column.name}\n              </Th>\n            ))}\n            {isPreview && (\n              <Th>\n                Actions\n              </Th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {columns.map((column, colIndex) => {\n                const columnKey = column.id || column.name;\n                return (\n                  <Td key={colIndex}>\n                    {column.type === 'dropdown' ? (\n                      <select\n                        value={row[columnKey] || ''}\n                        onChange={(e) => handleCellChange(rowIndex, columnKey, e.target.value)}\n                        disabled={!isPreview}\n                        style={{ \n                          padding: '0.125rem 0.25rem', // Even smaller padding\n                          height: '1.5rem', // Reduced height\n                          fontSize: '0.7rem', // Smaller font\n                          lineHeight: '1', // Tighter line height\n                          minWidth: '100%',\n                          border: '1px solid #e5e7eb',\n                          boxShadow: 'none'\n                        }}\n                      >\n                        <option value=\"\">Select</option>\n                        {column.options?.map((option, optIndex) => (\n                          <option key={optIndex} value={option.value || option}>\n                            {option.label || option.value || option}\n                          </option>\n                        ))}\n                      </select>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        value={row[columnKey] || ''}\n                        onChange={(e) => handleCellChange(rowIndex, columnKey, e.target.value)}\n                        disabled={!isPreview}\n                        style={{ \n                          padding: '0.125rem 0.25rem', // Even smaller padding\n                          height: '1.5rem', // Reduced height\n                          fontSize: '0.7rem', // Smaller font\n                          lineHeight: '1', // Tighter line height\n                          minWidth: '100%',\n                          border: '1px solid #e5e7eb',\n                          boxShadow: 'none'\n                        }}\n                      />\n                    )}\n                  </Td>\n                );\n              })}\n              {isPreview && (\n                <Td>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleRemoveRow(rowIndex)}\n                    style={{ \n                      padding: '0.25rem',\n                      backgroundColor: '#f87171',\n                      color: 'white',\n                      borderRadius: '0.25rem',\n                      width: '24px',\n                      height: '24px',\n                      display: 'inline-flex',\n                      alignItems: 'center',\n                      justifyContent: 'center'\n                    }}\n                  >\n                    ✕\n                  </button>\n                </Td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      {isPreview && (\n        <AddRowButton onClick={handleAddRow} disabled={columns.length === 0}>\n          Add Row\n        </AddRowButton>\n      )}\n    </FieldContainer>\n  );\n};\n\nexport default TableField;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}