{"ast":null,"code":"import axios from 'axios';\n\n// Define base URL for API requests\nconst BASE_API_URL = 'http://localhost:3001/api';\n\n// Create axios instance with configuration\nconst api = axios.create({\n  baseURL: BASE_API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 8000 // 8 second timeout\n});\n\n// Add request interceptor for logging and authentication\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // Server returned an error response\n    console.error(`API Error (${error.response.status}):`, error.response.data);\n  } else if (error.request) {\n    // Request made but no response received\n    console.error('No response received:', error.request);\n  } else {\n    // Error setting up the request\n    console.error('Request setup error:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport { api, BASE_API_URL };","map":{"version":3,"names":["axios","BASE_API_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","data","message"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/api/apiConfig.js"],"sourcesContent":["import axios from 'axios';\n\n// Define base URL for API requests\nconst BASE_API_URL = 'http://localhost:3001/api';\n\n// Create axios instance with configuration\nconst api = axios.create({\n  baseURL: BASE_API_URL,\n  headers: { 'Content-Type': 'application/json' },\n  timeout: 8000 // 8 second timeout\n});\n\n// Add request interceptor for logging and authentication\napi.interceptors.request.use(\n  config => {\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  error => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response) {\n      // Server returned an error response\n      console.error(`API Error (${error.response.status}):`, error.response.data);\n    } else if (error.request) {\n      // Request made but no response received\n      console.error('No response received:', error.request);\n    } else {\n      // Error setting up the request\n      console.error('Request setup error:', error.message);\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport { api, BASE_API_URL };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB,CAAC;EAC/CC,OAAO,EAAE,IAAI,CAAC;AAChB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EAAA,IAAAC,cAAA;EACRC,OAAO,CAACC,GAAG,CAAC,iBAAAF,cAAA,GAAgBD,MAAM,CAACI,MAAM,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,IAAIL,MAAM,CAACM,GAAG,EAAE,CAAC;EACzE,OAAON,MAAM;AACf,CAAC,EACDO,KAAK,IAAI;EACPL,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,GAAG,CAACK,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC3BW,QAAQ,IAAIA,QAAQ,EACpBH,KAAK,IAAI;EACP,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB;IACAR,OAAO,CAACK,KAAK,CAAC,cAAcA,KAAK,CAACG,QAAQ,CAACC,MAAM,IAAI,EAAEJ,KAAK,CAACG,QAAQ,CAACE,IAAI,CAAC;EAC7E,CAAC,MAAM,IAAIL,KAAK,CAACT,OAAO,EAAE;IACxB;IACAI,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACT,OAAO,CAAC;EACvD,CAAC,MAAM;IACL;IACAI,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACM,OAAO,CAAC;EACtD;EACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,SAASf,GAAG,EAAED,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}