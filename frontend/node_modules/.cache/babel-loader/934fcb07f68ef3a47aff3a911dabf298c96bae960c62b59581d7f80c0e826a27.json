{"ast":null,"code":"var _jsxFileName = \"/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/builder/FormCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useDrop } from 'react-dnd';\n// Update import path for FieldRenderer\nimport FieldRenderer from '../fields/FieldRenderer';\nimport DraggableField from './DraggableField';\nimport { useFormSubmission } from '../../hooks/useFormSubmission';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormCanvas = ({\n  fields,\n  isPreview,\n  onFieldSelect,\n  onFieldUpdate,\n  onFieldDelete,\n  onDrop,\n  onReorder,\n  formId\n}) => {\n  _s();\n  const [formData, setFormData] = useState({});\n  const {\n    submitForm,\n    submitted,\n    loading,\n    error\n  } = useFormSubmission();\n  const canvasRef = useRef(null);\n\n  // Add validation state\n  const [validationErrors, setValidationErrors] = useState({});\n\n  // Helper function to validate the form\n  const validateForm = (fields, data) => {\n    const errors = {};\n    fields.forEach(field => {\n      if (field.validation) {\n        // Required field validation\n        if (field.validation.required && !data[field.id]) {\n          errors[field.id] = \"This field is required\";\n          return;\n        }\n        if (data[field.id]) {\n          const value = data[field.id];\n\n          // Pattern validation\n          if (field.validation.pattern) {\n            let pattern;\n            switch (field.validation.pattern) {\n              case 'email':\n                pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                break;\n              case 'phone':\n                pattern = /^\\d{10}$/;\n                break;\n              case 'number':\n                pattern = /^\\d+$/;\n                break;\n              case 'custom':\n                if (field.validation.customRule) {\n                  try {\n                    pattern = new RegExp(field.validation.customRule);\n                  } catch (error) {\n                    console.error(\"Invalid regex pattern:\", field.validation.customRule);\n                  }\n                }\n                break;\n              default:\n                break;\n            }\n            if (pattern && !pattern.test(value)) {\n              errors[field.id] = field.validation.errorMessage || \"Invalid format\";\n            }\n          }\n        }\n      }\n    });\n    return errors;\n  };\n\n  // Set up drop target for the form canvas\n  const [{\n    isOver,\n    canDrop\n  }, drop] = useDrop({\n    accept: 'FIELD_TYPE',\n    drop: (item, monitor) => {\n      const canvasRect = canvasRef.current.getBoundingClientRect();\n      const dropY = monitor.getClientOffset().y - canvasRect.top;\n\n      // Calculate insertion index based on mouse position\n      let insertIndex = fields.length; // Default to end\n\n      const fieldElements = canvasRef.current.querySelectorAll('.field-container');\n      for (let i = 0; i < fieldElements.length; i++) {\n        const rect = fieldElements[i].getBoundingClientRect();\n        const fieldMiddle = rect.top + rect.height / 2;\n        if (dropY < fieldMiddle) {\n          insertIndex = i;\n          break;\n        }\n      }\n      onDrop(item.type, insertIndex);\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop()\n    })\n  });\n  const handleFieldChange = (fieldId, value) => {\n    console.log(`Field ${fieldId} changed to:`, value);\n\n    // Update local state\n    setFormData(prev => ({\n      ...prev,\n      [fieldId]: value\n    }));\n\n    // Check if this field has conditions that affect other fields\n    if (isPreview) {\n      const changedField = fields.find(f => f.id === fieldId);\n      if (changedField && changedField.type === 'dropdown' && changedField.conditions) {\n        // Find conditions that match the selected value\n        const activeConditions = changedField.conditions.filter(c => c.optionValue === value && c.action && c.targetId);\n\n        // Apply the conditions\n        activeConditions.forEach(condition => {\n          const targetField = fields.find(f => f.id === condition.targetId);\n          if (!targetField) return;\n          if (condition.action === 'skip_to') {\n            // Scroll to the target field\n            const targetElement = document.getElementById(`field-${condition.targetId}`);\n            if (targetElement) {\n              targetElement.scrollIntoView({\n                behavior: 'smooth'\n              });\n            }\n          }\n\n          // Additional logic for show/hide could be implemented here\n          // This would require modifying the component state to track visibility\n        });\n      }\n    }\n\n    // Update parent state if needed\n    if (onFieldUpdate) {\n      const fieldToUpdate = fields.find(f => f.id === fieldId);\n      if (fieldToUpdate) {\n        onFieldUpdate({\n          ...fieldToUpdate,\n          value: value\n        });\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Form submitted with data:\", formData);\n\n    // Validate form before submission\n    const errors = validateForm(fields, formData);\n    if (Object.keys(errors).length > 0) {\n      // Show validation errors\n      console.error(\"Form validation failed:\", errors);\n      setValidationErrors(errors);\n      return;\n    }\n    if (isPreview && formId) {\n      try {\n        await submitForm(formId, formData);\n      } catch (err) {\n        console.error(\"Error submitting form:\", err);\n      }\n    }\n  };\n\n  // Add drop indicator style\n  const dropIndicatorStyle = isOver && canDrop ? {\n    backgroundColor: 'rgba(59, 130, 246, 0.1)',\n    border: '2px dashed #3b82f6',\n    borderRadius: '0.5rem'\n  } : {};\n\n  // Display submission confirmation\n  if (submitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center padding-responsive\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Form Submitted Successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Thank you for your submission.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: () => window.location.reload(),\n          children: \"Submit Another Response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    ref: node => {\n      drop(node);\n      canvasRef.current = node;\n    },\n    style: {\n      ...dropIndicatorStyle,\n      minHeight: '200px',\n      transition: 'background-color 0.2s, border 0.2s'\n    },\n    children: fields.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center padding-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag fields here from the panel to build your form.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"space-responsive\",\n      onSubmit: handleSubmit,\n      children: [fields.map((field, index) => isPreview ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `field-${field.id}`,\n        className: \"padding-responsive margin-responsive field-container\",\n        children: [/*#__PURE__*/_jsxDEV(FieldRenderer, {\n          field: field,\n          isPreview: isPreview,\n          onChange: value => handleFieldChange(field.id, value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this), validationErrors[field.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 text-sm mt-1\",\n          children: validationErrors[field.id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 19\n        }, this)]\n      }, field.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(DraggableField, {\n        field: field,\n        index: index,\n        onSelect: onFieldSelect,\n        onDelete: onFieldDelete,\n        onMove: onReorder,\n        children: /*#__PURE__*/_jsxDEV(FieldRenderer, {\n          field: field,\n          isPreview: isPreview,\n          onChange: value => handleFieldChange(field.id, value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }, this)\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }, this)), isPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center padding-responsive\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: loading,\n          children: loading ? 'Submitting...' : 'Submit Form'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(FormCanvas, \"D0yssUTTNHTvmsg+yY9PjpO6n8g=\", false, function () {\n  return [useFormSubmission, useDrop];\n});\n_c = FormCanvas;\nexport default FormCanvas;\nvar _c;\n$RefreshReg$(_c, \"FormCanvas\");","map":{"version":3,"names":["React","useState","useRef","useDrop","FieldRenderer","DraggableField","useFormSubmission","jsxDEV","_jsxDEV","FormCanvas","fields","isPreview","onFieldSelect","onFieldUpdate","onFieldDelete","onDrop","onReorder","formId","_s","formData","setFormData","submitForm","submitted","loading","error","canvasRef","validationErrors","setValidationErrors","validateForm","data","errors","forEach","field","validation","required","id","value","pattern","customRule","RegExp","console","test","errorMessage","isOver","canDrop","drop","accept","item","monitor","canvasRect","current","getBoundingClientRect","dropY","getClientOffset","y","top","insertIndex","length","fieldElements","querySelectorAll","i","rect","fieldMiddle","height","type","collect","handleFieldChange","fieldId","log","prev","changedField","find","f","conditions","activeConditions","filter","c","optionValue","action","targetId","condition","targetField","targetElement","document","getElementById","scrollIntoView","behavior","fieldToUpdate","handleSubmit","e","preventDefault","Object","keys","err","dropIndicatorStyle","backgroundColor","border","borderRadius","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","ref","node","style","minHeight","transition","onSubmit","map","index","onChange","onSelect","onDelete","onMove","disabled","_c","$RefreshReg$"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/builder/FormCanvas.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useDrop } from 'react-dnd';\n// Update import path for FieldRenderer\nimport FieldRenderer from '../fields/FieldRenderer';\nimport DraggableField from './DraggableField';\nimport { useFormSubmission } from '../../hooks/useFormSubmission';\n\nconst FormCanvas = ({ \n  fields, \n  isPreview, \n  onFieldSelect, \n  onFieldUpdate, \n  onFieldDelete,\n  onDrop,\n  onReorder,\n  formId \n}) => {\n  const [formData, setFormData] = useState({});\n  const { submitForm, submitted, loading, error } = useFormSubmission();\n  const canvasRef = useRef(null);\n\n  // Add validation state\n  const [validationErrors, setValidationErrors] = useState({});\n\n  // Helper function to validate the form\n  const validateForm = (fields, data) => {\n    const errors = {};\n    \n    fields.forEach(field => {\n      if (field.validation) {\n        // Required field validation\n        if (field.validation.required && !data[field.id]) {\n          errors[field.id] = \"This field is required\";\n          return;\n        }\n        \n        if (data[field.id]) {\n          const value = data[field.id];\n          \n          // Pattern validation\n          if (field.validation.pattern) {\n            let pattern;\n            switch (field.validation.pattern) {\n              case 'email':\n                pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                break;\n              case 'phone':\n                pattern = /^\\d{10}$/;\n                break;\n              case 'number':\n                pattern = /^\\d+$/;\n                break;\n              case 'custom':\n                if (field.validation.customRule) {\n                  try {\n                    pattern = new RegExp(field.validation.customRule);\n                  } catch (error) {\n                    console.error(\"Invalid regex pattern:\", field.validation.customRule);\n                  }\n                }\n                break;\n              default:\n                break;\n            }\n            \n            if (pattern && !pattern.test(value)) {\n              errors[field.id] = field.validation.errorMessage || \"Invalid format\";\n            }\n          }\n        }\n      }\n    });\n    \n    return errors;\n  };\n\n  // Set up drop target for the form canvas\n  const [{ isOver, canDrop }, drop] = useDrop({\n    accept: 'FIELD_TYPE',\n    drop: (item, monitor) => {\n      const canvasRect = canvasRef.current.getBoundingClientRect();\n      const dropY = monitor.getClientOffset().y - canvasRect.top;\n      \n      // Calculate insertion index based on mouse position\n      let insertIndex = fields.length; // Default to end\n      \n      const fieldElements = canvasRef.current.querySelectorAll('.field-container');\n      for (let i = 0; i < fieldElements.length; i++) {\n        const rect = fieldElements[i].getBoundingClientRect();\n        const fieldMiddle = rect.top + rect.height / 2;\n        \n        if (dropY < fieldMiddle) {\n          insertIndex = i;\n          break;\n        }\n      }\n      \n      onDrop(item.type, insertIndex);\n    },\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop(),\n    }),\n  });\n\n  const handleFieldChange = (fieldId, value) => {\n    console.log(`Field ${fieldId} changed to:`, value);\n    \n    // Update local state\n    setFormData(prev => ({\n      ...prev,\n      [fieldId]: value\n    }));\n    \n    // Check if this field has conditions that affect other fields\n    if (isPreview) {\n      const changedField = fields.find(f => f.id === fieldId);\n      if (changedField && changedField.type === 'dropdown' && changedField.conditions) {\n        // Find conditions that match the selected value\n        const activeConditions = changedField.conditions.filter(c => \n          c.optionValue === value && c.action && c.targetId\n        );\n        \n        // Apply the conditions\n        activeConditions.forEach(condition => {\n          const targetField = fields.find(f => f.id === condition.targetId);\n          if (!targetField) return;\n          \n          if (condition.action === 'skip_to') {\n            // Scroll to the target field\n            const targetElement = document.getElementById(`field-${condition.targetId}`);\n            if (targetElement) {\n              targetElement.scrollIntoView({ behavior: 'smooth' });\n            }\n          }\n          \n          // Additional logic for show/hide could be implemented here\n          // This would require modifying the component state to track visibility\n        });\n      }\n    }\n    \n    // Update parent state if needed\n    if (onFieldUpdate) {\n      const fieldToUpdate = fields.find(f => f.id === fieldId);\n      if (fieldToUpdate) {\n        onFieldUpdate({\n          ...fieldToUpdate,\n          value: value\n        });\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"Form submitted with data:\", formData);\n    \n    // Validate form before submission\n    const errors = validateForm(fields, formData);\n    if (Object.keys(errors).length > 0) {\n      // Show validation errors\n      console.error(\"Form validation failed:\", errors);\n      setValidationErrors(errors);\n      return;\n    }\n    \n    if (isPreview && formId) {\n      try {\n        await submitForm(formId, formData);\n      } catch (err) {\n        console.error(\"Error submitting form:\", err);\n      }\n    }\n  };\n\n  // Add drop indicator style\n  const dropIndicatorStyle = isOver && canDrop ? {\n    backgroundColor: 'rgba(59, 130, 246, 0.1)',\n    border: '2px dashed #3b82f6',\n    borderRadius: '0.5rem',\n  } : {};\n\n  // Display submission confirmation\n  if (submitted) {\n    return (\n      <div className=\"card\">\n        <div className=\"text-center padding-responsive\">\n          <h2>Form Submitted Successfully!</h2>\n          <p>Thank you for your submission.</p>\n          <button \n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() => window.location.reload()}\n          >\n            Submit Another Response\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div \n      className=\"card\" \n      ref={(node) => {\n        drop(node);\n        canvasRef.current = node;\n      }}\n      style={{\n        ...dropIndicatorStyle,\n        minHeight: '200px',\n        transition: 'background-color 0.2s, border 0.2s',\n      }}\n    >\n      {fields.length === 0 ? (\n        <div className=\"text-center padding-responsive\">\n          <p>Drag fields here from the panel to build your form.</p>\n        </div>\n      ) : (\n        <form className=\"space-responsive\" onSubmit={handleSubmit}>\n          {fields.map((field, index) => (\n            isPreview ? (\n              <div\n                key={field.id}\n                id={`field-${field.id}`}\n                className=\"padding-responsive margin-responsive field-container\"\n              >\n                <FieldRenderer\n                  field={field}\n                  isPreview={isPreview}\n                  onChange={(value) => handleFieldChange(field.id, value)}\n                />\n                {validationErrors[field.id] && (\n                  <div className=\"text-red-500 text-sm mt-1\">\n                    {validationErrors[field.id]}\n                  </div>\n                )}\n              </div>\n            ) : (\n              <DraggableField\n                key={field.id}\n                field={field}\n                index={index}\n                onSelect={onFieldSelect}\n                onDelete={onFieldDelete}\n                onMove={onReorder}\n              >\n                <FieldRenderer\n                  field={field}\n                  isPreview={isPreview}\n                  onChange={(value) => handleFieldChange(field.id, value)}\n                />\n              </DraggableField>\n            )\n          ))}\n          \n          {isPreview && (\n            <div className=\"text-center padding-responsive\">\n              <button \n                type=\"submit\" \n                className=\"btn btn-primary\"\n                disabled={loading}\n              >\n                {loading ? 'Submitting...' : 'Submit Form'}\n              </button>\n              {error && <div className=\"form-error\">{error}</div>}\n            </div>\n          )}\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default FormCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}