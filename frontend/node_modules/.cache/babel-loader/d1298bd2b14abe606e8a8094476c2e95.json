{"ast":null,"code":"import React from'react';import{useDrag}from'react-dnd';// Define the field types\nconst fieldTypes=[{type:'text',label:'Text Input',icon:'📝'},{type:'dropdown',label:'Dropdown',icon:'▼'},{type:'table',label:'Table',icon:'📊'},{type:'file',label:'File Upload',icon:'📎'}];// Draggable field type component\nconst DraggableFieldType=_ref=>{let{fieldType,label,icon,onClick}=_ref;const[{isDragging},drag]=useDrag({type:'FIELD_TYPE',item:{type:fieldType},collect:monitor=>({isDragging:!!monitor.isDragging()})});return/*#__PURE__*/React.createElement(\"div\",{ref:drag,className:\"btn btn-primary margin-responsive\",onClick:()=>onClick(fieldType),style:{opacity:isDragging?0.5:1,cursor:'grab',display:'flex',alignItems:'center',gap:'0.5rem',marginBottom:'0.75rem'}},/*#__PURE__*/React.createElement(\"span\",null,icon),/*#__PURE__*/React.createElement(\"span\",null,label));};const FieldPalette=_ref2=>{let{onFieldSelect}=_ref2;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",{style:{fontSize:'1.125rem',fontWeight:'600',marginBottom:'1rem',display:'flex',alignItems:'center'}},\"Field Types\",/*#__PURE__*/React.createElement(\"span\",{style:{fontSize:'0.75rem',color:'#6b7280',fontStyle:'italic',fontWeight:'normal',marginLeft:'0.5rem'}},\"(Drag or Click)\")),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',flexDirection:'column'}},fieldTypes.map(field=>/*#__PURE__*/React.createElement(DraggableFieldType,{key:field.type,fieldType:field.type,label:field.label,icon:field.icon,onClick:onFieldSelect})))));};export default FieldPalette;","map":{"version":3,"names":["React","useDrag","fieldTypes","type","label","icon","DraggableFieldType","_ref","fieldType","onClick","isDragging","drag","item","collect","monitor","createElement","ref","className","style","opacity","cursor","display","alignItems","gap","marginBottom","FieldPalette","_ref2","onFieldSelect","fontSize","fontWeight","color","fontStyle","marginLeft","flexDirection","map","field","key"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/builder/FieldPalette.js"],"sourcesContent":["import React from 'react';\nimport { useDrag } from 'react-dnd';\n\n// Define the field types\nconst fieldTypes = [\n  { type: 'text', label: 'Text Input', icon: '📝' },\n  { type: 'dropdown', label: 'Dropdown', icon: '▼' },\n  { type: 'table', label: 'Table', icon: '📊' },\n  { type: 'file', label: 'File Upload', icon: '📎' },\n];\n\n// Draggable field type component\nconst DraggableFieldType = ({ fieldType, label, icon, onClick }) => {\n  const [{ isDragging }, drag] = useDrag({\n    type: 'FIELD_TYPE',\n    item: { type: fieldType },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div\n      ref={drag}\n      className=\"btn btn-primary margin-responsive\"\n      onClick={() => onClick(fieldType)}\n      style={{\n        opacity: isDragging ? 0.5 : 1,\n        cursor: 'grab',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.5rem',\n        marginBottom: '0.75rem',\n      }}\n    >\n      <span>{icon}</span>\n      <span>{label}</span>\n    </div>\n  );\n};\n\nconst FieldPalette = ({ onFieldSelect }) => (\n  <div>\n    <h2 style={{ \n      fontSize: '1.125rem',\n      fontWeight: '600',\n      marginBottom: '1rem',\n      display: 'flex',\n      alignItems: 'center'\n    }}>\n      Field Types\n      <span style={{ \n        fontSize: '0.75rem', \n        color: '#6b7280',\n        fontStyle: 'italic',\n        fontWeight: 'normal',\n        marginLeft: '0.5rem'\n      }}>\n        (Drag or Click)\n      </span>\n    </h2>\n    \n    <div className=\"card\">\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        {fieldTypes.map(field => (\n          <DraggableFieldType \n            key={field.type}\n            fieldType={field.type} \n            label={field.label} \n            icon={field.icon}\n            onClick={onFieldSelect}\n          />\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nexport default FieldPalette;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,WAAW,CAEnC;AACA,KAAM,CAAAC,UAAU,CAAG,CACjB,CAAEC,IAAI,CAAE,MAAM,CAAEC,KAAK,CAAE,YAAY,CAAEC,IAAI,CAAE,IAAK,CAAC,CACjD,CAAEF,IAAI,CAAE,UAAU,CAAEC,KAAK,CAAE,UAAU,CAAEC,IAAI,CAAE,GAAI,CAAC,CAClD,CAAEF,IAAI,CAAE,OAAO,CAAEC,KAAK,CAAE,OAAO,CAAEC,IAAI,CAAE,IAAK,CAAC,CAC7C,CAAEF,IAAI,CAAE,MAAM,CAAEC,KAAK,CAAE,aAAa,CAAEC,IAAI,CAAE,IAAK,CAAC,CACnD,CAED;AACA,KAAM,CAAAC,kBAAkB,CAAGC,IAAA,EAAyC,IAAxC,CAAEC,SAAS,CAAEJ,KAAK,CAAEC,IAAI,CAAEI,OAAQ,CAAC,CAAAF,IAAA,CAC7D,KAAM,CAAC,CAAEG,UAAW,CAAC,CAAEC,IAAI,CAAC,CAAGV,OAAO,CAAC,CACrCE,IAAI,CAAE,YAAY,CAClBS,IAAI,CAAE,CAAET,IAAI,CAAEK,SAAU,CAAC,CACzBK,OAAO,CAAGC,OAAO,GAAM,CACrBJ,UAAU,CAAE,CAAC,CAACI,OAAO,CAACJ,UAAU,CAAC,CACnC,CAAC,CACH,CAAC,CAAC,CAEF,mBACEV,KAAA,CAAAe,aAAA,QACEC,GAAG,CAAEL,IAAK,CACVM,SAAS,CAAC,mCAAmC,CAC7CR,OAAO,CAAEA,CAAA,GAAMA,OAAO,CAACD,SAAS,CAAE,CAClCU,KAAK,CAAE,CACLC,OAAO,CAAET,UAAU,CAAG,GAAG,CAAG,CAAC,CAC7BU,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,MAAM,CACfC,UAAU,CAAE,QAAQ,CACpBC,GAAG,CAAE,QAAQ,CACbC,YAAY,CAAE,SAChB,CAAE,eAEFxB,KAAA,CAAAe,aAAA,aAAOV,IAAW,CAAC,cACnBL,KAAA,CAAAe,aAAA,aAAOX,KAAY,CAChB,CAAC,CAEV,CAAC,CAED,KAAM,CAAAqB,YAAY,CAAGC,KAAA,MAAC,CAAEC,aAAc,CAAC,CAAAD,KAAA,oBACrC1B,KAAA,CAAAe,aAAA,yBACEf,KAAA,CAAAe,aAAA,OAAIG,KAAK,CAAE,CACTU,QAAQ,CAAE,UAAU,CACpBC,UAAU,CAAE,KAAK,CACjBL,YAAY,CAAE,MAAM,CACpBH,OAAO,CAAE,MAAM,CACfC,UAAU,CAAE,QACd,CAAE,EAAC,aAED,cAAAtB,KAAA,CAAAe,aAAA,SAAMG,KAAK,CAAE,CACXU,QAAQ,CAAE,SAAS,CACnBE,KAAK,CAAE,SAAS,CAChBC,SAAS,CAAE,QAAQ,CACnBF,UAAU,CAAE,QAAQ,CACpBG,UAAU,CAAE,QACd,CAAE,EAAC,iBAEG,CACJ,CAAC,cAELhC,KAAA,CAAAe,aAAA,QAAKE,SAAS,CAAC,MAAM,eACnBjB,KAAA,CAAAe,aAAA,QAAKG,KAAK,CAAE,CAAEG,OAAO,CAAE,MAAM,CAAEY,aAAa,CAAE,QAAS,CAAE,EACtD/B,UAAU,CAACgC,GAAG,CAACC,KAAK,eACnBnC,KAAA,CAAAe,aAAA,CAACT,kBAAkB,EACjB8B,GAAG,CAAED,KAAK,CAAChC,IAAK,CAChBK,SAAS,CAAE2B,KAAK,CAAChC,IAAK,CACtBC,KAAK,CAAE+B,KAAK,CAAC/B,KAAM,CACnBC,IAAI,CAAE8B,KAAK,CAAC9B,IAAK,CACjBI,OAAO,CAAEkB,aAAc,CACxB,CACF,CACE,CACF,CACF,CAAC,EACP,CAED,cAAe,CAAAF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}