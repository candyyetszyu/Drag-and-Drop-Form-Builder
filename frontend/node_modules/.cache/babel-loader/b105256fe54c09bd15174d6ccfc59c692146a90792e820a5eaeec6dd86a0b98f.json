{"ast":null,"code":"import{useState,useCallback}from'react';export const useFormState=function(){let initialValues=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let validate=arguments.length>1?arguments[1]:undefined;const[formValues,setFormValues]=useState(initialValues);const[formErrors,setFormErrors]=useState({});const[touchedFields,setTouchedFields]=useState({});const handleInputChange=useCallback(e=>{const{name,value,type,checked}=e.target;setFormValues(prev=>({...prev,[name]:type==='checkbox'?checked:value}));setTouchedFields(prev=>({...prev,[name]:true}));if(validate){const error=validate(name,value,formValues);setFormErrors(prev=>({...prev,[name]:error}));}},[formValues,validate]);const setFieldValue=useCallback((name,value)=>{setFormValues(prev=>({...prev,[name]:value}));if(validate){const error=validate(name,value,formValues);setFormErrors(prev=>({...prev,[name]:error}));}},[formValues,validate]);return{formValues,formErrors,touchedFields,handleInputChange,setFieldValue,setFormValues};};export default useFormState;","map":{"version":3,"names":["useState","useCallback","useFormState","initialValues","arguments","length","undefined","validate","formValues","setFormValues","formErrors","setFormErrors","touchedFields","setTouchedFields","handleInputChange","e","name","value","type","checked","target","prev","error","setFieldValue"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/hooks/useFormState.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nexport const useFormState = (initialValues = {}, validate) => {\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [touchedFields, setTouchedFields] = useState({});\n\n  const handleInputChange = useCallback(\n    (e) => {\n      const { name, value, type, checked } = e.target;\n      setFormValues((prev) => ({ \n        ...prev, \n        [name]: type === 'checkbox' ? checked : value \n      }));\n      setTouchedFields((prev) => ({ ...prev, [name]: true }));\n      \n      if (validate) {\n        const error = validate(name, value, formValues);\n        setFormErrors((prev) => ({ ...prev, [name]: error }));\n      }\n    },\n    [formValues, validate]\n  );\n\n  const setFieldValue = useCallback(\n    (name, value) => {\n      setFormValues((prev) => ({ ...prev, [name]: value }));\n      \n      if (validate) {\n        const error = validate(name, value, formValues);\n        setFormErrors((prev) => ({ ...prev, [name]: error }));\n      }\n    },\n    [formValues, validate]\n  );\n\n  return {\n    formValues,\n    formErrors,\n    touchedFields,\n    handleInputChange,\n    setFieldValue,\n    setFormValues,\n  };\n};\n\nexport default useFormState;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAE7C,MAAO,MAAM,CAAAC,YAAY,CAAG,QAAAA,CAAA,CAAkC,IAAjC,CAAAC,aAAa,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,IAAE,CAAAG,QAAQ,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACvD,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAACG,aAAa,CAAC,CAC3D,KAAM,CAACO,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAChD,KAAM,CAACY,aAAa,CAAEC,gBAAgB,CAAC,CAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAEtD,KAAM,CAAAc,iBAAiB,CAAGb,WAAW,CAClCc,CAAC,EAAK,CACL,KAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAGJ,CAAC,CAACK,MAAM,CAC/CX,aAAa,CAAEY,IAAI,GAAM,CACvB,GAAGA,IAAI,CACP,CAACL,IAAI,EAAGE,IAAI,GAAK,UAAU,CAAGC,OAAO,CAAGF,KAC1C,CAAC,CAAC,CAAC,CACHJ,gBAAgB,CAAEQ,IAAI,GAAM,CAAE,GAAGA,IAAI,CAAE,CAACL,IAAI,EAAG,IAAK,CAAC,CAAC,CAAC,CAEvD,GAAIT,QAAQ,CAAE,CACZ,KAAM,CAAAe,KAAK,CAAGf,QAAQ,CAACS,IAAI,CAAEC,KAAK,CAAET,UAAU,CAAC,CAC/CG,aAAa,CAAEU,IAAI,GAAM,CAAE,GAAGA,IAAI,CAAE,CAACL,IAAI,EAAGM,KAAM,CAAC,CAAC,CAAC,CACvD,CACF,CAAC,CACD,CAACd,UAAU,CAAED,QAAQ,CACvB,CAAC,CAED,KAAM,CAAAgB,aAAa,CAAGtB,WAAW,CAC/B,CAACe,IAAI,CAAEC,KAAK,GAAK,CACfR,aAAa,CAAEY,IAAI,GAAM,CAAE,GAAGA,IAAI,CAAE,CAACL,IAAI,EAAGC,KAAM,CAAC,CAAC,CAAC,CAErD,GAAIV,QAAQ,CAAE,CACZ,KAAM,CAAAe,KAAK,CAAGf,QAAQ,CAACS,IAAI,CAAEC,KAAK,CAAET,UAAU,CAAC,CAC/CG,aAAa,CAAEU,IAAI,GAAM,CAAE,GAAGA,IAAI,CAAE,CAACL,IAAI,EAAGM,KAAM,CAAC,CAAC,CAAC,CACvD,CACF,CAAC,CACD,CAACd,UAAU,CAAED,QAAQ,CACvB,CAAC,CAED,MAAO,CACLC,UAAU,CACVE,UAAU,CACVE,aAAa,CACbE,iBAAiB,CACjBS,aAAa,CACbd,aACF,CAAC,CACH,CAAC,CAED,cAAe,CAAAP,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}