{"ast":null,"code":"var _jsxFileName = \"/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/builder/FormBuilderPage.js\";\nimport React, { useState, useRef } from 'react';\nimport { useApi } from '../../hooks/useApi';\nimport { useFormState } from '../../hooks/useFormState';\nimport FieldPalette from './FieldPalette';\nimport FormCanvas from './FormCanvas';\nimport FieldConfigPanel from './FieldConfigPanel';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nconst FormBuilderPage = () => {\n  // Add a ref for the field configuration section\n  const configSectionRef = useRef(null);\n  const [fields, setFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n  const [isPreview, setIsPreview] = useState(false);\n  const {\n    loading,\n    error,\n    post\n  } = useApi();\n  const {\n    formValues,\n    handleInputChange\n  } = useFormState({\n    title: 'Untitled Form',\n    description: ''\n  });\n  const handleAddField = fieldType => {\n    console.log(\"Adding field of type:\", fieldType);\n\n    // Create a new field based on type\n    const newField = {\n      id: Date.now().toString(),\n      type: fieldType,\n      question: `New ${fieldType} question`,\n      isRequired: false\n    };\n\n    // Add type-specific properties\n    if (fieldType === 'dropdown') {\n      newField.options = [{\n        value: 'Option 1',\n        label: 'Option 1'\n      }, {\n        value: 'Option 2',\n        label: 'Option 2'\n      }];\n    } else if (fieldType === 'table') {\n      newField.columns = [{\n        name: 'Column 1',\n        type: 'text'\n      }, {\n        name: 'Column 2',\n        type: 'text'\n      }];\n    } else if (fieldType === 'text') {\n      newField.minLength = 0;\n      newField.maxLength = 100;\n    }\n\n    // Add field to state\n    setFields(prevFields => [...prevFields, newField]);\n    setSelectedField(newField);\n    console.log(\"Field added:\", newField);\n  };\n  const handleFieldSelection = field => {\n    console.log(\"Selected field:\", field);\n    setSelectedField(field);\n\n    // Scroll to the config section when a field is selected\n    if (configSectionRef.current) {\n      configSectionRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  const handleFieldUpdate = updatedField => {\n    console.log(\"Updating field:\", updatedField);\n\n    // Check if we're updating a single field or the entire fields array\n    if (Array.isArray(updatedField)) {\n      setFields(updatedField);\n    } else {\n      setFields(prevFields => prevFields.map(field => field.id === updatedField.id ? updatedField : field));\n\n      // Update selected field if it's the one being edited\n      if (selectedField && selectedField.id === updatedField.id) {\n        setSelectedField(updatedField);\n      }\n    }\n  };\n  const handleFieldDelete = fieldId => {\n    console.log(\"Deleting field:\", fieldId);\n    setFields(prevFields => prevFields.filter(field => field.id !== fieldId));\n\n    // Clear selection if the deleted field was selected\n    if (selectedField && selectedField.id === fieldId) {\n      setSelectedField(null);\n    }\n  };\n  const handleSaveForm = async () => {\n    try {\n      const formData = {\n        ...formValues,\n        fields\n      };\n      console.log(\"Saving form:\", formData);\n      const result = await post('/forms', formData);\n      alert('Form saved successfully!');\n      return result;\n    } catch (err) {\n      console.error('Error saving form:', err);\n    }\n  };\n  const togglePreview = () => {\n    console.log(\"Toggling preview mode. Current state:\", isPreview);\n    setIsPreview(!isPreview);\n  };\n\n  // Handle dropping field from palette to canvas\n  const handleFieldDrop = (fieldType, index) => {\n    console.log(`Dropped ${fieldType} at index ${index}`);\n\n    // Create new field with the given type\n    const newField = {\n      id: Date.now().toString(),\n      type: fieldType,\n      question: `New ${fieldType} question`,\n      isRequired: false\n    };\n\n    // Add type-specific properties\n    if (fieldType === 'dropdown') {\n      newField.options = [{\n        value: 'Option 1',\n        label: 'Option 1'\n      }, {\n        value: 'Option 2',\n        label: 'Option 2'\n      }];\n    } else if (fieldType === 'table') {\n      newField.columns = [{\n        name: 'Column 1',\n        type: 'text'\n      }, {\n        name: 'Column 2',\n        type: 'text'\n      }];\n    } else if (fieldType === 'text') {\n      newField.minLength = 0;\n      newField.maxLength = 100;\n    }\n\n    // Insert the field at the specified index\n    const newFields = [...fields];\n    if (index !== undefined && index >= 0) {\n      newFields.splice(index, 0, newField);\n    } else {\n      newFields.push(newField);\n    }\n    setFields(newFields);\n    setSelectedField(newField);\n  };\n\n  // Handle reordering fields\n  const handleReorderField = (dragIndex, hoverIndex) => {\n    const draggedField = fields[dragIndex];\n\n    // Create a new array without mutating the original\n    const newFields = [...fields];\n    newFields.splice(dragIndex, 1); // Remove from old position\n    newFields.splice(hoverIndex, 0, draggedField); // Insert at new position\n\n    setFields(newFields);\n  };\n\n  // Function to scroll to configuration section\n  const scrollToConfig = () => {\n    if (configSectionRef.current) {\n      configSectionRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(DndProvider, {\n    backend: HTML5Backend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"padding-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, isPreview ? 'Form Preview' : 'Form Builder'), !isPreview && selectedField && /*#__PURE__*/React.createElement(\"div\", {\n    onClick: scrollToConfig,\n    style: {\n      cursor: 'pointer',\n      textDecoration: 'underline',\n      color: '#2563eb',\n      marginTop: '0.5rem',\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, \"Jump to Field Configuration \\u2192\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '1rem',\n      margin: '1rem 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: formValues.title,\n    onChange: handleInputChange,\n    className: \"input\",\n    placeholder: \"Form Title\",\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    onClick: togglePreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, isPreview ? 'Edit Form' : 'Preview Form'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: handleSaveForm,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, loading ? 'Saving...' : 'Save Form')), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, error)), /*#__PURE__*/React.createElement(\"main\", {\n    style: {\n      display: 'flex',\n      gap: '1rem',\n      minHeight: '500px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, !isPreview && /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"padding-responsive\",\n    style: {\n      width: '250px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FieldPalette, {\n    onFieldSelect: handleAddField,\n    onDragDrop: handleFieldDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"padding-responsive\",\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormCanvas, {\n    fields: fields,\n    isPreview: isPreview,\n    onFieldSelect: handleFieldSelection,\n    onFieldUpdate: handleFieldUpdate,\n    onFieldDelete: handleFieldDelete,\n    onDrop: handleFieldDrop,\n    onReorder: handleReorderField,\n    formId: \"preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  })), !isPreview && selectedField && /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"padding-responsive\",\n    style: {\n      width: '300px',\n      backgroundColor: '#ffffff',\n      border: '1px solid #e5e7eb',\n      borderRadius: '0.5rem',\n      boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)'\n    },\n    ref: configSectionRef,\n    id: \"field-configuration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      paddingBottom: '0.5rem',\n      marginBottom: '0.5rem',\n      borderBottom: '1px solid #e5e7eb',\n      fontWeight: '600',\n      fontSize: '1.125rem',\n      color: '#111827'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }, \"Field Configuration\"), /*#__PURE__*/React.createElement(FieldConfigPanel, {\n    field: selectedField,\n    onFieldUpdate: handleFieldUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  })))));\n};\nexport default FormBuilderPage;","map":{"version":3,"names":["React","useState","useRef","useApi","useFormState","FieldPalette","FormCanvas","FieldConfigPanel","DndProvider","HTML5Backend","FormBuilderPage","configSectionRef","fields","setFields","selectedField","setSelectedField","isPreview","setIsPreview","loading","error","post","formValues","handleInputChange","title","description","handleAddField","fieldType","console","log","newField","id","Date","now","toString","type","question","isRequired","options","value","label","columns","name","minLength","maxLength","prevFields","handleFieldSelection","field","current","scrollIntoView","behavior","handleFieldUpdate","updatedField","Array","isArray","map","handleFieldDelete","fieldId","filter","handleSaveForm","formData","result","alert","err","togglePreview","handleFieldDrop","index","newFields","undefined","splice","push","handleReorderField","dragIndex","hoverIndex","draggedField","scrollToConfig","createElement","backend","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","style","cursor","textDecoration","color","marginTop","display","gap","margin","onChange","placeholder","flex","disabled","minHeight","width","onFieldSelect","onDragDrop","onFieldUpdate","onFieldDelete","onDrop","onReorder","formId","backgroundColor","border","borderRadius","boxShadow","ref","paddingBottom","marginBottom","borderBottom","fontWeight","fontSize"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/builder/FormBuilderPage.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useApi } from '../../hooks/useApi';\nimport { useFormState } from '../../hooks/useFormState';\nimport FieldPalette from './FieldPalette';\nimport FormCanvas from './FormCanvas';\nimport FieldConfigPanel from './FieldConfigPanel';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nconst FormBuilderPage = () => {\n  // Add a ref for the field configuration section\n  const configSectionRef = useRef(null);\n  \n  const [fields, setFields] = useState([]);\n  const [selectedField, setSelectedField] = useState(null);\n  const [isPreview, setIsPreview] = useState(false);\n  const { loading, error, post } = useApi();\n  const { formValues, handleInputChange } = useFormState({\n    title: 'Untitled Form',\n    description: '',\n  });\n\n  const handleAddField = (fieldType) => {\n    console.log(\"Adding field of type:\", fieldType);\n    \n    // Create a new field based on type\n    const newField = {\n      id: Date.now().toString(),\n      type: fieldType,\n      question: `New ${fieldType} question`,\n      isRequired: false,\n    };\n    \n    // Add type-specific properties\n    if (fieldType === 'dropdown') {\n      newField.options = [\n        { value: 'Option 1', label: 'Option 1' },\n        { value: 'Option 2', label: 'Option 2' }\n      ];\n    } else if (fieldType === 'table') {\n      newField.columns = [\n        { name: 'Column 1', type: 'text' },\n        { name: 'Column 2', type: 'text' }\n      ];\n    } else if (fieldType === 'text') {\n      newField.minLength = 0;\n      newField.maxLength = 100;\n    }\n    \n    // Add field to state\n    setFields(prevFields => [...prevFields, newField]);\n    setSelectedField(newField);\n    \n    console.log(\"Field added:\", newField);\n  };\n\n  const handleFieldSelection = (field) => {\n    console.log(\"Selected field:\", field);\n    setSelectedField(field);\n    \n    // Scroll to the config section when a field is selected\n    if (configSectionRef.current) {\n      configSectionRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  const handleFieldUpdate = (updatedField) => {\n    console.log(\"Updating field:\", updatedField);\n    \n    // Check if we're updating a single field or the entire fields array\n    if (Array.isArray(updatedField)) {\n      setFields(updatedField);\n    } else {\n      setFields(prevFields => \n        prevFields.map(field => \n          field.id === updatedField.id ? updatedField : field\n        )\n      );\n      \n      // Update selected field if it's the one being edited\n      if (selectedField && selectedField.id === updatedField.id) {\n        setSelectedField(updatedField);\n      }\n    }\n  };\n\n  const handleFieldDelete = (fieldId) => {\n    console.log(\"Deleting field:\", fieldId);\n    \n    setFields(prevFields => prevFields.filter(field => field.id !== fieldId));\n    \n    // Clear selection if the deleted field was selected\n    if (selectedField && selectedField.id === fieldId) {\n      setSelectedField(null);\n    }\n  };\n\n  const handleSaveForm = async () => {\n    try {\n      const formData = {\n        ...formValues,\n        fields,\n      };\n      \n      console.log(\"Saving form:\", formData);\n      \n      const result = await post('/forms', formData);\n      alert('Form saved successfully!');\n      return result;\n    } catch (err) {\n      console.error('Error saving form:', err);\n    }\n  };\n\n  const togglePreview = () => {\n    console.log(\"Toggling preview mode. Current state:\", isPreview);\n    setIsPreview(!isPreview);\n  };\n\n  // Handle dropping field from palette to canvas\n  const handleFieldDrop = (fieldType, index) => {\n    console.log(`Dropped ${fieldType} at index ${index}`);\n    \n    // Create new field with the given type\n    const newField = {\n      id: Date.now().toString(),\n      type: fieldType,\n      question: `New ${fieldType} question`,\n      isRequired: false,\n    };\n    \n    // Add type-specific properties\n    if (fieldType === 'dropdown') {\n      newField.options = [\n        { value: 'Option 1', label: 'Option 1' },\n        { value: 'Option 2', label: 'Option 2' }\n      ];\n    } else if (fieldType === 'table') {\n      newField.columns = [\n        { name: 'Column 1', type: 'text' },\n        { name: 'Column 2', type: 'text' }\n      ];\n    } else if (fieldType === 'text') {\n      newField.minLength = 0;\n      newField.maxLength = 100;\n    }\n    \n    // Insert the field at the specified index\n    const newFields = [...fields];\n    if (index !== undefined && index >= 0) {\n      newFields.splice(index, 0, newField);\n    } else {\n      newFields.push(newField);\n    }\n    \n    setFields(newFields);\n    setSelectedField(newField);\n  };\n\n  // Handle reordering fields\n  const handleReorderField = (dragIndex, hoverIndex) => {\n    const draggedField = fields[dragIndex];\n    \n    // Create a new array without mutating the original\n    const newFields = [...fields];\n    newFields.splice(dragIndex, 1); // Remove from old position\n    newFields.splice(hoverIndex, 0, draggedField); // Insert at new position\n    \n    setFields(newFields);\n  };\n\n  // Function to scroll to configuration section\n  const scrollToConfig = () => {\n    if (configSectionRef.current) {\n      configSectionRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"container\">\n        <header className=\"padding-responsive\">\n          <h1>{isPreview ? 'Form Preview' : 'Form Builder'}</h1>\n          \n          {!isPreview && selectedField && (\n            <div \n              onClick={scrollToConfig} \n              style={{\n                cursor: 'pointer',\n                textDecoration: 'underline',\n                color: '#2563eb',\n                marginTop: '0.5rem',\n                display: 'inline-block'\n              }}\n            >\n              Jump to Field Configuration →\n            </div>\n          )}\n          \n          <div style={{ display: 'flex', gap: '1rem', margin: '1rem 0' }}>\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={formValues.title}\n              onChange={handleInputChange}\n              className=\"input\"\n              placeholder=\"Form Title\"\n              style={{ flex: 1 }}\n            />\n            <button \n              className=\"btn btn-secondary\"\n              onClick={togglePreview}\n            >\n              {isPreview ? 'Edit Form' : 'Preview Form'}\n            </button>\n            <button \n              className=\"btn btn-primary\"\n              onClick={handleSaveForm}\n              disabled={loading}\n            >\n              {loading ? 'Saving...' : 'Save Form'}\n            </button>\n          </div>\n          {error && <div className=\"form-error\">{error}</div>}\n        </header>\n        \n        <main style={{ display: 'flex', gap: '1rem', minHeight: '500px' }}>\n          {!isPreview && (\n            <aside className=\"padding-responsive\" style={{ width: '250px' }}>\n              <FieldPalette onFieldSelect={handleAddField} onDragDrop={handleFieldDrop} />\n            </aside>\n          )}\n          \n          <section className=\"padding-responsive\" style={{ flex: 1 }}>\n            <FormCanvas\n              fields={fields}\n              isPreview={isPreview}\n              onFieldSelect={handleFieldSelection}\n              onFieldUpdate={handleFieldUpdate}\n              onFieldDelete={handleFieldDelete}\n              onDrop={handleFieldDrop}\n              onReorder={handleReorderField}\n              formId=\"preview\"\n            />\n          </section>\n          \n          {!isPreview && selectedField && (\n            <aside \n              className=\"padding-responsive\" \n              style={{ \n                width: '300px',\n                backgroundColor: '#ffffff',\n                border: '1px solid #e5e7eb',\n                borderRadius: '0.5rem',\n                boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)'\n              }}\n              ref={configSectionRef}\n              id=\"field-configuration\"\n            >\n              <h2 style={{ \n                paddingBottom: '0.5rem',\n                marginBottom: '0.5rem',\n                borderBottom: '1px solid #e5e7eb',\n                fontWeight: '600',\n                fontSize: '1.125rem',\n                color: '#111827'\n              }}>\n                Field Configuration\n              </h2>\n              <FieldConfigPanel \n                field={selectedField} \n                onFieldUpdate={handleFieldUpdate} \n              />\n            </aside>\n          )}\n        </main>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default FormBuilderPage;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,YAAY,QAAQ,0BAA0B;AACvD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,WAAW,QAAQ,WAAW;AACvC,SAASC,YAAY,QAAQ,yBAAyB;AAEtD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B;EACA,MAAMC,gBAAgB,GAAGT,MAAM,CAAC,IAAI,CAAC;EAErC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEiB,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGjB,MAAM,CAAC,CAAC;EACzC,MAAM;IAAEkB,UAAU;IAAEC;EAAkB,CAAC,GAAGlB,YAAY,CAAC;IACrDmB,KAAK,EAAE,eAAe;IACtBC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAIC,SAAS,IAAK;IACpCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,SAAS,CAAC;;IAE/C;IACA,MAAMG,QAAQ,GAAG;MACfC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzBC,IAAI,EAAER,SAAS;MACfS,QAAQ,EAAE,OAAOT,SAAS,WAAW;MACrCU,UAAU,EAAE;IACd,CAAC;;IAED;IACA,IAAIV,SAAS,KAAK,UAAU,EAAE;MAC5BG,QAAQ,CAACQ,OAAO,GAAG,CACjB;QAAEC,KAAK,EAAE,UAAU;QAAEC,KAAK,EAAE;MAAW,CAAC,EACxC;QAAED,KAAK,EAAE,UAAU;QAAEC,KAAK,EAAE;MAAW,CAAC,CACzC;IACH,CAAC,MAAM,IAAIb,SAAS,KAAK,OAAO,EAAE;MAChCG,QAAQ,CAACW,OAAO,GAAG,CACjB;QAAEC,IAAI,EAAE,UAAU;QAAEP,IAAI,EAAE;MAAO,CAAC,EAClC;QAAEO,IAAI,EAAE,UAAU;QAAEP,IAAI,EAAE;MAAO,CAAC,CACnC;IACH,CAAC,MAAM,IAAIR,SAAS,KAAK,MAAM,EAAE;MAC/BG,QAAQ,CAACa,SAAS,GAAG,CAAC;MACtBb,QAAQ,CAACc,SAAS,GAAG,GAAG;IAC1B;;IAEA;IACA9B,SAAS,CAAC+B,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAEf,QAAQ,CAAC,CAAC;IAClDd,gBAAgB,CAACc,QAAQ,CAAC;IAE1BF,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,QAAQ,CAAC;EACvC,CAAC;EAED,MAAMgB,oBAAoB,GAAIC,KAAK,IAAK;IACtCnB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEkB,KAAK,CAAC;IACrC/B,gBAAgB,CAAC+B,KAAK,CAAC;;IAEvB;IACA,IAAInC,gBAAgB,CAACoC,OAAO,EAAE;MAC5BpC,gBAAgB,CAACoC,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IACjE;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAIC,YAAY,IAAK;IAC1CxB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEuB,YAAY,CAAC;;IAE5C;IACA,IAAIC,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,EAAE;MAC/BtC,SAAS,CAACsC,YAAY,CAAC;IACzB,CAAC,MAAM;MACLtC,SAAS,CAAC+B,UAAU,IAClBA,UAAU,CAACU,GAAG,CAACR,KAAK,IAClBA,KAAK,CAAChB,EAAE,KAAKqB,YAAY,CAACrB,EAAE,GAAGqB,YAAY,GAAGL,KAChD,CACF,CAAC;;MAED;MACA,IAAIhC,aAAa,IAAIA,aAAa,CAACgB,EAAE,KAAKqB,YAAY,CAACrB,EAAE,EAAE;QACzDf,gBAAgB,CAACoC,YAAY,CAAC;MAChC;IACF;EACF,CAAC;EAED,MAAMI,iBAAiB,GAAIC,OAAO,IAAK;IACrC7B,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE4B,OAAO,CAAC;IAEvC3C,SAAS,CAAC+B,UAAU,IAAIA,UAAU,CAACa,MAAM,CAACX,KAAK,IAAIA,KAAK,CAAChB,EAAE,KAAK0B,OAAO,CAAC,CAAC;;IAEzE;IACA,IAAI1C,aAAa,IAAIA,aAAa,CAACgB,EAAE,KAAK0B,OAAO,EAAE;MACjDzC,gBAAgB,CAAC,IAAI,CAAC;IACxB;EACF,CAAC;EAED,MAAM2C,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG;QACf,GAAGtC,UAAU;QACbT;MACF,CAAC;MAEDe,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE+B,QAAQ,CAAC;MAErC,MAAMC,MAAM,GAAG,MAAMxC,IAAI,CAAC,QAAQ,EAAEuC,QAAQ,CAAC;MAC7CE,KAAK,CAAC,0BAA0B,CAAC;MACjC,OAAOD,MAAM;IACf,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZnC,OAAO,CAACR,KAAK,CAAC,oBAAoB,EAAE2C,GAAG,CAAC;IAC1C;EACF,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BpC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEZ,SAAS,CAAC;IAC/DC,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMgD,eAAe,GAAGA,CAACtC,SAAS,EAAEuC,KAAK,KAAK;IAC5CtC,OAAO,CAACC,GAAG,CAAC,WAAWF,SAAS,aAAauC,KAAK,EAAE,CAAC;;IAErD;IACA,MAAMpC,QAAQ,GAAG;MACfC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzBC,IAAI,EAAER,SAAS;MACfS,QAAQ,EAAE,OAAOT,SAAS,WAAW;MACrCU,UAAU,EAAE;IACd,CAAC;;IAED;IACA,IAAIV,SAAS,KAAK,UAAU,EAAE;MAC5BG,QAAQ,CAACQ,OAAO,GAAG,CACjB;QAAEC,KAAK,EAAE,UAAU;QAAEC,KAAK,EAAE;MAAW,CAAC,EACxC;QAAED,KAAK,EAAE,UAAU;QAAEC,KAAK,EAAE;MAAW,CAAC,CACzC;IACH,CAAC,MAAM,IAAIb,SAAS,KAAK,OAAO,EAAE;MAChCG,QAAQ,CAACW,OAAO,GAAG,CACjB;QAAEC,IAAI,EAAE,UAAU;QAAEP,IAAI,EAAE;MAAO,CAAC,EAClC;QAAEO,IAAI,EAAE,UAAU;QAAEP,IAAI,EAAE;MAAO,CAAC,CACnC;IACH,CAAC,MAAM,IAAIR,SAAS,KAAK,MAAM,EAAE;MAC/BG,QAAQ,CAACa,SAAS,GAAG,CAAC;MACtBb,QAAQ,CAACc,SAAS,GAAG,GAAG;IAC1B;;IAEA;IACA,MAAMuB,SAAS,GAAG,CAAC,GAAGtD,MAAM,CAAC;IAC7B,IAAIqD,KAAK,KAAKE,SAAS,IAAIF,KAAK,IAAI,CAAC,EAAE;MACrCC,SAAS,CAACE,MAAM,CAACH,KAAK,EAAE,CAAC,EAAEpC,QAAQ,CAAC;IACtC,CAAC,MAAM;MACLqC,SAAS,CAACG,IAAI,CAACxC,QAAQ,CAAC;IAC1B;IAEAhB,SAAS,CAACqD,SAAS,CAAC;IACpBnD,gBAAgB,CAACc,QAAQ,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMyC,kBAAkB,GAAGA,CAACC,SAAS,EAAEC,UAAU,KAAK;IACpD,MAAMC,YAAY,GAAG7D,MAAM,CAAC2D,SAAS,CAAC;;IAEtC;IACA,MAAML,SAAS,GAAG,CAAC,GAAGtD,MAAM,CAAC;IAC7BsD,SAAS,CAACE,MAAM,CAACG,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;IAChCL,SAAS,CAACE,MAAM,CAACI,UAAU,EAAE,CAAC,EAAEC,YAAY,CAAC,CAAC,CAAC;;IAE/C5D,SAAS,CAACqD,SAAS,CAAC;EACtB,CAAC;;EAED;EACA,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI/D,gBAAgB,CAACoC,OAAO,EAAE;MAC5BpC,gBAAgB,CAACoC,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IACjE;EACF,CAAC;EAED,oBACEjD,KAAA,CAAA2E,aAAA,CAACnE,WAAW;IAACoE,OAAO,EAAEnE,YAAa;IAAAoE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjClF,KAAA,CAAA2E,aAAA;IAAKQ,SAAS,EAAC,WAAW;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBlF,KAAA,CAAA2E,aAAA;IAAQQ,SAAS,EAAC,oBAAoB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpClF,KAAA,CAAA2E,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKlE,SAAS,GAAG,cAAc,GAAG,cAAmB,CAAC,EAErD,CAACA,SAAS,IAAIF,aAAa,iBAC1Bd,KAAA,CAAA2E,aAAA;IACES,OAAO,EAAEV,cAAe;IACxBW,KAAK,EAAE;MACLC,MAAM,EAAE,SAAS;MACjBC,cAAc,EAAE,WAAW;MAC3BC,KAAK,EAAE,SAAS;MAChBC,SAAS,EAAE,QAAQ;MACnBC,OAAO,EAAE;IACX,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACH,oCAEI,CACN,eAEDlF,KAAA,CAAA2E,aAAA;IAAKU,KAAK,EAAE;MAAEK,OAAO,EAAE,MAAM;MAAEC,GAAG,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7DlF,KAAA,CAAA2E,aAAA;IACEzC,IAAI,EAAC,MAAM;IACXO,IAAI,EAAC,OAAO;IACZH,KAAK,EAAEjB,UAAU,CAACE,KAAM;IACxBsE,QAAQ,EAAEvE,iBAAkB;IAC5B6D,SAAS,EAAC,OAAO;IACjBW,WAAW,EAAC,YAAY;IACxBT,KAAK,EAAE;MAAEU,IAAI,EAAE;IAAE,CAAE;IAAAlB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACpB,CAAC,eACFlF,KAAA,CAAA2E,aAAA;IACEQ,SAAS,EAAC,mBAAmB;IAC7BC,OAAO,EAAErB,aAAc;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEtBlE,SAAS,GAAG,WAAW,GAAG,cACrB,CAAC,eACThB,KAAA,CAAA2E,aAAA;IACEQ,SAAS,EAAC,iBAAiB;IAC3BC,OAAO,EAAE1B,cAAe;IACxBsC,QAAQ,EAAE9E,OAAQ;IAAA2D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEjBhE,OAAO,GAAG,WAAW,GAAG,WACnB,CACL,CAAC,EACLC,KAAK,iBAAInB,KAAA,CAAA2E,aAAA;IAAKQ,SAAS,EAAC,YAAY;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE/D,KAAW,CAC5C,CAAC,eAETnB,KAAA,CAAA2E,aAAA;IAAMU,KAAK,EAAE;MAAEK,OAAO,EAAE,MAAM;MAAEC,GAAG,EAAE,MAAM;MAAEM,SAAS,EAAE;IAAQ,CAAE;IAAApB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/D,CAAClE,SAAS,iBACThB,KAAA,CAAA2E,aAAA;IAAOQ,SAAS,EAAC,oBAAoB;IAACE,KAAK,EAAE;MAAEa,KAAK,EAAE;IAAQ,CAAE;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9DlF,KAAA,CAAA2E,aAAA,CAACtE,YAAY;IAAC8F,aAAa,EAAE1E,cAAe;IAAC2E,UAAU,EAAEpC,eAAgB;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACtE,CACR,eAEDlF,KAAA,CAAA2E,aAAA;IAASQ,SAAS,EAAC,oBAAoB;IAACE,KAAK,EAAE;MAAEU,IAAI,EAAE;IAAE,CAAE;IAAAlB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzDlF,KAAA,CAAA2E,aAAA,CAACrE,UAAU;IACTM,MAAM,EAAEA,MAAO;IACfI,SAAS,EAAEA,SAAU;IACrBmF,aAAa,EAAEtD,oBAAqB;IACpCwD,aAAa,EAAEnD,iBAAkB;IACjCoD,aAAa,EAAE/C,iBAAkB;IACjCgD,MAAM,EAAEvC,eAAgB;IACxBwC,SAAS,EAAElC,kBAAmB;IAC9BmC,MAAM,EAAC,SAAS;IAAA5B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjB,CACM,CAAC,EAET,CAAClE,SAAS,IAAIF,aAAa,iBAC1Bd,KAAA,CAAA2E,aAAA;IACEQ,SAAS,EAAC,oBAAoB;IAC9BE,KAAK,EAAE;MACLa,KAAK,EAAE,OAAO;MACdQ,eAAe,EAAE,SAAS;MAC1BC,MAAM,EAAE,mBAAmB;MAC3BC,YAAY,EAAE,QAAQ;MACtBC,SAAS,EAAE;IACb,CAAE;IACFC,GAAG,EAAEnG,gBAAiB;IACtBmB,EAAE,EAAC,qBAAqB;IAAA+C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAExBlF,KAAA,CAAA2E,aAAA;IAAIU,KAAK,EAAE;MACT0B,aAAa,EAAE,QAAQ;MACvBC,YAAY,EAAE,QAAQ;MACtBC,YAAY,EAAE,mBAAmB;MACjCC,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAE,UAAU;MACpB3B,KAAK,EAAE;IACT,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,qBAEC,CAAC,eACLlF,KAAA,CAAA2E,aAAA,CAACpE,gBAAgB;IACfuC,KAAK,EAAEhC,aAAc;IACrBuF,aAAa,EAAEnD,iBAAkB;IAAA2B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAClC,CACI,CAEL,CACH,CACM,CAAC;AAElB,CAAC;AAED,eAAexE,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}