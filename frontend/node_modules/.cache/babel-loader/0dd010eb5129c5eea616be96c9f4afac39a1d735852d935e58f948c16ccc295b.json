{"ast":null,"code":"import axios from'axios';// Define the API base URL\nconst BASE_API_URL=process.env.REACT_APP_API_URL||'http://localhost:3001/api';// Create an axios instance with default configuration\nconst api=axios.create({baseURL:BASE_API_URL,headers:{'Content-Type':'application/json'},timeout:10000// Set a timeout for API requests\n});// Add request interceptor for logging and authentication\napi.interceptors.request.use(config=>{var _config$method;console.log(`API Request: ${(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase()} ${config.url}`);// Add authentication token if available\nconst token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{console.error('API Request Error:',error);return Promise.reject(error);});// Add response interceptor for error handling\napi.interceptors.response.use(response=>{console.log(`API Response: ${response.status}`,response.data);return response;},error=>{if(error.response){console.error(`API Error (${error.response.status}):`,error.response.data);}else if(error.request){console.error('API Error: No response received',error.request);}else{console.error('API Error:',error.message);}return Promise.reject(error);});// Utility functions for common API operations\nconst apiUtils={get:url=>api.get(url).then(response=>response.data),post:(url,data)=>api.post(url,data).then(response=>response.data),put:(url,data)=>api.put(url,data).then(response=>response.data),delete:url=>api.delete(url).then(response=>response.data)};export{api,apiUtils,BASE_API_URL};","map":{"version":3,"names":["axios","BASE_API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","data","message","apiUtils","get","then","post","put","delete"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/api/apiConfig.js"],"sourcesContent":["import axios from 'axios';\n\n// Define the API base URL\nconst BASE_API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n// Create an axios instance with default configuration\nconst api = axios.create({\n  baseURL: BASE_API_URL,\n  headers: { 'Content-Type': 'application/json' },\n  timeout: 10000 // Set a timeout for API requests\n});\n\n// Add request interceptor for logging and authentication\napi.interceptors.request.use(\n  (config) => {\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    // Add authentication token if available\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    console.log(`API Response: ${response.status}`, response.data);\n    return response;\n  },\n  (error) => {\n    if (error.response) {\n      console.error(`API Error (${error.response.status}):`, error.response.data);\n    } else if (error.request) {\n      console.error('API Error: No response received', error.request);\n    } else {\n      console.error('API Error:', error.message);\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Utility functions for common API operations\nconst apiUtils = {\n  get: (url) => api.get(url).then((response) => response.data),\n  post: (url, data) => api.post(url, data).then((response) => response.data),\n  put: (url, data) => api.put(url, data).then((response) => response.data),\n  delete: (url) => api.delete(url).then((response) => response.data),\n};\n\nexport { api, apiUtils, BASE_API_URL };"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAEjF;AACA,KAAM,CAAAC,GAAG,CAAGL,KAAK,CAACM,MAAM,CAAC,CACvBC,OAAO,CAAEN,YAAY,CACrBO,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,OAAO,CAAE,KAAM;AACjB,CAAC,CAAC,CAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,KAAAC,cAAA,CACVC,OAAO,CAACC,GAAG,CAAC,iBAAAF,cAAA,CAAgBD,MAAM,CAACI,MAAM,UAAAH,cAAA,iBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,IAAIL,MAAM,CAACM,GAAG,EAAE,CAAC,CACzE;AACA,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTP,MAAM,CAACL,OAAO,CAACe,aAAa,CAAG,UAAUH,KAAK,EAAE,CAClD,CACA,MAAO,CAAAP,MAAM,CACf,CAAC,CACAW,KAAK,EAAK,CACTT,OAAO,CAACS,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1C,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAnB,GAAG,CAACK,YAAY,CAACiB,QAAQ,CAACf,GAAG,CAC1Be,QAAQ,EAAK,CACZZ,OAAO,CAACC,GAAG,CAAC,iBAAiBW,QAAQ,CAACC,MAAM,EAAE,CAAED,QAAQ,CAACE,IAAI,CAAC,CAC9D,MAAO,CAAAF,QAAQ,CACjB,CAAC,CACAH,KAAK,EAAK,CACT,GAAIA,KAAK,CAACG,QAAQ,CAAE,CAClBZ,OAAO,CAACS,KAAK,CAAC,cAAcA,KAAK,CAACG,QAAQ,CAACC,MAAM,IAAI,CAAEJ,KAAK,CAACG,QAAQ,CAACE,IAAI,CAAC,CAC7E,CAAC,IAAM,IAAIL,KAAK,CAACb,OAAO,CAAE,CACxBI,OAAO,CAACS,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAACb,OAAO,CAAC,CACjE,CAAC,IAAM,CACLI,OAAO,CAACS,KAAK,CAAC,YAAY,CAAEA,KAAK,CAACM,OAAO,CAAC,CAC5C,CACA,MAAO,CAAAL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACA,KAAM,CAAAO,QAAQ,CAAG,CACfC,GAAG,CAAGb,GAAG,EAAKd,GAAG,CAAC2B,GAAG,CAACb,GAAG,CAAC,CAACc,IAAI,CAAEN,QAAQ,EAAKA,QAAQ,CAACE,IAAI,CAAC,CAC5DK,IAAI,CAAEA,CAACf,GAAG,CAAEU,IAAI,GAAKxB,GAAG,CAAC6B,IAAI,CAACf,GAAG,CAAEU,IAAI,CAAC,CAACI,IAAI,CAAEN,QAAQ,EAAKA,QAAQ,CAACE,IAAI,CAAC,CAC1EM,GAAG,CAAEA,CAAChB,GAAG,CAAEU,IAAI,GAAKxB,GAAG,CAAC8B,GAAG,CAAChB,GAAG,CAAEU,IAAI,CAAC,CAACI,IAAI,CAAEN,QAAQ,EAAKA,QAAQ,CAACE,IAAI,CAAC,CACxEO,MAAM,CAAGjB,GAAG,EAAKd,GAAG,CAAC+B,MAAM,CAACjB,GAAG,CAAC,CAACc,IAAI,CAAEN,QAAQ,EAAKA,QAAQ,CAACE,IAAI,CACnE,CAAC,CAED,OAASxB,GAAG,CAAE0B,QAAQ,CAAE9B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}