{"ast":null,"code":"var _jsxFileName = \"/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/shared/TableField.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nconst FieldContainer = styled.div`\n  margin-bottom: 1rem;\n  padding: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background: white;\n`;\nconst Question = styled.div`\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n`;\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 1rem;\n`;\nconst Th = styled.th`\n  padding: 0.5rem;\n  border: 1px solid #ddd;\n  background: #f5f5f5;\n`;\nconst Td = styled.td`\n  padding: 0.5rem;\n  border: 1px solid #ddd;\n`;\nconst AddRowButton = styled.button`\n  margin-top: 1rem;\n  padding: 0.5rem 1rem;\n  background: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background: #0056b3;\n  }\n`;\nconst TableField = ({\n  question,\n  required,\n  columns = [],\n  value = [],\n  onChange,\n  isPreview = false\n}) => {\n  const [rows, setRows] = useState(value && value.length ? value : []);\n\n  // Sync with parent component when value changes\n  useEffect(() => {\n    if (value && JSON.stringify(value) !== JSON.stringify(rows)) {\n      setRows(value.length ? value : []);\n    }\n  }, [value]);\n\n  // Create an empty row based on current columns\n  const createEmptyRow = () => {\n    return columns.reduce((acc, col) => {\n      const key = col.id || col.name;\n      acc[key] = '';\n      return acc;\n    }, {});\n  };\n\n  // Handle adding a new row\n  const handleAddRow = () => {\n    console.log(\"Adding row, current rows:\", rows);\n    console.log(\"Columns:\", columns);\n    if (!columns.length) {\n      console.log(\"No columns defined, cannot add row\");\n      return;\n    }\n    const newRow = createEmptyRow();\n    console.log(\"Created new empty row:\", newRow);\n    const newRows = [...rows, newRow];\n    console.log(\"New rows array:\", newRows);\n    setRows(newRows);\n    if (onChange) {\n      console.log(\"Calling onChange with new rows\");\n      onChange(newRows);\n    }\n  };\n\n  // Handle cell value changes\n  const handleCellChange = (rowIndex, columnKey, newValue) => {\n    console.log(`Changing cell at row ${rowIndex}, column ${columnKey} to:`, newValue);\n    const newRows = rows.map((row, index) => {\n      if (index === rowIndex) {\n        return {\n          ...row,\n          [columnKey]: newValue\n        };\n      }\n      return row;\n    });\n    setRows(newRows);\n    if (onChange) {\n      onChange(newRows);\n    }\n  };\n\n  // Handle removing a row\n  const handleRemoveRow = rowIndex => {\n    console.log(`Removing row at index ${rowIndex}`);\n    const newRows = rows.filter((_, index) => index !== rowIndex);\n    setRows(newRows);\n    if (onChange) {\n      onChange(newRows);\n    }\n  };\n\n  // Initialize with at least one row if we have columns but no rows\n  useEffect(() => {\n    if (columns.length > 0 && rows.length === 0 && isPreview) {\n      console.log(\"Initializing with one empty row\");\n      handleAddRow();\n    }\n  }, [columns, isPreview]);\n  return /*#__PURE__*/React.createElement(FieldContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, question, required && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 22\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, columns.map((column, index) => /*#__PURE__*/React.createElement(Th, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, column.name)), isPreview && /*#__PURE__*/React.createElement(Th, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, rows.map((row, rowIndex) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: rowIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, columns.map((column, colIndex) => {\n    var _column$options;\n    const columnKey = column.id || column.name;\n    return /*#__PURE__*/React.createElement(Td, {\n      key: colIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, column.type === 'dropdown' ? /*#__PURE__*/React.createElement(\"select\", {\n      value: row[columnKey] || '',\n      onChange: e => handleCellChange(rowIndex, columnKey, e.target.value),\n      disabled: !isPreview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, \"Select\"), (_column$options = column.options) === null || _column$options === void 0 ? void 0 : _column$options.map((option, optIndex) => /*#__PURE__*/React.createElement(\"option\", {\n      key: optIndex,\n      value: option.value || option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 27\n      }\n    }, option.label || option.value || option))) : /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: row[columnKey] || '',\n      onChange: e => handleCellChange(rowIndex, columnKey, e.target.value),\n      disabled: !isPreview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    }));\n  }), isPreview && /*#__PURE__*/React.createElement(Td, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleRemoveRow(rowIndex),\n    style: {\n      padding: '0.25rem',\n      backgroundColor: '#f87171',\n      color: 'white',\n      borderRadius: '0.25rem',\n      width: '24px',\n      height: '24px',\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, \"\\u2715\")))))), isPreview && /*#__PURE__*/React.createElement(AddRowButton, {\n    onClick: handleAddRow,\n    disabled: columns.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, \"Add Row\"));\n};\nexport default TableField;","map":{"version":3,"names":["React","useState","useEffect","styled","FieldContainer","div","Question","Table","table","Th","th","Td","td","AddRowButton","button","TableField","question","required","columns","value","onChange","isPreview","rows","setRows","length","JSON","stringify","createEmptyRow","reduce","acc","col","key","id","name","handleAddRow","console","log","newRow","newRows","handleCellChange","rowIndex","columnKey","newValue","map","row","index","handleRemoveRow","filter","_","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","column","colIndex","_column$options","type","e","target","disabled","options","option","optIndex","label","onClick","padding","backgroundColor","borderRadius","width","height","display","alignItems","justifyContent"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/components/shared/TableField.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst FieldContainer = styled.div`\n  margin-bottom: 1rem;\n  padding: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background: white;\n`;\n\nconst Question = styled.div`\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 1rem;\n`;\n\nconst Th = styled.th`\n  padding: 0.5rem;\n  border: 1px solid #ddd;\n  background: #f5f5f5;\n`;\n\nconst Td = styled.td`\n  padding: 0.5rem;\n  border: 1px solid #ddd;\n`;\n\nconst AddRowButton = styled.button`\n  margin-top: 1rem;\n  padding: 0.5rem 1rem;\n  background: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background: #0056b3;\n  }\n`;\n\nconst TableField = ({\n  question,\n  required,\n  columns = [],\n  value = [],\n  onChange,\n  isPreview = false\n}) => {\n  const [rows, setRows] = useState(value && value.length ? value : []);\n\n  // Sync with parent component when value changes\n  useEffect(() => {\n    if (value && JSON.stringify(value) !== JSON.stringify(rows)) {\n      setRows(value.length ? value : []);\n    }\n  }, [value]);\n\n  // Create an empty row based on current columns\n  const createEmptyRow = () => {\n    return columns.reduce((acc, col) => {\n      const key = col.id || col.name;\n      acc[key] = '';\n      return acc;\n    }, {});\n  };\n\n  // Handle adding a new row\n  const handleAddRow = () => {\n    console.log(\"Adding row, current rows:\", rows);\n    console.log(\"Columns:\", columns);\n    \n    if (!columns.length) {\n      console.log(\"No columns defined, cannot add row\");\n      return;\n    }\n    \n    const newRow = createEmptyRow();\n    console.log(\"Created new empty row:\", newRow);\n    \n    const newRows = [...rows, newRow];\n    console.log(\"New rows array:\", newRows);\n    \n    setRows(newRows);\n    \n    if (onChange) {\n      console.log(\"Calling onChange with new rows\");\n      onChange(newRows);\n    }\n  };\n\n  // Handle cell value changes\n  const handleCellChange = (rowIndex, columnKey, newValue) => {\n    console.log(`Changing cell at row ${rowIndex}, column ${columnKey} to:`, newValue);\n    \n    const newRows = rows.map((row, index) => {\n      if (index === rowIndex) {\n        return { ...row, [columnKey]: newValue };\n      }\n      return row;\n    });\n    \n    setRows(newRows);\n    \n    if (onChange) {\n      onChange(newRows);\n    }\n  };\n\n  // Handle removing a row\n  const handleRemoveRow = (rowIndex) => {\n    console.log(`Removing row at index ${rowIndex}`);\n    \n    const newRows = rows.filter((_, index) => index !== rowIndex);\n    setRows(newRows);\n    \n    if (onChange) {\n      onChange(newRows);\n    }\n  };\n\n  // Initialize with at least one row if we have columns but no rows\n  useEffect(() => {\n    if (columns.length > 0 && rows.length === 0 && isPreview) {\n      console.log(\"Initializing with one empty row\");\n      handleAddRow();\n    }\n  }, [columns, isPreview]);\n\n  return (\n    <FieldContainer>\n      <Question>\n        {question}\n        {required && <span style={{ color: 'red' }}> *</span>}\n      </Question>\n      <Table>\n        <thead>\n          <tr>\n            {columns.map((column, index) => (\n              <Th key={index}>\n                {column.name}\n              </Th>\n            ))}\n            {isPreview && (\n              <Th>\n                Actions\n              </Th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {columns.map((column, colIndex) => {\n                const columnKey = column.id || column.name;\n                return (\n                  <Td key={colIndex}>\n                    {column.type === 'dropdown' ? (\n                      <select\n                        value={row[columnKey] || ''}\n                        onChange={(e) => handleCellChange(rowIndex, columnKey, e.target.value)}\n                        disabled={!isPreview}\n                      >\n                        <option value=\"\">Select</option>\n                        {column.options?.map((option, optIndex) => (\n                          <option key={optIndex} value={option.value || option}>\n                            {option.label || option.value || option}\n                          </option>\n                        ))}\n                      </select>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        value={row[columnKey] || ''}\n                        onChange={(e) => handleCellChange(rowIndex, columnKey, e.target.value)}\n                        disabled={!isPreview}\n                      />\n                    )}\n                  </Td>\n                );\n              })}\n              {isPreview && (\n                <Td>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleRemoveRow(rowIndex)}\n                    style={{ \n                      padding: '0.25rem',\n                      backgroundColor: '#f87171',\n                      color: 'white',\n                      borderRadius: '0.25rem',\n                      width: '24px',\n                      height: '24px',\n                      display: 'inline-flex',\n                      alignItems: 'center',\n                      justifyContent: 'center'\n                    }}\n                  >\n                    ✕\n                  </button>\n                </Td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      {isPreview && (\n        <AddRowButton onClick={handleAddRow} disabled={columns.length === 0}>\n          Add Row\n        </AddRowButton>\n      )}\n    </FieldContainer>\n  );\n};\n\nexport default TableField;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,QAAQ,GAAGH,MAAM,CAACE,GAAG;AAC3B;AACA;AACA,CAAC;AAED,MAAME,KAAK,GAAGJ,MAAM,CAACK,KAAK;AAC1B;AACA;AACA;AACA,CAAC;AAED,MAAMC,EAAE,GAAGN,MAAM,CAACO,EAAE;AACpB;AACA;AACA;AACA,CAAC;AAED,MAAMC,EAAE,GAAGR,MAAM,CAACS,EAAE;AACpB;AACA;AACA,CAAC;AAED,MAAMC,YAAY,GAAGV,MAAM,CAACW,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAC;EAClBC,QAAQ;EACRC,QAAQ;EACRC,OAAO,GAAG,EAAE;EACZC,KAAK,GAAG,EAAE;EACVC,QAAQ;EACRC,SAAS,GAAG;AACd,CAAC,KAAK;EACJ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAACkB,KAAK,IAAIA,KAAK,CAACK,MAAM,GAAGL,KAAK,GAAG,EAAE,CAAC;;EAEpE;EACAjB,SAAS,CAAC,MAAM;IACd,IAAIiB,KAAK,IAAIM,IAAI,CAACC,SAAS,CAACP,KAAK,CAAC,KAAKM,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,EAAE;MAC3DC,OAAO,CAACJ,KAAK,CAACK,MAAM,GAAGL,KAAK,GAAG,EAAE,CAAC;IACpC;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAOT,OAAO,CAACU,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MAClC,MAAMC,GAAG,GAAGD,GAAG,CAACE,EAAE,IAAIF,GAAG,CAACG,IAAI;MAC9BJ,GAAG,CAACE,GAAG,CAAC,GAAG,EAAE;MACb,OAAOF,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACR,CAAC;;EAED;EACA,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEd,IAAI,CAAC;IAC9Ca,OAAO,CAACC,GAAG,CAAC,UAAU,EAAElB,OAAO,CAAC;IAEhC,IAAI,CAACA,OAAO,CAACM,MAAM,EAAE;MACnBW,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjD;IACF;IAEA,MAAMC,MAAM,GAAGV,cAAc,CAAC,CAAC;IAC/BQ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,MAAM,CAAC;IAE7C,MAAMC,OAAO,GAAG,CAAC,GAAGhB,IAAI,EAAEe,MAAM,CAAC;IACjCF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEE,OAAO,CAAC;IAEvCf,OAAO,CAACe,OAAO,CAAC;IAEhB,IAAIlB,QAAQ,EAAE;MACZe,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7ChB,QAAQ,CAACkB,OAAO,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,KAAK;IAC1DP,OAAO,CAACC,GAAG,CAAC,wBAAwBI,QAAQ,YAAYC,SAAS,MAAM,EAAEC,QAAQ,CAAC;IAElF,MAAMJ,OAAO,GAAGhB,IAAI,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MACvC,IAAIA,KAAK,KAAKL,QAAQ,EAAE;QACtB,OAAO;UAAE,GAAGI,GAAG;UAAE,CAACH,SAAS,GAAGC;QAAS,CAAC;MAC1C;MACA,OAAOE,GAAG;IACZ,CAAC,CAAC;IAEFrB,OAAO,CAACe,OAAO,CAAC;IAEhB,IAAIlB,QAAQ,EAAE;MACZA,QAAQ,CAACkB,OAAO,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMQ,eAAe,GAAIN,QAAQ,IAAK;IACpCL,OAAO,CAACC,GAAG,CAAC,yBAAyBI,QAAQ,EAAE,CAAC;IAEhD,MAAMF,OAAO,GAAGhB,IAAI,CAACyB,MAAM,CAAC,CAACC,CAAC,EAAEH,KAAK,KAAKA,KAAK,KAAKL,QAAQ,CAAC;IAC7DjB,OAAO,CAACe,OAAO,CAAC;IAEhB,IAAIlB,QAAQ,EAAE;MACZA,QAAQ,CAACkB,OAAO,CAAC;IACnB;EACF,CAAC;;EAED;EACApC,SAAS,CAAC,MAAM;IACd,IAAIgB,OAAO,CAACM,MAAM,GAAG,CAAC,IAAIF,IAAI,CAACE,MAAM,KAAK,CAAC,IAAIH,SAAS,EAAE;MACxDc,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9CF,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAAChB,OAAO,EAAEG,SAAS,CAAC,CAAC;EAExB,oBACErB,KAAA,CAAAiD,aAAA,CAAC7C,cAAc;IAAA8C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACbvD,KAAA,CAAAiD,aAAA,CAAC3C,QAAQ;IAAA4C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACNvC,QAAQ,EACRC,QAAQ,iBAAIjB,KAAA,CAAAiD,aAAA;IAAMO,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,IAAQ,CAC5C,CAAC,eACXvD,KAAA,CAAAiD,aAAA,CAAC1C,KAAK;IAAA2C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACJvD,KAAA,CAAAiD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEvD,KAAA,CAAAiD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGrC,OAAO,CAACyB,GAAG,CAAC,CAACe,MAAM,EAAEb,KAAK,kBACzB7C,KAAA,CAAAiD,aAAA,CAACxC,EAAE;IAACsB,GAAG,EAAEc,KAAM;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACZG,MAAM,CAACzB,IACN,CACL,CAAC,EACDZ,SAAS,iBACRrB,KAAA,CAAAiD,aAAA,CAACxC,EAAE;IAAAyC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAEA,CAEJ,CACC,CAAC,eACRvD,KAAA,CAAAiD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGjC,IAAI,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEJ,QAAQ,kBACtBxC,KAAA,CAAAiD,aAAA;IAAIlB,GAAG,EAAES,QAAS;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACfrC,OAAO,CAACyB,GAAG,CAAC,CAACe,MAAM,EAAEC,QAAQ,KAAK;IAAA,IAAAC,eAAA;IACjC,MAAMnB,SAAS,GAAGiB,MAAM,CAAC1B,EAAE,IAAI0B,MAAM,CAACzB,IAAI;IAC1C,oBACEjC,KAAA,CAAAiD,aAAA,CAACtC,EAAE;MAACoB,GAAG,EAAE4B,QAAS;MAAAT,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACfG,MAAM,CAACG,IAAI,KAAK,UAAU,gBACzB7D,KAAA,CAAAiD,aAAA;MACE9B,KAAK,EAAEyB,GAAG,CAACH,SAAS,CAAC,IAAI,EAAG;MAC5BrB,QAAQ,EAAG0C,CAAC,IAAKvB,gBAAgB,CAACC,QAAQ,EAAEC,SAAS,EAAEqB,CAAC,CAACC,MAAM,CAAC5C,KAAK,CAAE;MACvE6C,QAAQ,EAAE,CAAC3C,SAAU;MAAA6B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAErBvD,KAAA,CAAAiD,aAAA;MAAQ9B,KAAK,EAAC,EAAE;MAAA+B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,QAAc,CAAC,GAAAK,eAAA,GAC/BF,MAAM,CAACO,OAAO,cAAAL,eAAA,uBAAdA,eAAA,CAAgBjB,GAAG,CAAC,CAACuB,MAAM,EAAEC,QAAQ,kBACpCnE,KAAA,CAAAiD,aAAA;MAAQlB,GAAG,EAAEoC,QAAS;MAAChD,KAAK,EAAE+C,MAAM,CAAC/C,KAAK,IAAI+C,MAAO;MAAAhB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAClDW,MAAM,CAACE,KAAK,IAAIF,MAAM,CAAC/C,KAAK,IAAI+C,MAC3B,CACT,CACK,CAAC,gBAETlE,KAAA,CAAAiD,aAAA;MACEY,IAAI,EAAC,MAAM;MACX1C,KAAK,EAAEyB,GAAG,CAACH,SAAS,CAAC,IAAI,EAAG;MAC5BrB,QAAQ,EAAG0C,CAAC,IAAKvB,gBAAgB,CAACC,QAAQ,EAAEC,SAAS,EAAEqB,CAAC,CAACC,MAAM,CAAC5C,KAAK,CAAE;MACvE6C,QAAQ,EAAE,CAAC3C,SAAU;MAAA6B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACtB,CAED,CAAC;EAET,CAAC,CAAC,EACDlC,SAAS,iBACRrB,KAAA,CAAAiD,aAAA,CAACtC,EAAE;IAAAuC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACDvD,KAAA,CAAAiD,aAAA;IACEY,IAAI,EAAC,QAAQ;IACbQ,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAACN,QAAQ,CAAE;IACzCgB,KAAK,EAAE;MACLc,OAAO,EAAE,SAAS;MAClBC,eAAe,EAAE,SAAS;MAC1Bd,KAAK,EAAE,OAAO;MACde,YAAY,EAAE,SAAS;MACvBC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE,aAAa;MACtBC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE;IAClB,CAAE;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACH,QAEO,CACN,CAEJ,CACL,CACI,CACF,CAAC,EACPlC,SAAS,iBACRrB,KAAA,CAAAiD,aAAA,CAACpC,YAAY;IAACwD,OAAO,EAAEnC,YAAa;IAAC8B,QAAQ,EAAE9C,OAAO,CAACM,MAAM,KAAK,CAAE;IAAA0B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAEvD,CAEF,CAAC;AAErB,CAAC;AAED,eAAexC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}