{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nexport const useFormState = (initialValues = {}, validate) => {\n  _s();\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [touchedFields, setTouchedFields] = useState({});\n  const handleInputChange = useCallback(e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormValues(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n    setTouchedFields(prev => ({\n      ...prev,\n      [name]: true\n    }));\n    if (validate) {\n      const error = validate(name, value, formValues);\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: error\n      }));\n    }\n  }, [formValues, validate]);\n  const setFieldValue = useCallback((name, value) => {\n    setFormValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (validate) {\n      const error = validate(name, value, formValues);\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: error\n      }));\n    }\n  }, [formValues, validate]);\n  return {\n    formValues,\n    formErrors,\n    touchedFields,\n    handleInputChange,\n    setFieldValue,\n    setFormValues\n  };\n};\n_s(useFormState, \"bCvYqiPGHdSqbiz9Qf+decu2eps=\");\nexport default useFormState;","map":{"version":3,"names":["useState","useCallback","useFormState","initialValues","validate","_s","formValues","setFormValues","formErrors","setFormErrors","touchedFields","setTouchedFields","handleInputChange","e","name","value","type","checked","target","prev","error","setFieldValue"],"sources":["/Users/judyyip/Downloads/Website/Marketing Campaign/frontend/src/hooks/useFormState.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nexport const useFormState = (initialValues = {}, validate) => {\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [touchedFields, setTouchedFields] = useState({});\n\n  const handleInputChange = useCallback(\n    (e) => {\n      const { name, value, type, checked } = e.target;\n      setFormValues((prev) => ({ \n        ...prev, \n        [name]: type === 'checkbox' ? checked : value \n      }));\n      setTouchedFields((prev) => ({ ...prev, [name]: true }));\n      \n      if (validate) {\n        const error = validate(name, value, formValues);\n        setFormErrors((prev) => ({ ...prev, [name]: error }));\n      }\n    },\n    [formValues, validate]\n  );\n\n  const setFieldValue = useCallback(\n    (name, value) => {\n      setFormValues((prev) => ({ ...prev, [name]: value }));\n      \n      if (validate) {\n        const error = validate(name, value, formValues);\n        setFormErrors((prev) => ({ ...prev, [name]: error }));\n      }\n    },\n    [formValues, validate]\n  );\n\n  return {\n    formValues,\n    formErrors,\n    touchedFields,\n    handleInputChange,\n    setFieldValue,\n    setFormValues,\n  };\n};\n\nexport default useFormState;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,OAAO,MAAMC,YAAY,GAAGA,CAACC,aAAa,GAAG,CAAC,CAAC,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAACG,aAAa,CAAC;EAC3D,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAMY,iBAAiB,GAAGX,WAAW,CAClCY,CAAC,IAAK;IACL,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGJ,CAAC,CAACK,MAAM;IAC/CX,aAAa,CAAEY,IAAI,KAAM;MACvB,GAAGA,IAAI;MACP,CAACL,IAAI,GAAGE,IAAI,KAAK,UAAU,GAAGC,OAAO,GAAGF;IAC1C,CAAC,CAAC,CAAC;IACHJ,gBAAgB,CAAEQ,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACL,IAAI,GAAG;IAAK,CAAC,CAAC,CAAC;IAEvD,IAAIV,QAAQ,EAAE;MACZ,MAAMgB,KAAK,GAAGhB,QAAQ,CAACU,IAAI,EAAEC,KAAK,EAAET,UAAU,CAAC;MAC/CG,aAAa,CAAEU,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACL,IAAI,GAAGM;MAAM,CAAC,CAAC,CAAC;IACvD;EACF,CAAC,EACD,CAACd,UAAU,EAAEF,QAAQ,CACvB,CAAC;EAED,MAAMiB,aAAa,GAAGpB,WAAW,CAC/B,CAACa,IAAI,EAAEC,KAAK,KAAK;IACfR,aAAa,CAAEY,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACL,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;IAErD,IAAIX,QAAQ,EAAE;MACZ,MAAMgB,KAAK,GAAGhB,QAAQ,CAACU,IAAI,EAAEC,KAAK,EAAET,UAAU,CAAC;MAC/CG,aAAa,CAAEU,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACL,IAAI,GAAGM;MAAM,CAAC,CAAC,CAAC;IACvD;EACF,CAAC,EACD,CAACd,UAAU,EAAEF,QAAQ,CACvB,CAAC;EAED,OAAO;IACLE,UAAU;IACVE,UAAU;IACVE,aAAa;IACbE,iBAAiB;IACjBS,aAAa;IACbd;EACF,CAAC;AACH,CAAC;AAACF,EAAA,CA1CWH,YAAY;AA4CzB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}